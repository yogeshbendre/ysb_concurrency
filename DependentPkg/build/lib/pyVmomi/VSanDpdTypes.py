# ******* WARNING - AUTO GENERATED CODE - DO NOT EDIT *******
from .VmomiSupport import CreateDataType, CreateManagedType
from .VmomiSupport import CreateEnumType
from .VmomiSupport import AddVersion, AddVersionParent
from .VmomiSupport import AddBreakingChangesInfo
from .VmomiSupport import F_LINK, F_LINKABLE
from .VmomiSupport import F_OPTIONAL, F_SECRET
from .VmomiSupport import newestVersions, stableVersions
from .VmomiSupport import publicVersions, dottedVersions
from .VmomiSupport import oldestVersions

AddVersion("vim.version.version10", "vim25", "6.0", 0, "vim25")
AddVersion("vim.version.version11", "vim25", "6.5", 0, "vim25")
AddVersion("vmodl.query.version.version1", "", "", 0, "vim25")
AddVersion("vim.version.version12", "vim25", "6.7", 0, "vim25")
AddVersion("vmodl.query.version.version2", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version3", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version4", "", "", 0, "vim25")
AddVersion("vmodl.reflect.version.version2", "reflect", "2.0", 0, "reflect")
AddVersion("vmodl.reflect.version.version1", "reflect", "1.0", 0, "reflect")
AddVersion("vim.version.version13", "vim25", "6.7.1", 0, "vim25")
AddVersion("vim.version.version1", "vim2", "2.0", 0, "vim25")
AddVersion("vim.version.version2", "vim25", "2.5", 0, "vim25")
AddVersion("vim.version.version3", "vim25", "2.5u2", 0, "vim25")
AddVersion("vim.version.version4", "vim25", "2.5u2server", 0, "vim25")
AddVersion("vim.version.version5", "vim25", "4.0", 0, "vim25")
AddVersion("vim.version.version6", "vim25", "4.1", 0, "vim25")
AddVersion("vim.version.version7", "vim25", "5.0", 0, "vim25")
AddVersion("vim.version.version8", "vim25", "5.1", 0, "vim25")
AddVersion("vim.version.version9", "vim25", "5.5", 0, "vim25")
AddVersion("vmodl.version.version2", "", "", 0, "vim25")
AddVersion("vim.vsandp.version.version8", "VsanDp", "6.8.0", 0, "vim25")
AddVersion("vmodl.version.version1", "", "", 0, "vim25")
AddVersion("vmodl.version.version0", "", "", 0, "vim25")
AddVersionParent("vim.version.version10", "vim.version.version10")
AddVersionParent("vim.version.version10", "vmodl.query.version.version1")
AddVersionParent("vim.version.version10", "vmodl.query.version.version2")
AddVersionParent("vim.version.version10", "vmodl.query.version.version3")
AddVersionParent("vim.version.version10", "vmodl.query.version.version4")
AddVersionParent("vim.version.version10", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.version10", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version10", "vim.version.version1")
AddVersionParent("vim.version.version10", "vim.version.version2")
AddVersionParent("vim.version.version10", "vim.version.version3")
AddVersionParent("vim.version.version10", "vim.version.version4")
AddVersionParent("vim.version.version10", "vim.version.version5")
AddVersionParent("vim.version.version10", "vim.version.version6")
AddVersionParent("vim.version.version10", "vim.version.version7")
AddVersionParent("vim.version.version10", "vim.version.version8")
AddVersionParent("vim.version.version10", "vim.version.version9")
AddVersionParent("vim.version.version10", "vmodl.version.version2")
AddVersionParent("vim.version.version10", "vmodl.version.version1")
AddVersionParent("vim.version.version10", "vmodl.version.version0")
AddVersionParent("vim.version.version11", "vim.version.version10")
AddVersionParent("vim.version.version11", "vim.version.version11")
AddVersionParent("vim.version.version11", "vmodl.query.version.version1")
AddVersionParent("vim.version.version11", "vmodl.query.version.version2")
AddVersionParent("vim.version.version11", "vmodl.query.version.version3")
AddVersionParent("vim.version.version11", "vmodl.query.version.version4")
AddVersionParent("vim.version.version11", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.version11", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version11", "vim.version.version1")
AddVersionParent("vim.version.version11", "vim.version.version2")
AddVersionParent("vim.version.version11", "vim.version.version3")
AddVersionParent("vim.version.version11", "vim.version.version4")
AddVersionParent("vim.version.version11", "vim.version.version5")
AddVersionParent("vim.version.version11", "vim.version.version6")
AddVersionParent("vim.version.version11", "vim.version.version7")
AddVersionParent("vim.version.version11", "vim.version.version8")
AddVersionParent("vim.version.version11", "vim.version.version9")
AddVersionParent("vim.version.version11", "vmodl.version.version2")
AddVersionParent("vim.version.version11", "vmodl.version.version1")
AddVersionParent("vim.version.version11", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version1", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version1", "vmodl.version.version0")
AddVersionParent("vim.version.version12", "vim.version.version10")
AddVersionParent("vim.version.version12", "vim.version.version11")
AddVersionParent("vim.version.version12", "vmodl.query.version.version1")
AddVersionParent("vim.version.version12", "vim.version.version12")
AddVersionParent("vim.version.version12", "vmodl.query.version.version2")
AddVersionParent("vim.version.version12", "vmodl.query.version.version3")
AddVersionParent("vim.version.version12", "vmodl.query.version.version4")
AddVersionParent("vim.version.version12", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.version12", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version12", "vim.version.version1")
AddVersionParent("vim.version.version12", "vim.version.version2")
AddVersionParent("vim.version.version12", "vim.version.version3")
AddVersionParent("vim.version.version12", "vim.version.version4")
AddVersionParent("vim.version.version12", "vim.version.version5")
AddVersionParent("vim.version.version12", "vim.version.version6")
AddVersionParent("vim.version.version12", "vim.version.version7")
AddVersionParent("vim.version.version12", "vim.version.version8")
AddVersionParent("vim.version.version12", "vim.version.version9")
AddVersionParent("vim.version.version12", "vmodl.version.version2")
AddVersionParent("vim.version.version12", "vmodl.version.version1")
AddVersionParent("vim.version.version12", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version2", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version2", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version2", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version3")
AddVersionParent("vmodl.query.version.version3", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version3", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version3")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version4")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version2")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version0")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.reflect.version.version2")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.reflect.version.version1")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.version.version2")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.version.version0")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.reflect.version.version1")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version2")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version1")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version0")
AddVersionParent("vim.version.version13", "vim.version.version10")
AddVersionParent("vim.version.version13", "vim.version.version11")
AddVersionParent("vim.version.version13", "vmodl.query.version.version1")
AddVersionParent("vim.version.version13", "vim.version.version12")
AddVersionParent("vim.version.version13", "vmodl.query.version.version2")
AddVersionParent("vim.version.version13", "vmodl.query.version.version3")
AddVersionParent("vim.version.version13", "vmodl.query.version.version4")
AddVersionParent("vim.version.version13", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.version13", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version13", "vim.version.version13")
AddVersionParent("vim.version.version13", "vim.version.version1")
AddVersionParent("vim.version.version13", "vim.version.version2")
AddVersionParent("vim.version.version13", "vim.version.version3")
AddVersionParent("vim.version.version13", "vim.version.version4")
AddVersionParent("vim.version.version13", "vim.version.version5")
AddVersionParent("vim.version.version13", "vim.version.version6")
AddVersionParent("vim.version.version13", "vim.version.version7")
AddVersionParent("vim.version.version13", "vim.version.version8")
AddVersionParent("vim.version.version13", "vim.version.version9")
AddVersionParent("vim.version.version13", "vmodl.version.version2")
AddVersionParent("vim.version.version13", "vmodl.version.version1")
AddVersionParent("vim.version.version13", "vmodl.version.version0")
AddVersionParent("vim.version.version1", "vmodl.query.version.version1")
AddVersionParent("vim.version.version1", "vim.version.version1")
AddVersionParent("vim.version.version1", "vmodl.version.version0")
AddVersionParent("vim.version.version2", "vmodl.query.version.version1")
AddVersionParent("vim.version.version2", "vim.version.version1")
AddVersionParent("vim.version.version2", "vim.version.version2")
AddVersionParent("vim.version.version2", "vmodl.version.version0")
AddVersionParent("vim.version.version3", "vmodl.query.version.version1")
AddVersionParent("vim.version.version3", "vim.version.version1")
AddVersionParent("vim.version.version3", "vim.version.version2")
AddVersionParent("vim.version.version3", "vim.version.version3")
AddVersionParent("vim.version.version3", "vmodl.version.version0")
AddVersionParent("vim.version.version4", "vmodl.query.version.version1")
AddVersionParent("vim.version.version4", "vim.version.version1")
AddVersionParent("vim.version.version4", "vim.version.version2")
AddVersionParent("vim.version.version4", "vim.version.version3")
AddVersionParent("vim.version.version4", "vim.version.version4")
AddVersionParent("vim.version.version4", "vmodl.version.version0")
AddVersionParent("vim.version.version5", "vmodl.query.version.version1")
AddVersionParent("vim.version.version5", "vmodl.query.version.version2")
AddVersionParent("vim.version.version5", "vim.version.version1")
AddVersionParent("vim.version.version5", "vim.version.version2")
AddVersionParent("vim.version.version5", "vim.version.version3")
AddVersionParent("vim.version.version5", "vim.version.version4")
AddVersionParent("vim.version.version5", "vim.version.version5")
AddVersionParent("vim.version.version5", "vmodl.version.version1")
AddVersionParent("vim.version.version5", "vmodl.version.version0")
AddVersionParent("vim.version.version6", "vmodl.query.version.version1")
AddVersionParent("vim.version.version6", "vmodl.query.version.version2")
AddVersionParent("vim.version.version6", "vmodl.query.version.version3")
AddVersionParent("vim.version.version6", "vim.version.version1")
AddVersionParent("vim.version.version6", "vim.version.version2")
AddVersionParent("vim.version.version6", "vim.version.version3")
AddVersionParent("vim.version.version6", "vim.version.version4")
AddVersionParent("vim.version.version6", "vim.version.version5")
AddVersionParent("vim.version.version6", "vim.version.version6")
AddVersionParent("vim.version.version6", "vmodl.version.version1")
AddVersionParent("vim.version.version6", "vmodl.version.version0")
AddVersionParent("vim.version.version7", "vmodl.query.version.version1")
AddVersionParent("vim.version.version7", "vmodl.query.version.version2")
AddVersionParent("vim.version.version7", "vmodl.query.version.version3")
AddVersionParent("vim.version.version7", "vmodl.query.version.version4")
AddVersionParent("vim.version.version7", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version7", "vim.version.version1")
AddVersionParent("vim.version.version7", "vim.version.version2")
AddVersionParent("vim.version.version7", "vim.version.version3")
AddVersionParent("vim.version.version7", "vim.version.version4")
AddVersionParent("vim.version.version7", "vim.version.version5")
AddVersionParent("vim.version.version7", "vim.version.version6")
AddVersionParent("vim.version.version7", "vim.version.version7")
AddVersionParent("vim.version.version7", "vmodl.version.version2")
AddVersionParent("vim.version.version7", "vmodl.version.version1")
AddVersionParent("vim.version.version7", "vmodl.version.version0")
AddVersionParent("vim.version.version8", "vmodl.query.version.version1")
AddVersionParent("vim.version.version8", "vmodl.query.version.version2")
AddVersionParent("vim.version.version8", "vmodl.query.version.version3")
AddVersionParent("vim.version.version8", "vmodl.query.version.version4")
AddVersionParent("vim.version.version8", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version8", "vim.version.version1")
AddVersionParent("vim.version.version8", "vim.version.version2")
AddVersionParent("vim.version.version8", "vim.version.version3")
AddVersionParent("vim.version.version8", "vim.version.version4")
AddVersionParent("vim.version.version8", "vim.version.version5")
AddVersionParent("vim.version.version8", "vim.version.version6")
AddVersionParent("vim.version.version8", "vim.version.version7")
AddVersionParent("vim.version.version8", "vim.version.version8")
AddVersionParent("vim.version.version8", "vmodl.version.version2")
AddVersionParent("vim.version.version8", "vmodl.version.version1")
AddVersionParent("vim.version.version8", "vmodl.version.version0")
AddVersionParent("vim.version.version9", "vmodl.query.version.version1")
AddVersionParent("vim.version.version9", "vmodl.query.version.version2")
AddVersionParent("vim.version.version9", "vmodl.query.version.version3")
AddVersionParent("vim.version.version9", "vmodl.query.version.version4")
AddVersionParent("vim.version.version9", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version9", "vim.version.version1")
AddVersionParent("vim.version.version9", "vim.version.version2")
AddVersionParent("vim.version.version9", "vim.version.version3")
AddVersionParent("vim.version.version9", "vim.version.version4")
AddVersionParent("vim.version.version9", "vim.version.version5")
AddVersionParent("vim.version.version9", "vim.version.version6")
AddVersionParent("vim.version.version9", "vim.version.version7")
AddVersionParent("vim.version.version9", "vim.version.version8")
AddVersionParent("vim.version.version9", "vim.version.version9")
AddVersionParent("vim.version.version9", "vmodl.version.version2")
AddVersionParent("vim.version.version9", "vmodl.version.version1")
AddVersionParent("vim.version.version9", "vmodl.version.version0")
AddVersionParent("vmodl.version.version2", "vmodl.version.version2")
AddVersionParent("vmodl.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.version.version2", "vmodl.version.version0")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version10")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version11")
AddVersionParent("vim.vsandp.version.version8", "vmodl.query.version.version1")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version12")
AddVersionParent("vim.vsandp.version.version8", "vmodl.query.version.version2")
AddVersionParent("vim.vsandp.version.version8", "vmodl.query.version.version3")
AddVersionParent("vim.vsandp.version.version8", "vmodl.query.version.version4")
AddVersionParent("vim.vsandp.version.version8", "vmodl.reflect.version.version2")
AddVersionParent("vim.vsandp.version.version8", "vmodl.reflect.version.version1")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version13")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version1")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version2")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version3")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version4")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version5")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version6")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version7")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version8")
AddVersionParent("vim.vsandp.version.version8", "vim.version.version9")
AddVersionParent("vim.vsandp.version.version8", "vmodl.version.version2")
AddVersionParent("vim.vsandp.version.version8", "vim.vsandp.version.version8")
AddVersionParent("vim.vsandp.version.version8", "vmodl.version.version1")
AddVersionParent("vim.vsandp.version.version8", "vmodl.version.version0")
AddVersionParent("vmodl.version.version1", "vmodl.version.version1")
AddVersionParent("vmodl.version.version1", "vmodl.version.version0")
AddVersionParent("vmodl.version.version0", "vmodl.version.version0")

newestVersions.Add("vim.vsandp.version.version8")
stableVersions.Add("vim.vsandp.version.version8")
publicVersions.Add("vim.vsandp.version.version8")
dottedVersions.Add("vim.vsandp.version.version8")
oldestVersions.Add("vim.vsandp.version.version8")

CreateDataType("vim.vsandp.ArchivalGroupInfo", "VsanDpArchivalGroupInfo", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("name", "string", "vim.vsandp.version.version8", 0), ("storage", "vim.vsandp.ArchivalStorageLocation[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.ArchivalStorageBasicInfo", "VsanDpArchivalStorageBasicInfo", "vmodl.DynamicData", "vim.vsandp.version.version8", [("location", "vim.vsandp.ArchivalStorageLocation", "vim.vsandp.version.version8", 0), ("archivalGroup", "string[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.ArchivalStorageInfo", "VsanDpArchivalStorageInfo", "vim.vsandp.ArchivalStorageBasicInfo", "vim.vsandp.version.version8", [("warningThreshold", "int", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.CgBasicInfo", "VsanDpCgBasicInfo", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("displayName", "string", "vim.vsandp.version.version8", 0), ("owner", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("member", "vim.vsandp.StorageObjectInfo[]", "vim.vsandp.version.version8", F_LINKABLE | F_OPTIONAL)])
CreateDataType("vim.vsandp.CgInfo", "VsanDpCgInfo", "vim.vsandp.CgBasicInfo", "vim.vsandp.version.version8", [("local", "vim.vsandp.LocalProtectionInfo", "vim.vsandp.version.version8", F_OPTIONAL), ("remote", "vim.vsandp.RemoteProtectionInfo[]", "vim.vsandp.version.version8", F_OPTIONAL), ("target", "vim.vsandp.TargetProtectionInfo", "vim.vsandp.version.version8", F_OPTIONAL), ("archive", "vim.vsandp.ArchivalProtectionInfo[]", "vim.vsandp.version.version8", F_OPTIONAL), ("metadata", "vim.KeyValue[]", "vim.vsandp.version.version8", F_OPTIONAL), ("protectionPaused", "boolean", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.DatastoreInfo", "VsanDpDatastoreInfo", "vmodl.DynamicData", "vim.vsandp.version.version8", [("datastore", "vim.Datastore", "vim.vsandp.version.version8", F_OPTIONAL), ("datastoreUrl", "string", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.GroupInstanceData", "VsanDpGroupInstanceData", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("previous", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("instanceStats", "vim.vsandp.GroupInstanceStats", "vim.vsandp.version.version8", 0), ("quiescedType", "string", "vim.vsandp.version.version8", 0), ("snapshotTimestamp", "vmodl.DateTime", "vim.vsandp.version.version8", 0), ("snapshotLateness", "int", "vim.vsandp.version.version8", 0), ("member", "vim.vsandp.GroupInstanceData.ObjectSnapshot[]", "vim.vsandp.version.version8", F_LINKABLE | F_OPTIONAL), ("sourceCluster", "string", "vim.vsandp.version.version8", 0), ("allocatedBytes", "long", "vim.vsandp.version.version8", 0), ("metadata", "vim.KeyValue[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.GroupInstanceData.ObjectSnapshot", "VsanDpGroupInstanceDataObjectSnapshot", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("snapshotUri", "string", "vim.vsandp.version.version8", 0), ("sourceObject", "string", "vim.vsandp.version.version8", 0), ("objClass", "string", "vim.vsandp.version.version8", 0), ("allocatedBytes", "long", "vim.vsandp.version.version8", 0), ("numManagedSnapshots", "int", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.GroupInstanceStats", "VsanDpGroupInstanceStats", "vmodl.DynamicData", "vim.vsandp.version.version8", [("startTime", "vmodl.DateTime", "vim.vsandp.version.version8", 0), ("endTime", "vmodl.DateTime", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.ImageCreateEntitySpec", "VsanDpImageCreateEntitySpec", "vmodl.DynamicData", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.ImageCreateSingleVMEntitySpec", "VsanDpImageCreateSingleVMEntitySpec", "vim.vsandp.ImageCreateEntitySpec", "vim.vsandp.version.version8", [("removeVcInstanceUuid", "boolean", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateEnumType("vim.vsandp.ImageCreationType", "VsanDpImageCreationType", "vim.vsandp.version.version8", ["fullClone", "linkedClone", "test"])
CreateDataType("vim.vsandp.ImageInfo", "VsanDpImageInfo", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("object", "vim.vsandp.ImageInfo.RecoveredObject[]", "vim.vsandp.version.version8", F_OPTIONAL), ("initiatorId", "string", "vim.vsandp.version.version8", 0), ("creator", "string", "vim.vsandp.version.version8", 0), ("createdFrom", "vim.vsandp.InstanceLocation", "vim.vsandp.version.version8", 0), ("name", "string", "vim.vsandp.version.version8", 0), ("creationType", "string", "vim.vsandp.version.version8", 0), ("quiesced", "string", "vim.vsandp.version.version8", 0), ("quiescedSnapshotName", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("existingImage", "boolean", "vim.vsandp.version.version8", 0), ("cgMetadata", "vim.KeyValue[]", "vim.vsandp.version.version8", F_OPTIONAL), ("instanceMetadata", "vim.KeyValue[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.ImageInfo.RecoveredObject", "VsanDpImageInfoRecoveredObject", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("protectedObject", "string", "vim.vsandp.version.version8", 0), ("info", "vim.vsandp.StorageObjectInfo", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.InstanceLocation", "VsanDpInstanceLocation", "vmodl.DynamicData", "vim.vsandp.version.version8", [("series", "string", "vim.vsandp.version.version8", 0), ("location", "vim.vsandp.Location", "vim.vsandp.version.version8", 0), ("groupInstanceKey", "string", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.InstanceQuerySpecBase", "VsanDpInstanceQuerySpecBase", "vmodl.DynamicData", "vim.vsandp.version.version8", [("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.InstanceQuerySpecBase.InstanceSet", "VsanDpInstanceQuerySpecBaseInstanceSet", "vmodl.DynamicData", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.InstanceQuerySpecBase.ByTimeRange", "VsanDpInstanceQuerySpecBaseByTimeRange", "vim.vsandp.InstanceQuerySpecBase.InstanceSet", "vim.vsandp.version.version8", [("startTime", "vmodl.DateTime", "vim.vsandp.version.version8", F_OPTIONAL), ("endTime", "vmodl.DateTime", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.InstanceQuerySpecBase.ByIdentity", "VsanDpInstanceQuerySpecBaseByIdentity", "vim.vsandp.InstanceQuerySpecBase.InstanceSet", "vim.vsandp.version.version8", [("instance", "string[]", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.InstanceQuerySpecBase.EntryBase", "VsanDpInstanceQuerySpecBaseEntryBase", "vmodl.DynamicData", "vim.vsandp.version.version8", [("instancesSpec", "vim.vsandp.InstanceQuerySpecBase.InstanceSet", "vim.vsandp.version.version8", 0), ("quiesced", "boolean", "vim.vsandp.version.version8", F_OPTIONAL), ("maxInstances", "int", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.Location", "VsanDpLocation", "vmodl.DynamicData", "vim.vsandp.version.version8", None)
CreateEnumType("vim.vsandp.ObjectClass", "VsanDpObjectClass", "vim.vsandp.version.version8", ["invalid", "vdisk", "snapshot", "vmnamespace", "vmswap", "generic", "vmem", "digest", "sidecar", "hbrpersist", "coredump", "consistencygroup"])
CreateEnumType("vim.vsandp.ProtectedEntityType", "VsanDpProtectedEntityType", "vim.vsandp.version.version8", ["noneProtectedEntityType", "singleVM", "unknownProtectedEntityType"])
CreateDataType("vim.vsandp.ProtectionInfo", "VsanDpProtectionInfo", "vmodl.DynamicData", "vim.vsandp.version.version8", [("state", "string", "vim.vsandp.version.version8", 0), ("currentError", "vmodl.MethodFault", "vim.vsandp.version.version8", F_OPTIONAL), ("protectionPolicy", "vim.vsandp.ProtectionPolicyInfo", "vim.vsandp.version.version8", 0), ("retentionPolicy", "vim.vsandp.RetentionPolicyInfo", "vim.vsandp.version.version8", 0), ("series", "vim.vsandp.SeriesInfo", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.ProtectionPolicyInfo", "VsanDpProtectionPolicyInfo", "vmodl.DynamicData", "vim.vsandp.version.version8", [("enabled", "boolean", "vim.vsandp.version.version8", 0), ("quiescedType", "string", "vim.vsandp.version.version8", 0), ("quiescingFrequency", "int", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateEnumType("vim.vsandp.ProtectionState", "VsanDpProtectionState", "vim.vsandp.version.version8", ["healthOk", "protectionNotConfigured", "fullSyncInProgress", "protectionNotOwner", "invalidConfiguration", "vmQuiescingFailure", "unknown", "cgObjectUnavailable", "localRetentionFailure", "archiveStorageNotAccessible", "archiveStorageNoSpace", "archiveTargetNotConfigured", "localStorageUsageExceededThreshold", "containsUnpromotedObjects", "multipleCgsForPE"])
CreateEnumType("vim.vsandp.ProtectionStatus", "VsanDpProtectionStatus", "vim.vsandp.version.version8", ["okStatus", "errorStatus", "pausedStatus"])
CreateEnumType("vim.vsandp.QuiescedType", "VsanDpQuiescedType", "vim.vsandp.version.version8", ["none", "applicationQuiesced", "fileSystemQuiesced"])
CreateDataType("vim.vsandp.RemoteGroupInstanceData", "VsanDpRemoteGroupInstanceData", "vim.vsandp.GroupInstanceData", "vim.vsandp.version.version8", [("isReplicated", "boolean", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.RemoteVsanLocation", "VsanDpRemoteVsanLocation", "vim.vsandp.Location", "vim.vsandp.version.version8", [("cluster", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.ReplicatedGroupInstanceStats", "VsanDpReplicatedGroupInstanceStats", "vim.vsandp.GroupInstanceStats", "vim.vsandp.version.version8", [("transferBytes", "long", "vim.vsandp.version.version8", 0), ("transferSeconds", "long", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.ReplicatedProtectionInfo", "VsanDpReplicatedProtectionInfo", "vim.vsandp.ProtectionInfo", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.ReplicatedProtectionPolicyInfo", "VsanDpReplicatedProtectionPolicyInfo", "vim.vsandp.ProtectionPolicyInfo", "vim.vsandp.version.version8", [("protectionFrequency", "int", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.RestoreCgSpecBase", "VsanDpRestoreCgSpecBase", "vmodl.DynamicData", "vim.vsandp.version.version8", [("location", "vim.vsandp.InstanceLocation", "vim.vsandp.version.version8", 0), ("entitySpec", "vim.vsandp.ImageCreateSingleVMEntitySpec", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.RestoreVmSpecBase", "VsanDpRestoreVmSpecBase", "vim.vsandp.RestoreCgSpecBase", "vim.vsandp.version.version8", [("name", "string", "vim.vsandp.version.version8", 0), ("powerOn", "boolean", "vim.vsandp.version.version8", 0), ("defaultNetwork", "vim.Network", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.RetentionPolicyInfo", "VsanDpRetentionPolicyInfo", "vmodl.DynamicData", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.RpoProtectionPolicyInfo", "VsanDpRpoProtectionPolicyInfo", "vim.vsandp.ProtectionPolicyInfo", "vim.vsandp.version.version8", [("rpo", "int", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.SeriesInfo", "VsanDpSeriesInfo", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("displayName", "string", "vim.vsandp.version.version8", 0), ("state", "string", "vim.vsandp.version.version8", 0), ("numInstances", "int", "vim.vsandp.version.version8", 0), ("lastInstanceTimestamp", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("retentionPolicy", "vim.vsandp.RetentionPolicyInfo", "vim.vsandp.version.version8", 0), ("totalBytes", "long", "vim.vsandp.version.version8", 0), ("metadata", "vim.KeyValue[]", "vim.vsandp.version.version8", F_OPTIONAL), ("clusterOwner", "string", "vim.vsandp.version.version8", 0), ("clusterOwnerName", "string", "vim.vsandp.version.version8", 0)])
CreateEnumType("vim.vsandp.SeriesQuerySortType", "VsanDpSeriesQuerySortType", "vim.vsandp.version.version8", ["name", "creationTime", "decommissionTime"])
CreateEnumType("vim.vsandp.SeriesState", "VsanDpSeriesState", "vim.vsandp.version.version8", ["activeSeries", "inactiveSeries"])
CreateDataType("vim.vsandp.StorageObjectInfo", "VsanDpStorageObjectInfo", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("objClass", "string", "vim.vsandp.version.version8", 0), ("namespacePath", "string", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.TargetGroupInstanceData", "VsanDpTargetGroupInstanceData", "vim.vsandp.GroupInstanceData", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.TargetProtectionInfo", "VsanDpTargetProtectionInfo", "vim.vsandp.ProtectionInfo", "vim.vsandp.version.version8", [("location", "vim.vsandp.RemoteVsanLocation", "vim.vsandp.version.version8", 0), ("instance", "vim.vsandp.TargetGroupInstanceData[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.TargetSeriesInfo", "VsanDpTargetSeriesInfo", "vim.vsandp.SeriesInfo", "vim.vsandp.version.version8", [("sourceCgUuid", "string", "vim.vsandp.version.version8", 0)])
CreateManagedType("vim.vsandp.cluster.DebugSystem", "VsanDpsDebugSystem", "vmodl.ManagedObject", "vim.vsandp.version.version8", None, [("addDelay", "AddDelay", "vim.vsandp.version.version8", (("methodName", "string", "vim.vsandp.version.version8", 0, None),("delayMs", "int", "vim.vsandp.version.version8", 0, None),("rootOpId", "string", "vim.vsandp.version.version8", F_OPTIONAL, None),), (0, "int", "int"), "Global.VCServer", None), ("removeDelay", "RemoveDelay", "vim.vsandp.version.version8", (("subscription", "int", "vim.vsandp.version.version8", 0, None),), (0, "void", "void"), "Global.VCServer", None), ("clearAll", "ClearAll", "vim.vsandp.version.version8", (), (0, "void", "void"), "Global.VCServer", None)])
CreateManagedType("vim.vsandp.cluster.ImageService", "VsanDpClusterImageService", "vmodl.ManagedObject", "vim.vsandp.version.version8", None, [("createImage", "CreateImage", "vim.vsandp.version.version8", (("spec", "vim.vsandp.cluster.ImageService.CreateImagesOp.Spec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.cluster.ImageService.CreateImagesOp", "vim.vsandp.cluster.ImageService.CreateImagesOp"), "System.Read", ["vim.vsandp.fault.InvalidDatastore", "vim.vsandp.fault.PETypeMismatch", "vim.vsandp.fault.RequestKeyLimitExceeded", ]), ("deleteImage", "DeleteImage", "vim.vsandp.version.version8", (("spec", "vim.vsandp.cluster.ImageService.DeleteImagesOp.Spec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.cluster.ImageService.DeleteImagesOp", "vim.vsandp.cluster.ImageService.DeleteImagesOp"), "System.Read", ["vim.vsandp.fault.RequestKeyLimitExceeded", ]), ("releaseImage", "ReleaseImage", "vim.vsandp.version.version8", (("spec", "vim.vsandp.cluster.ImageService.ReleaseImagesOp.Spec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.cluster.ImageService.ReleaseImagesOp", "vim.vsandp.cluster.ImageService.ReleaseImagesOp"), "System.Read", ["vim.vsandp.fault.RequestKeyLimitExceeded", ]), ("commitTestImage", "CommitTestImage", "vim.vsandp.version.version8", (("spec", "vim.vsandp.cluster.ImageService.CommitTestImagesOp.Spec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.cluster.ImageService.CommitTestImagesOp", "vim.vsandp.cluster.ImageService.CommitTestImagesOp"), "System.Read", ["vim.vsandp.fault.RequestKeyLimitExceeded", ])])
CreateDataType("vim.vsandp.cluster.ImageService.ObjectPolicyAssociation", "VsanDpClusterImageServiceObjectPolicyAssociation", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("policyContent", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.CreateImagesOp", "VsanDpClusterImageServiceCreateImagesOp", "vmodl.DynamicData", "vim.vsandp.version.version8", [("error", "vim.vsandp.cluster.ImageService.CreateImagesOp.Error[]", "vim.vsandp.version.version8", F_OPTIONAL), ("result", "vim.vsandp.cluster.ImageService.CreateImagesOp.Result[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ImageService.CreateImagesOp.Spec", "VsanDpClusterImageServiceCreateImagesOpSpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("initiatorId", "string", "vim.vsandp.version.version8", 0), ("entry", "vim.vsandp.cluster.ImageService.CreateImagesOp.Spec.Entry[]", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.CreateImagesOp.Spec.Entry", "VsanDpClusterImageServiceCreateImagesOpSpecEntry", "vmodl.DynamicData", "vim.vsandp.version.version8", [("instance", "vim.vsandp.InstanceLocation", "vim.vsandp.version.version8", 0), ("creationType", "string", "vim.vsandp.version.version8", 0), ("policyAssociation", "vim.vsandp.cluster.ImageService.ObjectPolicyAssociation[]", "vim.vsandp.version.version8", F_OPTIONAL), ("defaultPolicyContent", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("targetDatastoreUrl", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("entitySpec", "vim.vsandp.ImageCreateEntitySpec", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ImageService.CreateImagesOp.Error", "VsanDpClusterImageServiceCreateImagesOpError", "vmodl.DynamicData", "vim.vsandp.version.version8", [("instance", "vim.vsandp.InstanceLocation", "vim.vsandp.version.version8", 0), ("warning", "vmodl.MethodFault[]", "vim.vsandp.version.version8", F_OPTIONAL), ("error", "vmodl.MethodFault", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.CreateImagesOp.Result", "VsanDpClusterImageServiceCreateImagesOpResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("instance", "vim.vsandp.InstanceLocation", "vim.vsandp.version.version8", 0), ("createImageOp", "vim.Task", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.CreateImagesOp.Result.Entry", "VsanDpClusterImageServiceCreateImagesOpResultEntry", "vmodl.DynamicData", "vim.vsandp.version.version8", [("info", "vim.vsandp.ImageInfo", "vim.vsandp.version.version8", 0), ("warning", "vmodl.MethodFault[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ImageService.DeleteImagesOp", "VsanDpClusterImageServiceDeleteImagesOp", "vmodl.DynamicData", "vim.vsandp.version.version8", [("error", "vim.vsandp.cluster.ImageService.DeleteImagesOp.Error[]", "vim.vsandp.version.version8", F_OPTIONAL), ("result", "vim.vsandp.cluster.ImageService.DeleteImagesOp.Result[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ImageService.DeleteImagesOp.Spec", "VsanDpClusterImageServiceDeleteImagesOpSpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("imageKey", "string[]", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.DeleteImagesOp.Error", "VsanDpClusterImageServiceDeleteImagesOpError", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("fault", "vmodl.MethodFault", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.DeleteImagesOp.Result", "VsanDpClusterImageServiceDeleteImagesOpResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("deleteImageOp", "vim.Task", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.DeleteImagesOp.Result.Entry", "VsanDpClusterImageServiceDeleteImagesOpResultEntry", "vmodl.DynamicData", "vim.vsandp.version.version8", [("imageKey", "string", "vim.vsandp.version.version8", 0), ("warning", "vmodl.MethodFault[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ImageService.ReleaseImagesOp", "VsanDpClusterImageServiceReleaseImagesOp", "vmodl.DynamicData", "vim.vsandp.version.version8", [("error", "vim.vsandp.cluster.ImageService.ReleaseImagesOp.Error[]", "vim.vsandp.version.version8", F_OPTIONAL), ("result", "vim.vsandp.cluster.ImageService.ReleaseImagesOp.Result[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ImageService.ReleaseImagesOp.Spec", "VsanDpClusterImageServiceReleaseImagesOpSpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("entry", "vim.vsandp.cluster.ImageService.ReleaseImagesOp.Spec.Entry[]", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.ReleaseImagesOp.Spec.Entry", "VsanDpClusterImageServiceReleaseImagesOpSpecEntry", "vmodl.DynamicData", "vim.vsandp.version.version8", [("imageKey", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.ReleaseImagesOp.Error", "VsanDpClusterImageServiceReleaseImagesOpError", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("fault", "vmodl.MethodFault", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.ReleaseImagesOp.Result", "VsanDpClusterImageServiceReleaseImagesOpResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("releaseImageOp", "vim.Task", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.ReleaseImagesOp.Result.Entry", "VsanDpClusterImageServiceReleaseImagesOpResultEntry", "vmodl.DynamicData", "vim.vsandp.version.version8", [("imageKey", "string", "vim.vsandp.version.version8", 0), ("warning", "vmodl.MethodFault[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ImageService.CommitTestImagesOp", "VsanDpClusterImageServiceCommitTestImagesOp", "vmodl.DynamicData", "vim.vsandp.version.version8", [("error", "vim.vsandp.cluster.ImageService.CommitTestImagesOp.Error[]", "vim.vsandp.version.version8", F_OPTIONAL), ("result", "vim.vsandp.cluster.ImageService.CommitTestImagesOp.Result[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ImageService.CommitTestImagesOp.Spec", "VsanDpClusterImageServiceCommitTestImagesOpSpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("entry", "vim.vsandp.cluster.ImageService.CommitTestImagesOp.Spec.Entry[]", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.CommitTestImagesOp.Spec.Entry", "VsanDpClusterImageServiceCommitTestImagesOpSpecEntry", "vmodl.DynamicData", "vim.vsandp.version.version8", [("imageKey", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.CommitTestImagesOp.Error", "VsanDpClusterImageServiceCommitTestImagesOpError", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("fault", "vmodl.MethodFault", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.CommitTestImagesOp.Result", "VsanDpClusterImageServiceCommitTestImagesOpResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("commitTestImageOp", "vim.Task", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ImageService.CommitTestImagesOp.Result.Entry", "VsanDpClusterImageServiceCommitTestImagesOpResultEntry", "vmodl.DynamicData", "vim.vsandp.version.version8", [("imageKey", "string", "vim.vsandp.version.version8", 0), ("warning", "vmodl.MethodFault[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateManagedType("vim.vsandp.cluster.InventoryService", "VsanDpClusterInventoryService", "vmodl.ManagedObject", "vim.vsandp.version.version8", None, [("queryCgByObject", "QueryCgByObject", "vim.vsandp.version.version8", (("querySpec", "vim.vsandp.cluster.InventoryService.CgMemberQuery.Spec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.cluster.InventoryService.CgMemberQuery", "vim.vsandp.cluster.InventoryService.CgMemberQuery"), "System.Read", ["vim.vsandp.fault.VsanClusterNotFound", "vim.vsandp.fault.NoHostFound", "vim.vsandp.fault.RequestKeyLimitExceeded", ]), ("queryCgBySourceCg", "QueryCgBySourceCg", "vim.vsandp.version.version8", (("querySpec", "vim.vsandp.cluster.InventoryService.TargetCgQuery.Spec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.cluster.InventoryService.TargetCgQuery", "vim.vsandp.cluster.InventoryService.TargetCgQuery"), "System.Read", ["vim.vsandp.fault.VsanClusterNotFound", "vim.vsandp.fault.NoHostFound", ])])
CreateDataType("vim.vsandp.cluster.InventoryService.CgMemberQuery", "VsanDpClusterInventoryServiceCgMemberQuery", "vmodl.DynamicData", "vim.vsandp.version.version8", [("result", "vim.vsandp.cluster.InventoryService.CgMemberQuery.Result[]", "vim.vsandp.version.version8", F_OPTIONAL), ("error", "vim.vsandp.cluster.InventoryService.CgMemberQuery.Error[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.InventoryService.CgMemberQuery.Spec", "VsanDpClusterInventoryServiceCgMemberQuerySpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", F_OPTIONAL), ("object", "string[]", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.InventoryService.CgMemberQuery.Error", "VsanDpClusterInventoryServiceCgMemberQueryError", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("fault", "vmodl.MethodFault", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.InventoryService.CgMemberQuery.Result", "VsanDpClusterInventoryServiceCgMemberQueryResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("cg", "vim.vsandp.CgBasicInfo", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.InventoryService.TargetCgQuery", "VsanDpClusterInventoryServiceTargetCgQuery", "vmodl.DynamicData", "vim.vsandp.version.version8", [("result", "vim.vsandp.cluster.InventoryService.TargetCgQuery.Result[]", "vim.vsandp.version.version8", F_OPTIONAL), ("error", "vim.vsandp.cluster.InventoryService.TargetCgQuery.Error[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.InventoryService.TargetCgQuery.Spec", "VsanDpClusterInventoryServiceTargetCgQuerySpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", F_OPTIONAL), ("sourceCgUuid", "string[]", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.InventoryService.TargetCgQuery.Error", "VsanDpClusterInventoryServiceTargetCgQueryError", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("fault", "vmodl.MethodFault", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.InventoryService.TargetCgQuery.Result", "VsanDpClusterInventoryServiceTargetCgQueryResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("cg", "vim.vsandp.CgBasicInfo", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateManagedType("vim.vsandp.cluster.ReplicaSeriesManager", "VsanDpClusterReplicaSeriesManager", "vmodl.ManagedObject", "vim.vsandp.version.version8", None, [("listClusters", "ListClusters", "vim.vsandp.version.version8", (("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", F_OPTIONAL, None),("location", "vim.vsandp.Location", "vim.vsandp.version.version8", 0, None),), (F_OPTIONAL, "vim.vsandp.cluster.ReplicaSeriesManager.ClusterInfo[]", "vim.vsandp.cluster.ReplicaSeriesManager.ClusterInfo[]"), None, None), ("querySeriesInfo", "QuerySeriesInfo", "vim.vsandp.version.version8", (("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", F_OPTIONAL, None),("spec", "vim.vsandp.cluster.ReplicaSeriesManager.SeriesInfoQuery.Spec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.cluster.ReplicaSeriesManager.SeriesInfoQuery", "vim.vsandp.cluster.ReplicaSeriesManager.SeriesInfoQuery"), None, None), ("deleteSeries", "DeleteSeries_Task", "vim.vsandp.version.version8", (("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", F_OPTIONAL, "Vsan.DataProtection.Management"),("series", "string", "vim.vsandp.version.version8", 0, None),), (0, "vim.Task", "void"), None, None), ("queryInstances", "QuerySeriesInstances", "vim.vsandp.version.version8", (("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", F_OPTIONAL, None),("spec", "vim.vsandp.cluster.ReplicaSeriesManager.InstanceQuery.Spec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.cluster.ReplicaSeriesManager.InstanceQuery", "vim.vsandp.cluster.ReplicaSeriesManager.InstanceQuery"), None, None), ("querySeries", "QuerySeries", "vim.vsandp.version.version8", (("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", F_OPTIONAL, None),("spec", "vim.vsandp.cluster.ReplicaSeriesManager.SeriesQuery.Spec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.cluster.ReplicaSeriesManager.SeriesQuery", "vim.vsandp.cluster.ReplicaSeriesManager.SeriesQuery"), None, None)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.ClusterInfo", "VsanDpClusterReplicaSeriesManagerClusterInfo", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("name", "string", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.SeriesError", "VsanDpClusterReplicaSeriesManagerSeriesError", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("fault", "vmodl.MethodFault", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.SeriesInfoQuery", "VsanDpClusterReplicaSeriesManagerSeriesInfoQuery", "vmodl.DynamicData", "vim.vsandp.version.version8", [("result", "vim.vsandp.cluster.ReplicaSeriesManager.SeriesInfoQuery.Result[]", "vim.vsandp.version.version8", F_OPTIONAL), ("error", "vim.vsandp.cluster.ReplicaSeriesManager.SeriesError[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.SeriesInfoQuery.Spec", "VsanDpClusterReplicaSeriesManagerSeriesInfoQuerySpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("series", "string[]", "vim.vsandp.version.version8", 0), ("location", "vim.vsandp.Location", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.SeriesInfoQuery.Result", "VsanDpClusterReplicaSeriesManagerSeriesInfoQueryResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("info", "vim.vsandp.SeriesInfo", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.InstanceQuery", "VsanDpClusterReplicaSeriesManagerInstanceQuery", "vmodl.DynamicData", "vim.vsandp.version.version8", [("result", "vim.vsandp.cluster.ReplicaSeriesManager.InstanceQuery.Result[]", "vim.vsandp.version.version8", F_OPTIONAL), ("error", "vim.vsandp.cluster.ReplicaSeriesManager.SeriesError[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.InstanceQuery.Spec", "VsanDpClusterReplicaSeriesManagerInstanceQuerySpec", "vim.vsandp.InstanceQuerySpecBase", "vim.vsandp.version.version8", [("entry", "vim.vsandp.cluster.ReplicaSeriesManager.InstanceQuery.Spec.Entry[]", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.InstanceQuery.Spec.Entry", "VsanDpClusterReplicaSeriesManagerInstanceQuerySpecEntry", "vim.vsandp.InstanceQuerySpecBase.EntryBase", "vim.vsandp.version.version8", [("series", "string", "vim.vsandp.version.version8", 0), ("location", "vim.vsandp.Location", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.InstanceQuery.Result", "VsanDpClusterReplicaSeriesManagerInstanceQueryResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("instance", "vim.vsandp.GroupInstanceData[]", "vim.vsandp.version.version8", F_OPTIONAL), ("totalInstances", "int", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.SeriesFilterSpec", "VsanDpClusterReplicaSeriesManagerSeriesFilterSpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("clusterOwner", "string", "vim.vsandp.version.version8", 0), ("querySortType", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("reverseSort", "boolean", "vim.vsandp.version.version8", F_OPTIONAL), ("nameStartsWith", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("nameContains", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("nameEndsWith", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("creationTimeStart", "vmodl.DateTime", "vim.vsandp.version.version8", F_OPTIONAL), ("creationTimeEnd", "vmodl.DateTime", "vim.vsandp.version.version8", F_OPTIONAL), ("decommissionTimeStart", "vmodl.DateTime", "vim.vsandp.version.version8", F_OPTIONAL), ("decommissionTimeEnd", "vmodl.DateTime", "vim.vsandp.version.version8", F_OPTIONAL), ("state", "string", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.SeriesBasicInfo", "VsanDpClusterReplicaSeriesManagerSeriesBasicInfo", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("displayName", "string", "vim.vsandp.version.version8", 0), ("creationTimestamp", "string", "vim.vsandp.version.version8", 0), ("decommissionTimestamp", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("state", "string", "vim.vsandp.version.version8", 0), ("clusterOwner", "string", "vim.vsandp.version.version8", 0), ("clusterOwnerName", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.SeriesQuery", "VsanDpClusterReplicaSeriesManagerSeriesQuery", "vmodl.DynamicData", "vim.vsandp.version.version8", [("result", "vim.vsandp.cluster.ReplicaSeriesManager.SeriesQuery.Result", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.SeriesQuery.Spec", "VsanDpClusterReplicaSeriesManagerSeriesQuerySpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("location", "vim.vsandp.Location", "vim.vsandp.version.version8", 0), ("resultLimit", "int", "vim.vsandp.version.version8", F_OPTIONAL), ("resultOffset", "int", "vim.vsandp.version.version8", F_OPTIONAL), ("seriesFilter", "vim.vsandp.cluster.ReplicaSeriesManager.SeriesFilterSpec", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ReplicaSeriesManager.SeriesQuery.Result", "VsanDpClusterReplicaSeriesManagerSeriesQueryResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("info", "vim.vsandp.cluster.ReplicaSeriesManager.SeriesBasicInfo[]", "vim.vsandp.version.version8", 0), ("completeResult", "boolean", "vim.vsandp.version.version8", 0)])
CreateManagedType("vim.vsandp.cluster.VsanDataProtectionRecoverySystem", "VsanDataProtectionRecoverySystem", "vmodl.ManagedObject", "vim.vsandp.version.version8", None, [("restoreVm", "RestoreVm_Task", "vim.vsandp.version.version8", (("spec", "vim.vsandp.cluster.VsanDataProtectionRecoverySystem.RestoreSpec", "vim.vsandp.version.version8", 0, None),), (0, "vim.Task", "vim.VirtualMachine"), "System.Read", ["vim.vsandp.fault.RecoveryFailed", "vim.vsandp.fault.VsanClusterNotFound", ])])
CreateDataType("vim.vsandp.cluster.VsanDataProtectionRecoverySystem.RestoreSpec", "VsanDataProtectionRecoverySystemRestoreSpec", "vim.vsandp.RestoreVmSpecBase", "vim.vsandp.version.version8", [("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", 0), ("datastore", "vim.Datastore", "vim.vsandp.version.version8", 0), ("fullClone", "boolean", "vim.vsandp.version.version8", 0), ("folder", "vim.Folder", "vim.vsandp.version.version8", 0), ("resourcePool", "vim.ResourcePool", "vim.vsandp.version.version8", 0), ("host", "vim.HostSystem", "vim.vsandp.version.version8", F_OPTIONAL), ("profileId", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.dpd.InternalServiceInstanceContent", "VsanDpdInternalServiceInstanceContent", "vmodl.DynamicData", "vim.vsandp.version.version8", [("rpcManager", "vim.vsandp.rpc.RpcManager", "vim.vsandp.version.version8", 0), ("quiescedSnapshotManager", "vim.vsandp.qsm.QuiescedSnapshotManager", "vim.vsandp.version.version8", 0)])
CreateManagedType("vim.vsandp.dpd.ServiceInstance", "VsanDpdServiceInstance", "vmodl.ManagedObject", "vim.vsandp.version.version8", [("content", "vim.vsandp.dpd.ServiceInstanceContent", "vim.vsandp.version.version8", 0, "System.Anonymous")], [("internalContent", "InternalContent", "vim.vsandp.version.version8", (), (0, "vim.vsandp.dpd.InternalServiceInstanceContent", "vim.vsandp.dpd.InternalServiceInstanceContent"), "System.Anonymous", None)])
CreateDataType("vim.vsandp.dpd.ServiceInstanceContent", "DpdServiceInstanceContent", "vmodl.DynamicData", "vim.vsandp.version.version8", [("about", "vim.AboutInfo", "vim.vsandp.version.version8", 0), ("instanceUuid", "string", "vim.vsandp.version.version8", 0), ("sessionManager", "vim.vsandp.host.SessionManager", "vim.vsandp.version.version8", 0), ("inventoryService", "vim.vsandp.cluster.InventoryService", "vim.vsandp.version.version8", 0), ("protectionService", "vim.vsandp.cluster.ProtectionService", "vim.vsandp.version.version8", 0), ("imageService", "vim.vsandp.cluster.ImageService", "vim.vsandp.version.version8", 0), ("propertyCollector", "vmodl.query.PropertyCollector", "vim.vsandp.version.version8", 0), ("setting", "vim.option.OptionManager", "vim.vsandp.version.version8", 0)])
CreateManagedType("vim.vsandp.dps.ServiceInstance", "VsanDpsServiceInstance", "vmodl.ManagedObject", "vim.vsandp.version.version8", [("content", "vim.vsandp.dps.ServiceInstanceContent", "vim.vsandp.version.version8", 0, "System.Anonymous")], [("myCurrentTime", "MyCurrentTime", "vim.vsandp.version.version8", (), (0, "vmodl.DateTime", "vmodl.DateTime"), "System.Anonymous", None), ("ping", "Ping", "vim.vsandp.version.version8", (), (0, "void", "void"), "System.Read", None)])
CreateDataType("vim.vsandp.dps.ServiceInstanceContent", "DpsServiceInstanceContent", "vmodl.DynamicData", "vim.vsandp.version.version8", [("about", "vim.AboutInfo", "vim.vsandp.version.version8", 0), ("siteName", "string", "vim.vsandp.version.version8", 0), ("siteUuid", "string", "vim.vsandp.version.version8", 0), ("instanceUuid", "string", "vim.vsandp.version.version8", 0)])
CreateManagedType("vim.vsandp.dps.SessionManager", "VsanDpDpsSessionManager", "vmodl.ManagedObject", "vim.vsandp.version.version8", None, [("loginByToken", "VsanDpsLoginByToken", "vim.vsandp.version.version8", (("locale", "string", "vim.vsandp.version.version8", F_OPTIONAL, None),), (0, "void", "void"), "System.Anonymous", ["vim.vsandp.fault.InvalidLogin", "vim.vsandp.fault.AlreadyLoggedIn", "vim.fault.InvalidLocale", ]), ("login", "VsanDpsLogin", "vim.vsandp.version.version8", (("userName", "string", "vim.vsandp.version.version8", 0, None),("password", "string", "vim.vsandp.version.version8", 0, None),("locale", "string", "vim.vsandp.version.version8", F_OPTIONAL, None),), (0, "void", "void"), "System.Anonymous", ["vim.vsandp.fault.InvalidLogin", "vim.vsandp.fault.AlreadyLoggedIn", "vim.vsandp.fault.ConnectionToServerDown", "vmodl.fault.SystemError", "vim.fault.InvalidLocale", ]), ("logout", "VsanDpsLogout", "vim.vsandp.version.version8", (), (0, "void", "void"), None, None)])
CreateDataType("vim.vsandp.fault.CleanupQuiescedSnapshotFault", "VsanDpFaultCleanupQuiescedSnapshotFault", "vim.fault.SnapshotFault", "vim.version.version1", [("reason", "string", "vim.version.version1", F_OPTIONAL)])
CreateDataType("vim.vsandp.fault.QsmSnapshotFault", "VsanDpFaultQsmSnapshotFault", "vim.fault.SnapshotFault", "vim.version.version1", [("reason", "string", "vim.version.version1", F_OPTIONAL)])
CreateDataType("vim.vsandp.fault.VsanDpFault", "VsanDpFaultVsanDpFault", "vmodl.RuntimeFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.VsanDpWrapperFault", "VsanDpFaultVsanDpWrapperFault", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("faultType", "string", "vim.vsandp.version.version8", 0), ("originalMessage", "string", "vim.vsandp.version.version8", 0)])
CreateManagedType("vim.vsandp.host.HostRestoreStatusChecker", "VsanDpHostHostRestoreStatusChecker", "vmodl.ManagedObject", "vim.vsandp.version.version8", [("task", "vim.Task", "vim.vsandp.version.version8", 0, None)], [("retrieveEvents", "RetrieveEvents", "vim.vsandp.version.version8", (("num", "long", "vim.vsandp.version.version8", 0, None),), (F_OPTIONAL, "vim.vsandp.host.HostRestoreStatusChecker.HostRestoreEvent[]", "vim.vsandp.host.HostRestoreStatusChecker.HostRestoreEvent[]"), None, None)])
CreateDataType("vim.vsandp.host.HostRestoreStatusChecker.HostRestoreEvent", "VsanDpHostHostRestoreStatusCheckerHostRestoreEvent", "vmodl.DynamicData", "vim.vsandp.version.version8", [("eventNum", "long", "vim.vsandp.version.version8", 0), ("description", "string", "vim.vsandp.version.version8", 0)])
CreateManagedType("vim.vsandp.host.HostRestoreStatusCheckerLookup", "VsanDpHostRestoreStatusCheckerLookup", "vmodl.ManagedObject", "vim.vsandp.version.version8", None, [("retrieveHostRestoreStatusCheckers", "RetrieveHostRestoreStatusCheckers", "vim.vsandp.version.version8", (("states", "vim.TaskInfo.State[]", "vim.vsandp.version.version8", F_OPTIONAL, None),), (F_OPTIONAL, "vim.vsandp.host.HostRestoreStatusChecker[]", "vim.vsandp.host.HostRestoreStatusChecker[]"), None, None)])
CreateDataType("vim.vsandp.host.RestoreFromHostResult", "VsanDpHostRestoreFromHostResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("imageInfo", "vim.vsandp.ImageInfo", "vim.vsandp.version.version8", 0), ("vmRef", "vim.VirtualMachine", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateManagedType("vim.vsandp.host.SessionManager", "VsanDpHostSessionManager", "vmodl.ManagedObject", "vim.vsandp.version.version8", None, [("userLoginByVsanThumbprint", "UserLoginByVsanThumbprint", "vim.vsandp.version.version8", (), (0, "void", "void"), "System.Anonymous", ["vim.vsandp.fault.InvalidLogin", "vim.vsandp.fault.NoClientCertificate", "vim.vsandp.fault.AlreadyLoggedIn", ]), ("userLoginByVpSecret", "UserLoginByVpSecret", "vim.vsandp.version.version8", (("token", "string", "vim.vsandp.version.version8", F_SECRET, None),), (0, "void", "void"), "System.Anonymous", ["vim.vsandp.fault.InvalidLogin", "vim.vsandp.fault.AlreadyLoggedIn", ]), ("userLoginByCloneTicket", "UserLoginByCloneTicket", "vim.vsandp.version.version8", (("cloneTicket", "string", "vim.vsandp.version.version8", F_SECRET, None),), (0, "void", "void"), "System.Anonymous", ["vim.vsandp.fault.InvalidLogin", "vim.vsandp.fault.AlreadyLoggedIn", ]), ("userLogout", "UserLogout", "vim.vsandp.version.version8", (), (0, "void", "void"), None, ["vim.vsandp.fault.NotLoggedIn", ])])
CreateManagedType("vim.vsandp.host.VsanDataProtectionHostRecoverySystem", "VsanDataProtectionHostRecoverySystem", "vmodl.ManagedObject", "vim.vsandp.version.version8", None, [("restoreVmFromHost", "RestoreVmFromHost", "vim.vsandp.version.version8", (("spec", "vim.vsandp.host.VsanDataProtectionHostRecoverySystem.RestoreVmFromHostSpec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.host.HostRestoreStatusChecker", "vim.vsandp.host.HostRestoreStatusChecker"), None, None), ("restoreCgFromHost", "RestoreCgFromHost", "vim.vsandp.version.version8", (("spec", "vim.vsandp.host.VsanDataProtectionHostRecoverySystem.RestoreCgFromHostSpec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.host.HostRestoreStatusChecker", "vim.vsandp.host.HostRestoreStatusChecker"), None, None)])
CreateDataType("vim.vsandp.host.VsanDataProtectionHostRecoverySystem.RestoreVmFromHostSpec", "VsanDataProtectionHostRecoverySystemRestoreVmFromHostSpec", "vim.vsandp.RestoreVmSpecBase", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.host.VsanDataProtectionHostRecoverySystem.RestoreCgFromHostSpec", "VsanDataProtectionHostRecoverySystemRestoreCgFromHostSpec", "vim.vsandp.RestoreCgSpecBase", "vim.vsandp.version.version8", None)
CreateManagedType("vim.vsandp.qsm.QuiescedSnapshotManager", "VsanDpQsmQuiescedSnapshotManager", "vmodl.ManagedObject", "vim.vsandp.version.version8", None, [("takeSnapshot", "QuiescedSnapshotTake_Task", "vim.vsandp.version.version8", (("spec", "vim.vsandp.qsm.QuiescedSnapshotManager.QuiesceSnapshotSpec", "vim.vsandp.version.version8", 0, None),), (0, "vim.Task", "vim.vsandp.qsm.QuiescedSnapshotManager.QuiescedSnapshotResult"), None, ["vim.fault.TaskInProgress", "vim.fault.NotFound", ]), ("removeSnapshot", "QuiescedSnapshotRemove_Task", "vim.vsandp.version.version8", (("cgId", "string", "vim.vsandp.version.version8", 0, None),("snapshotId", "string", "vim.vsandp.version.version8", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.NotFound", ]), ("CleanupQsmSnapshots", "QuiescedSnapshotCleanup_Task", "vim.vsandp.version.version8", (("cgId", "string", "vim.vsandp.version.version8", 0, None),("nsUri", "string", "vim.vsandp.version.version8", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.NotFound", ])])
CreateDataType("vim.vsandp.qsm.QuiescedSnapshotManager.QuiesceSnapshotSpec", "VsanDpQsmQuiescedSnapshotManagerQuiesceSnapshotSpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("cgId", "string", "vim.vsandp.version.version8", 0), ("snapshotTag", "string", "vim.vsandp.version.version8", 0)])
CreateEnumType("vim.vsandp.qsm.QuiescedSnapshotManager.QuiesceType", "VsanDpQsmQuiescedSnapshotManagerQuiesceType", "vim.vsandp.version.version8", ["application", "filesystem", "none"])
CreateDataType("vim.vsandp.qsm.QuiescedSnapshotManager.QuiescedSnapshot", "VsanDpQsmQuiescedSnapshotManagerQuiescedSnapshot", "vmodl.DynamicData", "vim.vsandp.version.version8", [("snapshotId", "string", "vim.vsandp.version.version8", 0), ("createTime", "vmodl.DateTime", "vim.vsandp.version.version8", 0), ("quiesceType", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.qsm.QuiescedSnapshotManager.QuiescedSnapshotResult", "VsanDpQsmQuiescedSnapshotManagerQuiescedSnapshotResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("snapshot", "vim.vsandp.qsm.QuiescedSnapshotManager.QuiescedSnapshot", "vim.vsandp.version.version8", F_OPTIONAL), ("error", "vmodl.MethodFault", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateManagedType("vim.vsandp.rpc.RpcManager", "VsanDpRpcRpcManager", "vmodl.ManagedObject", "vim.vsandp.version.version8", None, [("reconfigure", "Reconfigure", "vim.vsandp.version.version8", (("cgId", "string", "vim.vsandp.version.version8", 0, None),), (0, "void", "void"), None, ["vim.vsandp.fault.NotConsistencyGroupOwner", ]), ("checkOwnership", "CheckOwnership", "vim.vsandp.version.version8", (("cgId", "string", "vim.vsandp.version.version8", 0, None),("leaderId", "string", "vim.vsandp.version.version8", 0, None),), (0, "void", "void"), None, ["vim.vsandp.fault.NotConsistencyGroupOwner", ]), ("integrityCheck", "IntegrityCheck", "vim.vsandp.version.version8", (("spec", "vim.vsandp.rpc.RpcManager.IntegrityCheckOpSpec", "vim.vsandp.version.version8", 0, None),), (0, "void", "void"), None, ["vim.vsandp.fault.ValidationFailed", ]), ("RunGC", "RunGC", "vim.vsandp.version.version8", (), (0, "void", "void"), None, ["vim.vsandp.fault.GcInProgress", ])])
CreateDataType("vim.vsandp.rpc.RpcManager.IntegrityCheckOpSpec", "VsanDpRpcRpcManagerIntegrityCheckOpSpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("cgId", "string", "vim.vsandp.version.version8", 0), ("peType", "string", "vim.vsandp.version.version8", 0), ("object", "string[]", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.ArchivalProtectionInfo", "VsanDpArchivalProtectionInfo", "vim.vsandp.ReplicatedProtectionInfo", "vim.vsandp.version.version8", [("archivalGroup", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("location", "vim.vsandp.ArchivalStorageLocation", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.ArchivalStorageLocation", "VsanDpArchivalStorageLocation", "vim.vsandp.Location", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.IntervalProtectionPolicyInfo", "VsanDpIntervalProtectionPolicyInfo", "vim.vsandp.ProtectionPolicyInfo", "vim.vsandp.version.version8", [("minutes", "int", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.LimitedInstanceRetentionPolicyInfo", "VsanDpLimitedInstanceRetentionPolicyInfo", "vim.vsandp.RetentionPolicyInfo", "vim.vsandp.version.version8", [("numInstances", "int", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.LocalProtectionInfo", "VsanDpLocalProtectionInfo", "vim.vsandp.ProtectionInfo", "vim.vsandp.version.version8", [("instance", "vim.vsandp.GroupInstanceData[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.LocalVsanLocation", "VsanDpLocalVsanLocation", "vim.vsandp.Location", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.ManualProtectionPolicyInfo", "VsanDpManualProtectionPolicyInfo", "vim.vsandp.ProtectionPolicyInfo", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.NfsArchivalStorageLocation", "VsanDpNfsArchivalStorageLocation", "vim.vsandp.ArchivalStorageLocation", "vim.vsandp.version.version8", [("datastore", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.RemoteProtectionInfo", "VsanDpRemoteProtectionInfo", "vim.vsandp.ReplicatedProtectionInfo", "vim.vsandp.version.version8", [("location", "vim.vsandp.RemoteVsanLocation", "vim.vsandp.version.version8", 0), ("instance", "vim.vsandp.RemoteGroupInstanceData[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.ReplicatedRetentionPolicyInfo", "VsanDpReplicatedRetentionPolicyInfo", "vim.vsandp.LimitedInstanceRetentionPolicyInfo", "vim.vsandp.version.version8", [("hourlyInstancesToRetain", "int", "vim.vsandp.version.version8", 0), ("dailyInstancesToRetain", "int", "vim.vsandp.version.version8", 0), ("weeklyInstancesToRetain", "int", "vim.vsandp.version.version8", 0), ("monthlyInstancesToRetain", "int", "vim.vsandp.version.version8", 0)])
CreateManagedType("vim.vsandp.cluster.ProtectionService", "VsanDpClusterProtectionService", "vmodl.ManagedObject", "vim.vsandp.version.version8", None, [("queryCgInfo", "QueryCgInfo", "vim.vsandp.version.version8", (("spec", "vim.vsandp.cluster.ProtectionService.CgInfoQuery.Spec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.cluster.ProtectionService.CgInfoQuery", "vim.vsandp.cluster.ProtectionService.CgInfoQuery"), "System.Read", ["vim.vsandp.fault.VsanClusterNotFound", "vim.vsandp.fault.NoHostFound", "vim.vsandp.fault.RequestKeyLimitExceeded", ]), ("queryInstances", "QueryCgInstances", "vim.vsandp.version.version8", (("spec", "vim.vsandp.cluster.ProtectionService.InstanceQuery.Spec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.cluster.ProtectionService.InstanceQuery", "vim.vsandp.cluster.ProtectionService.InstanceQuery"), "System.Read", ["vim.vsandp.fault.VsanClusterNotFound", "vim.vsandp.fault.NoHostFound", "vim.vsandp.fault.RequestKeyLimitExceeded", ]), ("sync", "Sync", "vim.vsandp.version.version8", (("spec", "vim.vsandp.cluster.ProtectionService.SyncOp.Spec", "vim.vsandp.version.version8", 0, None),), (0, "vim.vsandp.cluster.ProtectionService.SyncOp", "vim.vsandp.cluster.ProtectionService.SyncOp"), None, ["vim.vsandp.fault.NotDataProtectionOwner", ]), ("pauseProtection", "PauseProtection", "vim.vsandp.version.version8", (("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", F_OPTIONAL, "System.Read"),("datastoreInfo", "vim.vsandp.DatastoreInfo", "vim.vsandp.version.version8", 0, None),("cgId", "string", "vim.vsandp.version.version8", 0, None),("targetFilter", "vim.vsandp.cluster.ProtectionService.TargetFilterSpec", "vim.vsandp.version.version8", F_OPTIONAL, None),), (0, "void", "void"), None, ["vim.vsandp.fault.InvalidDatastore", "vim.vsandp.fault.NoHostFound", "vim.vsandp.fault.NotDataProtectionOwner", "vmodl.fault.InvalidArgument", "vmodl.fault.NotSupported", ]), ("resumeProtection", "ResumeProtection", "vim.vsandp.version.version8", (("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", F_OPTIONAL, "System.Read"),("datastoreInfo", "vim.vsandp.DatastoreInfo", "vim.vsandp.version.version8", 0, None),("cgId", "string", "vim.vsandp.version.version8", 0, None),("targetFilter", "vim.vsandp.cluster.ProtectionService.TargetFilterSpec", "vim.vsandp.version.version8", F_OPTIONAL, None),), (0, "void", "void"), None, ["vim.vsandp.fault.InvalidDatastore", "vim.vsandp.fault.NotDataProtectionOwner", "vmodl.fault.InvalidArgument", "vmodl.fault.NotSupported", ])])
CreateDataType("vim.vsandp.cluster.ProtectionService.LocalProtectionDetails", "VsanDpClusterProtectionServiceLocalProtectionDetails", "vim.vsandp.LocalProtectionInfo", "vim.vsandp.version.version8", [("syncOp", "vim.Task", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ProtectionService.RemoteProtectionDetails", "VsanDpClusterProtectionServiceRemoteProtectionDetails", "vim.vsandp.RemoteProtectionInfo", "vim.vsandp.version.version8", [("syncOp", "vim.Task", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ProtectionService.ArchivalProtectionDetails", "VsanDpClusterProtectionServiceArchivalProtectionDetails", "vim.vsandp.ArchivalProtectionInfo", "vim.vsandp.version.version8", [("syncOp", "vim.Task", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ProtectionService.CgError", "VsanDpClusterProtectionServiceCgError", "vmodl.DynamicData", "vim.vsandp.version.version8", [("key", "string", "vim.vsandp.version.version8", 0), ("fault", "vmodl.MethodFault", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ProtectionService.TargetFilterSpec", "VsanDpClusterProtectionServiceTargetFilterSpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("localRequested", "boolean", "vim.vsandp.version.version8", 0), ("remoteRequested", "boolean", "vim.vsandp.version.version8", 0), ("remoteTarget", "vim.vsandp.RemoteVsanLocation[]", "vim.vsandp.version.version8", F_OPTIONAL), ("targetRequested", "boolean", "vim.vsandp.version.version8", 0), ("archiveRequested", "boolean", "vim.vsandp.version.version8", 0), ("archiveTarget", "vim.vsandp.ArchivalStorageLocation[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ProtectionService.CgInfoQuery", "VsanDpClusterProtectionServiceCgInfoQuery", "vmodl.DynamicData", "vim.vsandp.version.version8", [("result", "vim.vsandp.CgInfo[]", "vim.vsandp.version.version8", F_OPTIONAL), ("error", "vim.vsandp.cluster.ProtectionService.CgError[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ProtectionService.CgInfoQuery.Spec", "VsanDpClusterProtectionServiceCgInfoQuerySpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", F_OPTIONAL), ("cg", "string[]", "vim.vsandp.version.version8", 0), ("targetFilter", "vim.vsandp.cluster.ProtectionService.TargetFilterSpec", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ProtectionService.InstanceQuery", "VsanDpClusterProtectionServiceInstanceQuery", "vmodl.DynamicData", "vim.vsandp.version.version8", [("result", "vim.vsandp.cluster.ProtectionService.InstanceQuery.Result[]", "vim.vsandp.version.version8", F_OPTIONAL), ("error", "vim.vsandp.cluster.ProtectionService.CgError[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ProtectionService.InstanceQuery.Spec", "VsanDpClusterProtectionServiceInstanceQuerySpec", "vim.vsandp.InstanceQuerySpecBase", "vim.vsandp.version.version8", [("entry", "vim.vsandp.cluster.ProtectionService.InstanceQuery.Spec.Entry[]", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ProtectionService.InstanceQuery.Spec.Entry", "VsanDpClusterProtectionServiceInstanceQuerySpecEntry", "vim.vsandp.InstanceQuerySpecBase.EntryBase", "vim.vsandp.version.version8", [("cg", "string", "vim.vsandp.version.version8", 0), ("targetFilter", "vim.vsandp.cluster.ProtectionService.TargetFilterSpec", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ProtectionService.InstanceQuery.Result", "VsanDpClusterProtectionServiceInstanceQueryResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("cg", "string", "vim.vsandp.version.version8", 0), ("series", "vim.vsandp.cluster.ProtectionService.InstanceQuery.Result.SeriesEntry[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ProtectionService.InstanceQuery.Result.SeriesEntry", "VsanDpClusterProtectionServiceInstanceQueryResultSeriesEntry", "vmodl.DynamicData", "vim.vsandp.version.version8", [("location", "vim.vsandp.Location", "vim.vsandp.version.version8", 0), ("instance", "vim.vsandp.GroupInstanceData[]", "vim.vsandp.version.version8", F_OPTIONAL), ("totalInstances", "int", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.cluster.ProtectionService.SyncOp", "VsanDpClusterProtectionServiceSyncOp", "vmodl.DynamicData", "vim.vsandp.version.version8", [("target", "vim.vsandp.cluster.ProtectionService.SyncOp.Result[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ProtectionService.SyncOp.Spec", "VsanDpClusterProtectionServiceSyncOpSpec", "vmodl.DynamicData", "vim.vsandp.version.version8", [("cluster", "vim.ClusterComputeResource", "vim.vsandp.version.version8", F_OPTIONAL), ("cg", "string", "vim.vsandp.version.version8", 0), ("targetFilter", "vim.vsandp.cluster.ProtectionService.TargetFilterSpec", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.cluster.ProtectionService.SyncOp.Result", "VsanDpClusterProtectionServiceSyncOpResult", "vmodl.DynamicData", "vim.vsandp.version.version8", [("location", "vim.vsandp.Location", "vim.vsandp.version.version8", 0), ("syncOp", "vim.Task", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.AlreadyLoggedIn", "VsanDpFaultAlreadyLoggedIn", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.CertificateStoreFault", "VsanDpFaultCertificateStoreFault", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.ConcurrencyLimitReached", "VsanDpFaultConcurrencyLimitReached", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("requestLimit", "int", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.ConnectionDown", "VsanDpFaultConnectionDown", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.ConnectionToServerDown", "VsanDpFaultConnectionToServerDown", "vim.vsandp.fault.ConnectionDown", "vim.vsandp.version.version8", [("serverUri", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.ConsistencyGroupUnavailable", "VsanDpFaultConsistencyGroupUnavailable", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("cgId", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.ConsistencyGroupUnhealthy", "VsanDpFaultConsistencyGroupUnhealthy", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("cgId", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.DatabaseError", "VsanDpFaultDatabaseError", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.FolderNotFound", "VsanDpFaultFolderNotFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("folderMoRef", "vmodl.ManagedObject", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.GcInProgress", "VsanDpFaultGcInProgress", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.HostNotFound", "VsanDpFaultHostNotFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("hostMoRef", "vmodl.ManagedObject", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.HostdConnectionDown", "VsanDpFaultHostdConnectionDown", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.ImageCreationInProgress", "VsanDpFaultImageCreationInProgress", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("imageId", "string", "vim.vsandp.version.version8", 0), ("creator", "string", "vim.vsandp.version.version8", 0), ("createImageOp", "vim.Task", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.fault.ImageNotFound", "VsanDpFaultImageNotFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("imageKey", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.ImageServiceFault", "VsanDpFaultImageServiceFault", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.InstanceNotFound", "VsanDpFaultInstanceNotFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("seriesId", "string", "vim.vsandp.version.version8", 0), ("groupInstanceKey", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.InvalidDatastore", "VsanDpFaultInvalidDatastore", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("datastoreUrl", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.InvalidEndpointUrl", "VsanDpFaultInvalidEndpointUrl", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.InvalidLogin", "VsanDpFaultInvalidLogin", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.InvalidVmNamespacePath", "VsanDpFaultInvalidVmNamespacePath", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("invalidVmNamespacePath", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.InventoryServiceFault", "VsanDpFaultInventoryServiceFault", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.ManagedSnapshotNotFound", "VsanDpFaultManagedSnapshotNotFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("vm", "vim.VirtualMachine", "vim.vsandp.version.version8", 0), ("vmName", "string", "vim.vsandp.version.version8", 0), ("snapshotName", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.ManagedSnapshotsFound", "VsanDpFaultManagedSnapshotsFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("vm", "vim.VirtualMachine", "vim.vsandp.version.version8", 0), ("vmName", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.MemberNotFound", "VsanDpFaultMemberNotFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("memberUri", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.NetworkNotFound", "VsanDpFaultNetworkNotFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("networkRef", "vmodl.ManagedObject", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.NoClientCertificate", "VsanDpFaultNoClientCertificate", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.NoHostFound", "VsanDpFaultNoHostFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.NoProtectedObjectsToRecover", "VsanDpFaultNoProtectedObjectsToRecover", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.NoServerCredential", "VsanDpFaultNoServerCredential", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.NoSiteFound", "VsanDpFaultNoSiteFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.NotConsistencyGroupOwner", "VsanDpFaultNotConsistencyGroupOwner", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("ownerUuid", "string", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.fault.NotDataProtectionOwner", "VsanDpFaultNotDataProtectionOwner", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("owner", "string[]", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.fault.NotLoggedIn", "VsanDpFaultNotLoggedIn", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.ObjectNotPatched", "VsanDpFaultObjectNotPatched", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("vsanUri", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.ObjectNotProtected", "VsanDpFaultObjectNotProtected", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("objUri", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.OperationInterrupted", "VsanDpFaultOperationInterrupted", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.PETypeMismatch", "VsanDpFaultPETypeMismatch", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("PEType", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.PETypeUnknown", "VsanDpFaultPETypeUnknown", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.PermissionCheckFailed", "VsanDpFaultPermissionCheckFailed", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("moRef", "vmodl.ManagedObject", "vim.vsandp.version.version8", 0), ("principalId", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.PolicyNotEncrypted", "VsanDpFaultPolicyNotEncrypted", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("policyName", "string", "vim.vsandp.version.version8", 0), ("recoveredVmName", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.PolicyNotFound", "VsanDpFaultPolicyNotFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("policyId", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.PowerOnFailed", "VsanDpFaultPowerOnFailed", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("vm", "vim.VirtualMachine", "vim.vsandp.version.version8", 0), ("vmName", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.ProtectedEntityInvalidConfig", "VsanDpFaultProtectedEntityInvalidConfig", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.ProtectionServiceFault", "VsanDpFaultProtectionServiceFault", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.QsmShutdown", "VsanDpFaultQsmShutdown", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.QueryLimitExceeded", "VsanDpFaultQueryLimitExceeded", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("resultLimit", "int", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.RecoveryFailed", "VsanDpFaultRecoveryFailed", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("cgId", "string", "vim.vsandp.version.version8", 0), ("instanceId", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("imageId", "string", "vim.vsandp.version.version8", F_OPTIONAL), ("vm", "vim.VirtualMachine", "vim.vsandp.version.version8", F_OPTIONAL)])
CreateDataType("vim.vsandp.fault.RequestKeyLimitExceeded", "VsanDpFaultRequestKeyLimitExceeded", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("requestKeyLimit", "int", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.ResourcePoolNotFound", "VsanDpFaultResourcePoolNotFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("resourcePoolMoRef", "vmodl.ManagedObject", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.RestoreLimitExceeded", "VsanDpFaultRestoreLimitExceeded", "vim.vsandp.fault.RecoveryFailed", "vim.vsandp.version.version8", [("restoredVmName", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.RestoreVmOperationInterrupted", "VsanDpFaultRestoreVmOperationInterrupted", "vim.vsandp.fault.OperationInterrupted", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.RestoredVmNameEmpty", "VsanDpFaultRestoredVmNameEmpty", "vim.vsandp.fault.RecoveryFailed", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.RestoredVmNameTooLong", "VsanDpFaultRestoredVmNameTooLong", "vim.vsandp.fault.RecoveryFailed", "vim.vsandp.version.version8", [("restoredVmName", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.SeriesLocationNotSupported", "VsanDpFaultSeriesLocationNotSupported", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("seriesId", "string", "vim.vsandp.version.version8", 0), ("unsupportedLocation", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.SeriesNotFound", "VsanDpFaultSeriesNotFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("seriesId", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.ServiceEndpointNotFound", "VsanDpFaultServiceEndpointNotFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("serviceName", "string", "vim.vsandp.version.version8", 0), ("serviceType", "string", "vim.vsandp.version.version8", 0), ("endpointProtocol", "string", "vim.vsandp.version.version8", 0), ("endpointType", "string", "vim.vsandp.version.version8", 0), ("nodeId", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.SyncInProgress", "VsanDpFaultSyncInProgress", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("cgId", "string", "vim.vsandp.version.version8", 0), ("cgDisplayName", "string", "vim.vsandp.version.version8", 0), ("targetLocation", "vim.vsandp.Location", "vim.vsandp.version.version8", 0), ("syncOp", "vim.Task", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.UnsupportedSeriesVersion", "VsanDpFaultUnsupportedSeriesVersion", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("seriesVersion", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.ValidationFailed", "VsanDpFaultValidationFailed", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.VmPatchingIncomplete", "VsanDpFaultVmPatchingIncomplete", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.VmRegistrationFailed", "VsanDpFaultVmRegistrationFailed", "vim.vsandp.fault.RecoveryFailed", "vim.vsandp.version.version8", [("vmxPath", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.VmotionInProgress", "VsanDpFaultVmotionInProgress", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.VsanClusterNotFound", "VsanDpFaultVsanClusterNotFound", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("clusterId", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.VsanDatastoreNotFoundInCluster", "VsanDpFaultVsanDatastoreNotFoundInCluster", "vim.vsandp.fault.VsanDpFault", "vim.vsandp.version.version8", [("clusterId", "string", "vim.vsandp.version.version8", 0)])
CreateDataType("vim.vsandp.fault.DatabaseCorrupt", "VsanDpFaultDatabaseCorrupt", "vim.vsandp.fault.DatabaseError", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.MultipleCgsForPe", "VsanDpFaultMultipleCgsForPe", "vim.vsandp.fault.ValidationFailed", "vim.vsandp.version.version8", None)
CreateDataType("vim.vsandp.fault.OutstandingImageLimitExceeded", "VsanDpFaultOutstandingImageLimitExceeded", "vim.vsandp.fault.RecoveryFailed", "vim.vsandp.version.version8", None)
