# ******* WARNING - AUTO GENERATED CODE - DO NOT EDIT *******
from .VmomiSupport import CreateDataType, CreateManagedType
from .VmomiSupport import CreateEnumType
from .VmomiSupport import AddVersion, AddVersionParent
from .VmomiSupport import AddBreakingChangesInfo
from .VmomiSupport import F_LINK, F_LINKABLE
from .VmomiSupport import F_OPTIONAL, F_SECRET
from .VmomiSupport import newestVersions, stableVersions
from .VmomiSupport import publicVersions, dottedVersions
from .VmomiSupport import oldestVersions

AddVersion("vim.version.version10", "vim25", "6.0", 0, "vim25")
AddVersion("vim.version.version11", "vim25", "6.5", 0, "vim25")
AddVersion("vim.version.version12", "vim25", "6.7", 0, "vim25")
AddVersion("nfc.version.unstable", "nfc", "unstable", 0, "nfc")
AddVersion("vmodl.reflect.version.version2", "reflect", "2.0", 0, "reflect")
AddVersion("vpxapi.version.legacy", "vpxa3", "legacy", 0, "")
AddVersion("vmodl.reflect.version.version1", "reflect", "1.0", 0, "reflect")
AddVersion("nfc.version.version11", "nfc", "6.5", 0, "nfc")
AddVersion("vim.version.version13", "vim25", "6.7.1", 0, "vim25")
AddVersion("nfc.version.version10", "nfc", "6.0", 0, "nfc")
AddVersion("vim.version.unstable", "vim25", "unstable", 0, "vim25")
AddVersion("nfc.version.version12", "nfc", "6.7", 0, "nfc")
AddVersion("nfc.version.version13", "nfc", "6.7.1", 0, "nfc")
AddVersion("vim.version.version1", "vim2", "2.0", 0, "vim25")
AddVersion("vpxapi.version.version12", "vpxa3", "6.7", 0, "")
AddVersion("vim.version.version2", "vim25", "2.5", 0, "vim25")
AddVersion("vim.version.version3", "vim25", "2.5u2", 0, "vim25")
AddVersion("vpxapi.version.version11", "vpxa3", "6.5", 0, "")
AddVersion("vim.version.version4", "vim25", "2.5u2server", 0, "vim25")
AddVersion("vim.version.version5", "vim25", "4.0", 0, "vim25")
AddVersion("vpxapi.version.version13", "vpxa3", "6.7.1", 0, "")
AddVersion("vim.version.version6", "vim25", "4.1", 0, "vim25")
AddVersion("vim.version.version7", "vim25", "5.0", 0, "vim25")
AddVersion("vim.version.version8", "vim25", "5.1", 0, "vim25")
AddVersion("vim.version.version9", "vim25", "5.5", 0, "vim25")
AddVersion("nfc.version.version3", "nfc", "3.0", 0, "nfc")
AddVersion("vpxapi.version.version10", "vpxa3", "6.0", 0, "")
AddVersion("vmodl.version.version2", "", "", 0, "vim25")
AddVersion("nfc.version.version2", "nfc", "2.0", 0, "nfc")
AddVersion("vmodl.version.version1", "", "", 0, "vim25")
AddVersion("vpxapi.version.stable", "vpxa3", "s262C8", 0, "")
AddVersion("vmodl.version.version0", "", "", 0, "vim25")
AddVersion("nfc.version.version1", "nfc", "1.0", 0, "nfc")
AddVersion("vmodl.query.version.version1", "", "", 0, "vim25")
AddVersion("nfc.version.legacy", "nfc", "legacy", 0, "nfc")
AddVersion("vmodl.query.version.version2", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version3", "", "", 0, "vim25")
AddVersion("vmodl.query.version.version4", "", "", 0, "vim25")
AddVersion("vim.version.legacy", "vim25", "legacy", 0, "vim25")
AddVersion("vim.version.m5", "vim25", "m5", 0, "vim25")
AddVersion("nfc.version.m5", "nfc", "m5", 0, "nfc")
AddVersion("vpxapi.version.m5", "vpxa3", "m5", 0, "")
AddVersion("vpxapi.version.unstable", "vpxa3", "uCBE37", 0, "")
AddVersion("nfc.version.stable", "nfc", "stable", 0, "nfc")
AddVersion("vpxapi.version.version9", "vpxa3", "5.5", 0, "")
AddVersion("vpxapi.version.version8", "vpxa3", "4.0", 0, "")
AddVersion("vpxapi.version.version7", "vpxa3", "3.0", 0, "")
AddVersion("vpxapi.version.version6", "vpxa3", "2.0", 0, "")
AddVersion("vpxapi.version.version1", "vpxa3", "", 0, "")
AddVersion("vim.version.stable", "vim25", "stable", 0, "vim25")
AddVersionParent("vim.version.version10", "vim.version.version10")
AddVersionParent("vim.version.version10", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.version10", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version10", "vim.version.version1")
AddVersionParent("vim.version.version10", "vim.version.version2")
AddVersionParent("vim.version.version10", "vim.version.version3")
AddVersionParent("vim.version.version10", "vim.version.version4")
AddVersionParent("vim.version.version10", "vim.version.version5")
AddVersionParent("vim.version.version10", "vim.version.version6")
AddVersionParent("vim.version.version10", "vim.version.version7")
AddVersionParent("vim.version.version10", "vim.version.version8")
AddVersionParent("vim.version.version10", "vim.version.version9")
AddVersionParent("vim.version.version10", "vmodl.version.version2")
AddVersionParent("vim.version.version10", "vmodl.version.version1")
AddVersionParent("vim.version.version10", "vmodl.version.version0")
AddVersionParent("vim.version.version10", "vmodl.query.version.version1")
AddVersionParent("vim.version.version10", "vmodl.query.version.version2")
AddVersionParent("vim.version.version10", "vmodl.query.version.version3")
AddVersionParent("vim.version.version10", "vmodl.query.version.version4")
AddVersionParent("vim.version.version11", "vim.version.version10")
AddVersionParent("vim.version.version11", "vim.version.version11")
AddVersionParent("vim.version.version11", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.version11", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version11", "vim.version.version1")
AddVersionParent("vim.version.version11", "vim.version.version2")
AddVersionParent("vim.version.version11", "vim.version.version3")
AddVersionParent("vim.version.version11", "vim.version.version4")
AddVersionParent("vim.version.version11", "vim.version.version5")
AddVersionParent("vim.version.version11", "vim.version.version6")
AddVersionParent("vim.version.version11", "vim.version.version7")
AddVersionParent("vim.version.version11", "vim.version.version8")
AddVersionParent("vim.version.version11", "vim.version.version9")
AddVersionParent("vim.version.version11", "vmodl.version.version2")
AddVersionParent("vim.version.version11", "vmodl.version.version1")
AddVersionParent("vim.version.version11", "vmodl.version.version0")
AddVersionParent("vim.version.version11", "vmodl.query.version.version1")
AddVersionParent("vim.version.version11", "vmodl.query.version.version2")
AddVersionParent("vim.version.version11", "vmodl.query.version.version3")
AddVersionParent("vim.version.version11", "vmodl.query.version.version4")
AddVersionParent("vim.version.version12", "vim.version.version10")
AddVersionParent("vim.version.version12", "vim.version.version11")
AddVersionParent("vim.version.version12", "vim.version.version12")
AddVersionParent("vim.version.version12", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.version12", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version12", "vim.version.version1")
AddVersionParent("vim.version.version12", "vim.version.version2")
AddVersionParent("vim.version.version12", "vim.version.version3")
AddVersionParent("vim.version.version12", "vim.version.version4")
AddVersionParent("vim.version.version12", "vim.version.version5")
AddVersionParent("vim.version.version12", "vim.version.version6")
AddVersionParent("vim.version.version12", "vim.version.version7")
AddVersionParent("vim.version.version12", "vim.version.version8")
AddVersionParent("vim.version.version12", "vim.version.version9")
AddVersionParent("vim.version.version12", "vmodl.version.version2")
AddVersionParent("vim.version.version12", "vmodl.version.version1")
AddVersionParent("vim.version.version12", "vmodl.version.version0")
AddVersionParent("vim.version.version12", "vmodl.query.version.version1")
AddVersionParent("vim.version.version12", "vmodl.query.version.version2")
AddVersionParent("vim.version.version12", "vmodl.query.version.version3")
AddVersionParent("vim.version.version12", "vmodl.query.version.version4")
AddVersionParent("nfc.version.unstable", "vim.version.version10")
AddVersionParent("nfc.version.unstable", "vim.version.version11")
AddVersionParent("nfc.version.unstable", "vim.version.version12")
AddVersionParent("nfc.version.unstable", "nfc.version.unstable")
AddVersionParent("nfc.version.unstable", "vmodl.reflect.version.version2")
AddVersionParent("nfc.version.unstable", "vmodl.reflect.version.version1")
AddVersionParent("nfc.version.unstable", "nfc.version.version11")
AddVersionParent("nfc.version.unstable", "vim.version.version13")
AddVersionParent("nfc.version.unstable", "nfc.version.version10")
AddVersionParent("nfc.version.unstable", "vim.version.unstable")
AddVersionParent("nfc.version.unstable", "nfc.version.version12")
AddVersionParent("nfc.version.unstable", "nfc.version.version13")
AddVersionParent("nfc.version.unstable", "vim.version.version1")
AddVersionParent("nfc.version.unstable", "vim.version.version2")
AddVersionParent("nfc.version.unstable", "vim.version.version3")
AddVersionParent("nfc.version.unstable", "vim.version.version4")
AddVersionParent("nfc.version.unstable", "vim.version.version5")
AddVersionParent("nfc.version.unstable", "vim.version.version6")
AddVersionParent("nfc.version.unstable", "vim.version.version7")
AddVersionParent("nfc.version.unstable", "vim.version.version8")
AddVersionParent("nfc.version.unstable", "vim.version.version9")
AddVersionParent("nfc.version.unstable", "nfc.version.version3")
AddVersionParent("nfc.version.unstable", "vmodl.version.version2")
AddVersionParent("nfc.version.unstable", "nfc.version.version2")
AddVersionParent("nfc.version.unstable", "vmodl.version.version1")
AddVersionParent("nfc.version.unstable", "vmodl.version.version0")
AddVersionParent("nfc.version.unstable", "nfc.version.version1")
AddVersionParent("nfc.version.unstable", "vmodl.query.version.version1")
AddVersionParent("nfc.version.unstable", "vmodl.query.version.version2")
AddVersionParent("nfc.version.unstable", "vmodl.query.version.version3")
AddVersionParent("nfc.version.unstable", "vmodl.query.version.version4")
AddVersionParent("nfc.version.unstable", "vim.version.m5")
AddVersionParent("nfc.version.unstable", "nfc.version.m5")
AddVersionParent("nfc.version.unstable", "nfc.version.stable")
AddVersionParent("nfc.version.unstable", "vim.version.stable")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.reflect.version.version2")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.reflect.version.version1")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.version.version2")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.reflect.version.version2", "vmodl.version.version0")
AddVersionParent("vpxapi.version.legacy", "vim.version.version10")
AddVersionParent("vpxapi.version.legacy", "vim.version.version11")
AddVersionParent("vpxapi.version.legacy", "vim.version.version12")
AddVersionParent("vpxapi.version.legacy", "nfc.version.unstable")
AddVersionParent("vpxapi.version.legacy", "vmodl.reflect.version.version2")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.legacy")
AddVersionParent("vpxapi.version.legacy", "vmodl.reflect.version.version1")
AddVersionParent("vpxapi.version.legacy", "nfc.version.version11")
AddVersionParent("vpxapi.version.legacy", "vim.version.version13")
AddVersionParent("vpxapi.version.legacy", "nfc.version.version10")
AddVersionParent("vpxapi.version.legacy", "vim.version.unstable")
AddVersionParent("vpxapi.version.legacy", "nfc.version.version12")
AddVersionParent("vpxapi.version.legacy", "nfc.version.version13")
AddVersionParent("vpxapi.version.legacy", "vim.version.version1")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.version12")
AddVersionParent("vpxapi.version.legacy", "vim.version.version2")
AddVersionParent("vpxapi.version.legacy", "vim.version.version3")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.version11")
AddVersionParent("vpxapi.version.legacy", "vim.version.version4")
AddVersionParent("vpxapi.version.legacy", "vim.version.version5")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.version13")
AddVersionParent("vpxapi.version.legacy", "vim.version.version6")
AddVersionParent("vpxapi.version.legacy", "vim.version.version7")
AddVersionParent("vpxapi.version.legacy", "vim.version.version8")
AddVersionParent("vpxapi.version.legacy", "vim.version.version9")
AddVersionParent("vpxapi.version.legacy", "nfc.version.version3")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.version10")
AddVersionParent("vpxapi.version.legacy", "vmodl.version.version2")
AddVersionParent("vpxapi.version.legacy", "nfc.version.version2")
AddVersionParent("vpxapi.version.legacy", "vmodl.version.version1")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.stable")
AddVersionParent("vpxapi.version.legacy", "vmodl.version.version0")
AddVersionParent("vpxapi.version.legacy", "nfc.version.version1")
AddVersionParent("vpxapi.version.legacy", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.legacy", "nfc.version.legacy")
AddVersionParent("vpxapi.version.legacy", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.legacy", "vmodl.query.version.version3")
AddVersionParent("vpxapi.version.legacy", "vmodl.query.version.version4")
AddVersionParent("vpxapi.version.legacy", "vim.version.legacy")
AddVersionParent("vpxapi.version.legacy", "vim.version.m5")
AddVersionParent("vpxapi.version.legacy", "nfc.version.m5")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.m5")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.unstable")
AddVersionParent("vpxapi.version.legacy", "nfc.version.stable")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.version9")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.version8")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.version7")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.version6")
AddVersionParent("vpxapi.version.legacy", "vpxapi.version.version1")
AddVersionParent("vpxapi.version.legacy", "vim.version.stable")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.reflect.version.version1")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version2")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version1")
AddVersionParent("vmodl.reflect.version.version1", "vmodl.version.version0")
AddVersionParent("nfc.version.version11", "vmodl.reflect.version.version2")
AddVersionParent("nfc.version.version11", "vmodl.reflect.version.version1")
AddVersionParent("nfc.version.version11", "nfc.version.version11")
AddVersionParent("nfc.version.version11", "nfc.version.version10")
AddVersionParent("nfc.version.version11", "vim.version.version1")
AddVersionParent("nfc.version.version11", "nfc.version.version3")
AddVersionParent("nfc.version.version11", "vmodl.version.version2")
AddVersionParent("nfc.version.version11", "nfc.version.version2")
AddVersionParent("nfc.version.version11", "vmodl.version.version1")
AddVersionParent("nfc.version.version11", "vmodl.version.version0")
AddVersionParent("nfc.version.version11", "nfc.version.version1")
AddVersionParent("nfc.version.version11", "vmodl.query.version.version1")
AddVersionParent("vim.version.version13", "vim.version.version10")
AddVersionParent("vim.version.version13", "vim.version.version11")
AddVersionParent("vim.version.version13", "vim.version.version12")
AddVersionParent("vim.version.version13", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.version13", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version13", "vim.version.version13")
AddVersionParent("vim.version.version13", "vim.version.version1")
AddVersionParent("vim.version.version13", "vim.version.version2")
AddVersionParent("vim.version.version13", "vim.version.version3")
AddVersionParent("vim.version.version13", "vim.version.version4")
AddVersionParent("vim.version.version13", "vim.version.version5")
AddVersionParent("vim.version.version13", "vim.version.version6")
AddVersionParent("vim.version.version13", "vim.version.version7")
AddVersionParent("vim.version.version13", "vim.version.version8")
AddVersionParent("vim.version.version13", "vim.version.version9")
AddVersionParent("vim.version.version13", "vmodl.version.version2")
AddVersionParent("vim.version.version13", "vmodl.version.version1")
AddVersionParent("vim.version.version13", "vmodl.version.version0")
AddVersionParent("vim.version.version13", "vmodl.query.version.version1")
AddVersionParent("vim.version.version13", "vmodl.query.version.version2")
AddVersionParent("vim.version.version13", "vmodl.query.version.version3")
AddVersionParent("vim.version.version13", "vmodl.query.version.version4")
AddVersionParent("nfc.version.version10", "vmodl.reflect.version.version2")
AddVersionParent("nfc.version.version10", "vmodl.reflect.version.version1")
AddVersionParent("nfc.version.version10", "nfc.version.version10")
AddVersionParent("nfc.version.version10", "vim.version.version1")
AddVersionParent("nfc.version.version10", "nfc.version.version3")
AddVersionParent("nfc.version.version10", "vmodl.version.version2")
AddVersionParent("nfc.version.version10", "nfc.version.version2")
AddVersionParent("nfc.version.version10", "vmodl.version.version1")
AddVersionParent("nfc.version.version10", "vmodl.version.version0")
AddVersionParent("nfc.version.version10", "nfc.version.version1")
AddVersionParent("nfc.version.version10", "vmodl.query.version.version1")
AddVersionParent("vim.version.unstable", "vim.version.version10")
AddVersionParent("vim.version.unstable", "vim.version.version11")
AddVersionParent("vim.version.unstable", "vim.version.version12")
AddVersionParent("vim.version.unstable", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.unstable", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.unstable", "vim.version.version13")
AddVersionParent("vim.version.unstable", "vim.version.unstable")
AddVersionParent("vim.version.unstable", "vim.version.version1")
AddVersionParent("vim.version.unstable", "vim.version.version2")
AddVersionParent("vim.version.unstable", "vim.version.version3")
AddVersionParent("vim.version.unstable", "vim.version.version4")
AddVersionParent("vim.version.unstable", "vim.version.version5")
AddVersionParent("vim.version.unstable", "vim.version.version6")
AddVersionParent("vim.version.unstable", "vim.version.version7")
AddVersionParent("vim.version.unstable", "vim.version.version8")
AddVersionParent("vim.version.unstable", "vim.version.version9")
AddVersionParent("vim.version.unstable", "vmodl.version.version2")
AddVersionParent("vim.version.unstable", "vmodl.version.version1")
AddVersionParent("vim.version.unstable", "vmodl.version.version0")
AddVersionParent("vim.version.unstable", "vmodl.query.version.version1")
AddVersionParent("vim.version.unstable", "vmodl.query.version.version2")
AddVersionParent("vim.version.unstable", "vmodl.query.version.version3")
AddVersionParent("vim.version.unstable", "vmodl.query.version.version4")
AddVersionParent("vim.version.unstable", "vim.version.m5")
AddVersionParent("vim.version.unstable", "vim.version.stable")
AddVersionParent("nfc.version.version12", "vim.version.version10")
AddVersionParent("nfc.version.version12", "vim.version.version11")
AddVersionParent("nfc.version.version12", "vim.version.version12")
AddVersionParent("nfc.version.version12", "vmodl.reflect.version.version2")
AddVersionParent("nfc.version.version12", "vmodl.reflect.version.version1")
AddVersionParent("nfc.version.version12", "nfc.version.version11")
AddVersionParent("nfc.version.version12", "nfc.version.version10")
AddVersionParent("nfc.version.version12", "nfc.version.version12")
AddVersionParent("nfc.version.version12", "vim.version.version1")
AddVersionParent("nfc.version.version12", "vim.version.version2")
AddVersionParent("nfc.version.version12", "vim.version.version3")
AddVersionParent("nfc.version.version12", "vim.version.version4")
AddVersionParent("nfc.version.version12", "vim.version.version5")
AddVersionParent("nfc.version.version12", "vim.version.version6")
AddVersionParent("nfc.version.version12", "vim.version.version7")
AddVersionParent("nfc.version.version12", "vim.version.version8")
AddVersionParent("nfc.version.version12", "vim.version.version9")
AddVersionParent("nfc.version.version12", "nfc.version.version3")
AddVersionParent("nfc.version.version12", "vmodl.version.version2")
AddVersionParent("nfc.version.version12", "nfc.version.version2")
AddVersionParent("nfc.version.version12", "vmodl.version.version1")
AddVersionParent("nfc.version.version12", "vmodl.version.version0")
AddVersionParent("nfc.version.version12", "nfc.version.version1")
AddVersionParent("nfc.version.version12", "vmodl.query.version.version1")
AddVersionParent("nfc.version.version12", "vmodl.query.version.version2")
AddVersionParent("nfc.version.version12", "vmodl.query.version.version3")
AddVersionParent("nfc.version.version12", "vmodl.query.version.version4")
AddVersionParent("nfc.version.version13", "vim.version.version10")
AddVersionParent("nfc.version.version13", "vim.version.version11")
AddVersionParent("nfc.version.version13", "vim.version.version12")
AddVersionParent("nfc.version.version13", "vmodl.reflect.version.version2")
AddVersionParent("nfc.version.version13", "vmodl.reflect.version.version1")
AddVersionParent("nfc.version.version13", "nfc.version.version11")
AddVersionParent("nfc.version.version13", "vim.version.version13")
AddVersionParent("nfc.version.version13", "nfc.version.version10")
AddVersionParent("nfc.version.version13", "nfc.version.version12")
AddVersionParent("nfc.version.version13", "nfc.version.version13")
AddVersionParent("nfc.version.version13", "vim.version.version1")
AddVersionParent("nfc.version.version13", "vim.version.version2")
AddVersionParent("nfc.version.version13", "vim.version.version3")
AddVersionParent("nfc.version.version13", "vim.version.version4")
AddVersionParent("nfc.version.version13", "vim.version.version5")
AddVersionParent("nfc.version.version13", "vim.version.version6")
AddVersionParent("nfc.version.version13", "vim.version.version7")
AddVersionParent("nfc.version.version13", "vim.version.version8")
AddVersionParent("nfc.version.version13", "vim.version.version9")
AddVersionParent("nfc.version.version13", "nfc.version.version3")
AddVersionParent("nfc.version.version13", "vmodl.version.version2")
AddVersionParent("nfc.version.version13", "nfc.version.version2")
AddVersionParent("nfc.version.version13", "vmodl.version.version1")
AddVersionParent("nfc.version.version13", "vmodl.version.version0")
AddVersionParent("nfc.version.version13", "nfc.version.version1")
AddVersionParent("nfc.version.version13", "vmodl.query.version.version1")
AddVersionParent("nfc.version.version13", "vmodl.query.version.version2")
AddVersionParent("nfc.version.version13", "vmodl.query.version.version3")
AddVersionParent("nfc.version.version13", "vmodl.query.version.version4")
AddVersionParent("vim.version.version1", "vim.version.version1")
AddVersionParent("vim.version.version1", "vmodl.version.version0")
AddVersionParent("vim.version.version1", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.version12", "vim.version.version10")
AddVersionParent("vpxapi.version.version12", "vim.version.version11")
AddVersionParent("vpxapi.version.version12", "vim.version.version12")
AddVersionParent("vpxapi.version.version12", "vmodl.reflect.version.version2")
AddVersionParent("vpxapi.version.version12", "vmodl.reflect.version.version1")
AddVersionParent("vpxapi.version.version12", "nfc.version.version11")
AddVersionParent("vpxapi.version.version12", "nfc.version.version10")
AddVersionParent("vpxapi.version.version12", "nfc.version.version12")
AddVersionParent("vpxapi.version.version12", "vim.version.version1")
AddVersionParent("vpxapi.version.version12", "vpxapi.version.version12")
AddVersionParent("vpxapi.version.version12", "vim.version.version2")
AddVersionParent("vpxapi.version.version12", "vim.version.version3")
AddVersionParent("vpxapi.version.version12", "vpxapi.version.version11")
AddVersionParent("vpxapi.version.version12", "vim.version.version4")
AddVersionParent("vpxapi.version.version12", "vim.version.version5")
AddVersionParent("vpxapi.version.version12", "vim.version.version6")
AddVersionParent("vpxapi.version.version12", "vim.version.version7")
AddVersionParent("vpxapi.version.version12", "vim.version.version8")
AddVersionParent("vpxapi.version.version12", "vim.version.version9")
AddVersionParent("vpxapi.version.version12", "nfc.version.version3")
AddVersionParent("vpxapi.version.version12", "vpxapi.version.version10")
AddVersionParent("vpxapi.version.version12", "vmodl.version.version2")
AddVersionParent("vpxapi.version.version12", "nfc.version.version2")
AddVersionParent("vpxapi.version.version12", "vmodl.version.version1")
AddVersionParent("vpxapi.version.version12", "vmodl.version.version0")
AddVersionParent("vpxapi.version.version12", "nfc.version.version1")
AddVersionParent("vpxapi.version.version12", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.version12", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.version12", "vmodl.query.version.version3")
AddVersionParent("vpxapi.version.version12", "vmodl.query.version.version4")
AddVersionParent("vpxapi.version.version12", "vpxapi.version.version9")
AddVersionParent("vpxapi.version.version12", "vpxapi.version.version8")
AddVersionParent("vpxapi.version.version12", "vpxapi.version.version7")
AddVersionParent("vpxapi.version.version12", "vpxapi.version.version6")
AddVersionParent("vpxapi.version.version12", "vpxapi.version.version1")
AddVersionParent("vim.version.version2", "vim.version.version1")
AddVersionParent("vim.version.version2", "vim.version.version2")
AddVersionParent("vim.version.version2", "vmodl.version.version0")
AddVersionParent("vim.version.version2", "vmodl.query.version.version1")
AddVersionParent("vim.version.version3", "vim.version.version1")
AddVersionParent("vim.version.version3", "vim.version.version2")
AddVersionParent("vim.version.version3", "vim.version.version3")
AddVersionParent("vim.version.version3", "vmodl.version.version0")
AddVersionParent("vim.version.version3", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.version11", "vim.version.version10")
AddVersionParent("vpxapi.version.version11", "vim.version.version11")
AddVersionParent("vpxapi.version.version11", "vmodl.reflect.version.version2")
AddVersionParent("vpxapi.version.version11", "vmodl.reflect.version.version1")
AddVersionParent("vpxapi.version.version11", "nfc.version.version11")
AddVersionParent("vpxapi.version.version11", "nfc.version.version10")
AddVersionParent("vpxapi.version.version11", "vim.version.version1")
AddVersionParent("vpxapi.version.version11", "vim.version.version2")
AddVersionParent("vpxapi.version.version11", "vim.version.version3")
AddVersionParent("vpxapi.version.version11", "vpxapi.version.version11")
AddVersionParent("vpxapi.version.version11", "vim.version.version4")
AddVersionParent("vpxapi.version.version11", "vim.version.version5")
AddVersionParent("vpxapi.version.version11", "vim.version.version6")
AddVersionParent("vpxapi.version.version11", "vim.version.version7")
AddVersionParent("vpxapi.version.version11", "vim.version.version8")
AddVersionParent("vpxapi.version.version11", "vim.version.version9")
AddVersionParent("vpxapi.version.version11", "nfc.version.version3")
AddVersionParent("vpxapi.version.version11", "vpxapi.version.version10")
AddVersionParent("vpxapi.version.version11", "vmodl.version.version2")
AddVersionParent("vpxapi.version.version11", "nfc.version.version2")
AddVersionParent("vpxapi.version.version11", "vmodl.version.version1")
AddVersionParent("vpxapi.version.version11", "vmodl.version.version0")
AddVersionParent("vpxapi.version.version11", "nfc.version.version1")
AddVersionParent("vpxapi.version.version11", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.version11", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.version11", "vmodl.query.version.version3")
AddVersionParent("vpxapi.version.version11", "vmodl.query.version.version4")
AddVersionParent("vpxapi.version.version11", "vpxapi.version.version9")
AddVersionParent("vpxapi.version.version11", "vpxapi.version.version8")
AddVersionParent("vpxapi.version.version11", "vpxapi.version.version7")
AddVersionParent("vpxapi.version.version11", "vpxapi.version.version6")
AddVersionParent("vpxapi.version.version11", "vpxapi.version.version1")
AddVersionParent("vim.version.version4", "vim.version.version1")
AddVersionParent("vim.version.version4", "vim.version.version2")
AddVersionParent("vim.version.version4", "vim.version.version3")
AddVersionParent("vim.version.version4", "vim.version.version4")
AddVersionParent("vim.version.version4", "vmodl.version.version0")
AddVersionParent("vim.version.version4", "vmodl.query.version.version1")
AddVersionParent("vim.version.version5", "vim.version.version1")
AddVersionParent("vim.version.version5", "vim.version.version2")
AddVersionParent("vim.version.version5", "vim.version.version3")
AddVersionParent("vim.version.version5", "vim.version.version4")
AddVersionParent("vim.version.version5", "vim.version.version5")
AddVersionParent("vim.version.version5", "vmodl.version.version1")
AddVersionParent("vim.version.version5", "vmodl.version.version0")
AddVersionParent("vim.version.version5", "vmodl.query.version.version1")
AddVersionParent("vim.version.version5", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.version13", "vim.version.version10")
AddVersionParent("vpxapi.version.version13", "vim.version.version11")
AddVersionParent("vpxapi.version.version13", "vim.version.version12")
AddVersionParent("vpxapi.version.version13", "vmodl.reflect.version.version2")
AddVersionParent("vpxapi.version.version13", "vmodl.reflect.version.version1")
AddVersionParent("vpxapi.version.version13", "nfc.version.version11")
AddVersionParent("vpxapi.version.version13", "vim.version.version13")
AddVersionParent("vpxapi.version.version13", "nfc.version.version10")
AddVersionParent("vpxapi.version.version13", "nfc.version.version12")
AddVersionParent("vpxapi.version.version13", "nfc.version.version13")
AddVersionParent("vpxapi.version.version13", "vim.version.version1")
AddVersionParent("vpxapi.version.version13", "vpxapi.version.version12")
AddVersionParent("vpxapi.version.version13", "vim.version.version2")
AddVersionParent("vpxapi.version.version13", "vim.version.version3")
AddVersionParent("vpxapi.version.version13", "vpxapi.version.version11")
AddVersionParent("vpxapi.version.version13", "vim.version.version4")
AddVersionParent("vpxapi.version.version13", "vim.version.version5")
AddVersionParent("vpxapi.version.version13", "vpxapi.version.version13")
AddVersionParent("vpxapi.version.version13", "vim.version.version6")
AddVersionParent("vpxapi.version.version13", "vim.version.version7")
AddVersionParent("vpxapi.version.version13", "vim.version.version8")
AddVersionParent("vpxapi.version.version13", "vim.version.version9")
AddVersionParent("vpxapi.version.version13", "nfc.version.version3")
AddVersionParent("vpxapi.version.version13", "vpxapi.version.version10")
AddVersionParent("vpxapi.version.version13", "vmodl.version.version2")
AddVersionParent("vpxapi.version.version13", "nfc.version.version2")
AddVersionParent("vpxapi.version.version13", "vmodl.version.version1")
AddVersionParent("vpxapi.version.version13", "vmodl.version.version0")
AddVersionParent("vpxapi.version.version13", "nfc.version.version1")
AddVersionParent("vpxapi.version.version13", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.version13", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.version13", "vmodl.query.version.version3")
AddVersionParent("vpxapi.version.version13", "vmodl.query.version.version4")
AddVersionParent("vpxapi.version.version13", "vpxapi.version.version9")
AddVersionParent("vpxapi.version.version13", "vpxapi.version.version8")
AddVersionParent("vpxapi.version.version13", "vpxapi.version.version7")
AddVersionParent("vpxapi.version.version13", "vpxapi.version.version6")
AddVersionParent("vpxapi.version.version13", "vpxapi.version.version1")
AddVersionParent("vim.version.version6", "vim.version.version1")
AddVersionParent("vim.version.version6", "vim.version.version2")
AddVersionParent("vim.version.version6", "vim.version.version3")
AddVersionParent("vim.version.version6", "vim.version.version4")
AddVersionParent("vim.version.version6", "vim.version.version5")
AddVersionParent("vim.version.version6", "vim.version.version6")
AddVersionParent("vim.version.version6", "vmodl.version.version1")
AddVersionParent("vim.version.version6", "vmodl.version.version0")
AddVersionParent("vim.version.version6", "vmodl.query.version.version1")
AddVersionParent("vim.version.version6", "vmodl.query.version.version2")
AddVersionParent("vim.version.version6", "vmodl.query.version.version3")
AddVersionParent("vim.version.version7", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version7", "vim.version.version1")
AddVersionParent("vim.version.version7", "vim.version.version2")
AddVersionParent("vim.version.version7", "vim.version.version3")
AddVersionParent("vim.version.version7", "vim.version.version4")
AddVersionParent("vim.version.version7", "vim.version.version5")
AddVersionParent("vim.version.version7", "vim.version.version6")
AddVersionParent("vim.version.version7", "vim.version.version7")
AddVersionParent("vim.version.version7", "vmodl.version.version2")
AddVersionParent("vim.version.version7", "vmodl.version.version1")
AddVersionParent("vim.version.version7", "vmodl.version.version0")
AddVersionParent("vim.version.version7", "vmodl.query.version.version1")
AddVersionParent("vim.version.version7", "vmodl.query.version.version2")
AddVersionParent("vim.version.version7", "vmodl.query.version.version3")
AddVersionParent("vim.version.version7", "vmodl.query.version.version4")
AddVersionParent("vim.version.version8", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version8", "vim.version.version1")
AddVersionParent("vim.version.version8", "vim.version.version2")
AddVersionParent("vim.version.version8", "vim.version.version3")
AddVersionParent("vim.version.version8", "vim.version.version4")
AddVersionParent("vim.version.version8", "vim.version.version5")
AddVersionParent("vim.version.version8", "vim.version.version6")
AddVersionParent("vim.version.version8", "vim.version.version7")
AddVersionParent("vim.version.version8", "vim.version.version8")
AddVersionParent("vim.version.version8", "vmodl.version.version2")
AddVersionParent("vim.version.version8", "vmodl.version.version1")
AddVersionParent("vim.version.version8", "vmodl.version.version0")
AddVersionParent("vim.version.version8", "vmodl.query.version.version1")
AddVersionParent("vim.version.version8", "vmodl.query.version.version2")
AddVersionParent("vim.version.version8", "vmodl.query.version.version3")
AddVersionParent("vim.version.version8", "vmodl.query.version.version4")
AddVersionParent("vim.version.version9", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.version9", "vim.version.version1")
AddVersionParent("vim.version.version9", "vim.version.version2")
AddVersionParent("vim.version.version9", "vim.version.version3")
AddVersionParent("vim.version.version9", "vim.version.version4")
AddVersionParent("vim.version.version9", "vim.version.version5")
AddVersionParent("vim.version.version9", "vim.version.version6")
AddVersionParent("vim.version.version9", "vim.version.version7")
AddVersionParent("vim.version.version9", "vim.version.version8")
AddVersionParent("vim.version.version9", "vim.version.version9")
AddVersionParent("vim.version.version9", "vmodl.version.version2")
AddVersionParent("vim.version.version9", "vmodl.version.version1")
AddVersionParent("vim.version.version9", "vmodl.version.version0")
AddVersionParent("vim.version.version9", "vmodl.query.version.version1")
AddVersionParent("vim.version.version9", "vmodl.query.version.version2")
AddVersionParent("vim.version.version9", "vmodl.query.version.version3")
AddVersionParent("vim.version.version9", "vmodl.query.version.version4")
AddVersionParent("nfc.version.version3", "vmodl.reflect.version.version1")
AddVersionParent("nfc.version.version3", "vim.version.version1")
AddVersionParent("nfc.version.version3", "nfc.version.version3")
AddVersionParent("nfc.version.version3", "vmodl.version.version2")
AddVersionParent("nfc.version.version3", "nfc.version.version2")
AddVersionParent("nfc.version.version3", "vmodl.version.version1")
AddVersionParent("nfc.version.version3", "vmodl.version.version0")
AddVersionParent("nfc.version.version3", "nfc.version.version1")
AddVersionParent("nfc.version.version3", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.version10", "vim.version.version10")
AddVersionParent("vpxapi.version.version10", "vmodl.reflect.version.version2")
AddVersionParent("vpxapi.version.version10", "vmodl.reflect.version.version1")
AddVersionParent("vpxapi.version.version10", "nfc.version.version10")
AddVersionParent("vpxapi.version.version10", "vim.version.version1")
AddVersionParent("vpxapi.version.version10", "vim.version.version2")
AddVersionParent("vpxapi.version.version10", "vim.version.version3")
AddVersionParent("vpxapi.version.version10", "vim.version.version4")
AddVersionParent("vpxapi.version.version10", "vim.version.version5")
AddVersionParent("vpxapi.version.version10", "vim.version.version6")
AddVersionParent("vpxapi.version.version10", "vim.version.version7")
AddVersionParent("vpxapi.version.version10", "vim.version.version8")
AddVersionParent("vpxapi.version.version10", "vim.version.version9")
AddVersionParent("vpxapi.version.version10", "nfc.version.version3")
AddVersionParent("vpxapi.version.version10", "vpxapi.version.version10")
AddVersionParent("vpxapi.version.version10", "vmodl.version.version2")
AddVersionParent("vpxapi.version.version10", "nfc.version.version2")
AddVersionParent("vpxapi.version.version10", "vmodl.version.version1")
AddVersionParent("vpxapi.version.version10", "vmodl.version.version0")
AddVersionParent("vpxapi.version.version10", "nfc.version.version1")
AddVersionParent("vpxapi.version.version10", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.version10", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.version10", "vmodl.query.version.version3")
AddVersionParent("vpxapi.version.version10", "vmodl.query.version.version4")
AddVersionParent("vpxapi.version.version10", "vpxapi.version.version9")
AddVersionParent("vpxapi.version.version10", "vpxapi.version.version8")
AddVersionParent("vpxapi.version.version10", "vpxapi.version.version7")
AddVersionParent("vpxapi.version.version10", "vpxapi.version.version6")
AddVersionParent("vpxapi.version.version10", "vpxapi.version.version1")
AddVersionParent("vmodl.version.version2", "vmodl.version.version2")
AddVersionParent("vmodl.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.version.version2", "vmodl.version.version0")
AddVersionParent("nfc.version.version2", "vmodl.reflect.version.version1")
AddVersionParent("nfc.version.version2", "vim.version.version1")
AddVersionParent("nfc.version.version2", "vmodl.version.version2")
AddVersionParent("nfc.version.version2", "nfc.version.version2")
AddVersionParent("nfc.version.version2", "vmodl.version.version1")
AddVersionParent("nfc.version.version2", "vmodl.version.version0")
AddVersionParent("nfc.version.version2", "nfc.version.version1")
AddVersionParent("nfc.version.version2", "vmodl.query.version.version1")
AddVersionParent("vmodl.version.version1", "vmodl.version.version1")
AddVersionParent("vmodl.version.version1", "vmodl.version.version0")
AddVersionParent("vpxapi.version.stable", "vim.version.version10")
AddVersionParent("vpxapi.version.stable", "vim.version.version11")
AddVersionParent("vpxapi.version.stable", "vim.version.version12")
AddVersionParent("vpxapi.version.stable", "vmodl.reflect.version.version2")
AddVersionParent("vpxapi.version.stable", "vmodl.reflect.version.version1")
AddVersionParent("vpxapi.version.stable", "nfc.version.version11")
AddVersionParent("vpxapi.version.stable", "vim.version.version13")
AddVersionParent("vpxapi.version.stable", "nfc.version.version10")
AddVersionParent("vpxapi.version.stable", "nfc.version.version12")
AddVersionParent("vpxapi.version.stable", "nfc.version.version13")
AddVersionParent("vpxapi.version.stable", "vim.version.version1")
AddVersionParent("vpxapi.version.stable", "vpxapi.version.version12")
AddVersionParent("vpxapi.version.stable", "vim.version.version2")
AddVersionParent("vpxapi.version.stable", "vim.version.version3")
AddVersionParent("vpxapi.version.stable", "vpxapi.version.version11")
AddVersionParent("vpxapi.version.stable", "vim.version.version4")
AddVersionParent("vpxapi.version.stable", "vim.version.version5")
AddVersionParent("vpxapi.version.stable", "vpxapi.version.version13")
AddVersionParent("vpxapi.version.stable", "vim.version.version6")
AddVersionParent("vpxapi.version.stable", "vim.version.version7")
AddVersionParent("vpxapi.version.stable", "vim.version.version8")
AddVersionParent("vpxapi.version.stable", "vim.version.version9")
AddVersionParent("vpxapi.version.stable", "nfc.version.version3")
AddVersionParent("vpxapi.version.stable", "vpxapi.version.version10")
AddVersionParent("vpxapi.version.stable", "vmodl.version.version2")
AddVersionParent("vpxapi.version.stable", "nfc.version.version2")
AddVersionParent("vpxapi.version.stable", "vmodl.version.version1")
AddVersionParent("vpxapi.version.stable", "vpxapi.version.stable")
AddVersionParent("vpxapi.version.stable", "vmodl.version.version0")
AddVersionParent("vpxapi.version.stable", "nfc.version.version1")
AddVersionParent("vpxapi.version.stable", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.stable", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.stable", "vmodl.query.version.version3")
AddVersionParent("vpxapi.version.stable", "vmodl.query.version.version4")
AddVersionParent("vpxapi.version.stable", "vim.version.m5")
AddVersionParent("vpxapi.version.stable", "nfc.version.m5")
AddVersionParent("vpxapi.version.stable", "vpxapi.version.m5")
AddVersionParent("vpxapi.version.stable", "nfc.version.stable")
AddVersionParent("vpxapi.version.stable", "vpxapi.version.version9")
AddVersionParent("vpxapi.version.stable", "vpxapi.version.version8")
AddVersionParent("vpxapi.version.stable", "vpxapi.version.version7")
AddVersionParent("vpxapi.version.stable", "vpxapi.version.version6")
AddVersionParent("vpxapi.version.stable", "vpxapi.version.version1")
AddVersionParent("vpxapi.version.stable", "vim.version.stable")
AddVersionParent("vmodl.version.version0", "vmodl.version.version0")
AddVersionParent("nfc.version.version1", "vim.version.version1")
AddVersionParent("nfc.version.version1", "vmodl.version.version0")
AddVersionParent("nfc.version.version1", "nfc.version.version1")
AddVersionParent("nfc.version.version1", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version1", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version1", "vmodl.query.version.version1")
AddVersionParent("nfc.version.legacy", "vim.version.version10")
AddVersionParent("nfc.version.legacy", "vim.version.version11")
AddVersionParent("nfc.version.legacy", "vim.version.version12")
AddVersionParent("nfc.version.legacy", "nfc.version.unstable")
AddVersionParent("nfc.version.legacy", "vmodl.reflect.version.version2")
AddVersionParent("nfc.version.legacy", "vmodl.reflect.version.version1")
AddVersionParent("nfc.version.legacy", "nfc.version.version11")
AddVersionParent("nfc.version.legacy", "vim.version.version13")
AddVersionParent("nfc.version.legacy", "nfc.version.version10")
AddVersionParent("nfc.version.legacy", "vim.version.unstable")
AddVersionParent("nfc.version.legacy", "nfc.version.version12")
AddVersionParent("nfc.version.legacy", "nfc.version.version13")
AddVersionParent("nfc.version.legacy", "vim.version.version1")
AddVersionParent("nfc.version.legacy", "vim.version.version2")
AddVersionParent("nfc.version.legacy", "vim.version.version3")
AddVersionParent("nfc.version.legacy", "vim.version.version4")
AddVersionParent("nfc.version.legacy", "vim.version.version5")
AddVersionParent("nfc.version.legacy", "vim.version.version6")
AddVersionParent("nfc.version.legacy", "vim.version.version7")
AddVersionParent("nfc.version.legacy", "vim.version.version8")
AddVersionParent("nfc.version.legacy", "vim.version.version9")
AddVersionParent("nfc.version.legacy", "nfc.version.version3")
AddVersionParent("nfc.version.legacy", "vmodl.version.version2")
AddVersionParent("nfc.version.legacy", "nfc.version.version2")
AddVersionParent("nfc.version.legacy", "vmodl.version.version1")
AddVersionParent("nfc.version.legacy", "vmodl.version.version0")
AddVersionParent("nfc.version.legacy", "nfc.version.version1")
AddVersionParent("nfc.version.legacy", "vmodl.query.version.version1")
AddVersionParent("nfc.version.legacy", "nfc.version.legacy")
AddVersionParent("nfc.version.legacy", "vmodl.query.version.version2")
AddVersionParent("nfc.version.legacy", "vmodl.query.version.version3")
AddVersionParent("nfc.version.legacy", "vmodl.query.version.version4")
AddVersionParent("nfc.version.legacy", "vim.version.legacy")
AddVersionParent("nfc.version.legacy", "vim.version.m5")
AddVersionParent("nfc.version.legacy", "nfc.version.m5")
AddVersionParent("nfc.version.legacy", "nfc.version.stable")
AddVersionParent("nfc.version.legacy", "vim.version.stable")
AddVersionParent("vmodl.query.version.version2", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version2", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version2", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version2", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version3", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version3", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version3", "vmodl.query.version.version3")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version2")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version1")
AddVersionParent("vmodl.query.version.version4", "vmodl.version.version0")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version1")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version2")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version3")
AddVersionParent("vmodl.query.version.version4", "vmodl.query.version.version4")
AddVersionParent("vim.version.legacy", "vim.version.version10")
AddVersionParent("vim.version.legacy", "vim.version.version11")
AddVersionParent("vim.version.legacy", "vim.version.version12")
AddVersionParent("vim.version.legacy", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.legacy", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.legacy", "vim.version.version13")
AddVersionParent("vim.version.legacy", "vim.version.unstable")
AddVersionParent("vim.version.legacy", "vim.version.version1")
AddVersionParent("vim.version.legacy", "vim.version.version2")
AddVersionParent("vim.version.legacy", "vim.version.version3")
AddVersionParent("vim.version.legacy", "vim.version.version4")
AddVersionParent("vim.version.legacy", "vim.version.version5")
AddVersionParent("vim.version.legacy", "vim.version.version6")
AddVersionParent("vim.version.legacy", "vim.version.version7")
AddVersionParent("vim.version.legacy", "vim.version.version8")
AddVersionParent("vim.version.legacy", "vim.version.version9")
AddVersionParent("vim.version.legacy", "vmodl.version.version2")
AddVersionParent("vim.version.legacy", "vmodl.version.version1")
AddVersionParent("vim.version.legacy", "vmodl.version.version0")
AddVersionParent("vim.version.legacy", "vmodl.query.version.version1")
AddVersionParent("vim.version.legacy", "vmodl.query.version.version2")
AddVersionParent("vim.version.legacy", "vmodl.query.version.version3")
AddVersionParent("vim.version.legacy", "vmodl.query.version.version4")
AddVersionParent("vim.version.legacy", "vim.version.legacy")
AddVersionParent("vim.version.legacy", "vim.version.m5")
AddVersionParent("vim.version.legacy", "vim.version.stable")
AddVersionParent("vim.version.m5", "vim.version.version10")
AddVersionParent("vim.version.m5", "vim.version.version11")
AddVersionParent("vim.version.m5", "vim.version.version12")
AddVersionParent("vim.version.m5", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.m5", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.m5", "vim.version.version13")
AddVersionParent("vim.version.m5", "vim.version.version1")
AddVersionParent("vim.version.m5", "vim.version.version2")
AddVersionParent("vim.version.m5", "vim.version.version3")
AddVersionParent("vim.version.m5", "vim.version.version4")
AddVersionParent("vim.version.m5", "vim.version.version5")
AddVersionParent("vim.version.m5", "vim.version.version6")
AddVersionParent("vim.version.m5", "vim.version.version7")
AddVersionParent("vim.version.m5", "vim.version.version8")
AddVersionParent("vim.version.m5", "vim.version.version9")
AddVersionParent("vim.version.m5", "vmodl.version.version2")
AddVersionParent("vim.version.m5", "vmodl.version.version1")
AddVersionParent("vim.version.m5", "vmodl.version.version0")
AddVersionParent("vim.version.m5", "vmodl.query.version.version1")
AddVersionParent("vim.version.m5", "vmodl.query.version.version2")
AddVersionParent("vim.version.m5", "vmodl.query.version.version3")
AddVersionParent("vim.version.m5", "vmodl.query.version.version4")
AddVersionParent("vim.version.m5", "vim.version.m5")
AddVersionParent("nfc.version.m5", "vim.version.version10")
AddVersionParent("nfc.version.m5", "vim.version.version11")
AddVersionParent("nfc.version.m5", "vim.version.version12")
AddVersionParent("nfc.version.m5", "vmodl.reflect.version.version2")
AddVersionParent("nfc.version.m5", "vmodl.reflect.version.version1")
AddVersionParent("nfc.version.m5", "nfc.version.version11")
AddVersionParent("nfc.version.m5", "vim.version.version13")
AddVersionParent("nfc.version.m5", "nfc.version.version10")
AddVersionParent("nfc.version.m5", "nfc.version.version12")
AddVersionParent("nfc.version.m5", "nfc.version.version13")
AddVersionParent("nfc.version.m5", "vim.version.version1")
AddVersionParent("nfc.version.m5", "vim.version.version2")
AddVersionParent("nfc.version.m5", "vim.version.version3")
AddVersionParent("nfc.version.m5", "vim.version.version4")
AddVersionParent("nfc.version.m5", "vim.version.version5")
AddVersionParent("nfc.version.m5", "vim.version.version6")
AddVersionParent("nfc.version.m5", "vim.version.version7")
AddVersionParent("nfc.version.m5", "vim.version.version8")
AddVersionParent("nfc.version.m5", "vim.version.version9")
AddVersionParent("nfc.version.m5", "nfc.version.version3")
AddVersionParent("nfc.version.m5", "vmodl.version.version2")
AddVersionParent("nfc.version.m5", "nfc.version.version2")
AddVersionParent("nfc.version.m5", "vmodl.version.version1")
AddVersionParent("nfc.version.m5", "vmodl.version.version0")
AddVersionParent("nfc.version.m5", "nfc.version.version1")
AddVersionParent("nfc.version.m5", "vmodl.query.version.version1")
AddVersionParent("nfc.version.m5", "vmodl.query.version.version2")
AddVersionParent("nfc.version.m5", "vmodl.query.version.version3")
AddVersionParent("nfc.version.m5", "vmodl.query.version.version4")
AddVersionParent("nfc.version.m5", "vim.version.m5")
AddVersionParent("nfc.version.m5", "nfc.version.m5")
AddVersionParent("vpxapi.version.m5", "vim.version.version10")
AddVersionParent("vpxapi.version.m5", "vim.version.version11")
AddVersionParent("vpxapi.version.m5", "vim.version.version12")
AddVersionParent("vpxapi.version.m5", "vmodl.reflect.version.version2")
AddVersionParent("vpxapi.version.m5", "vmodl.reflect.version.version1")
AddVersionParent("vpxapi.version.m5", "nfc.version.version11")
AddVersionParent("vpxapi.version.m5", "vim.version.version13")
AddVersionParent("vpxapi.version.m5", "nfc.version.version10")
AddVersionParent("vpxapi.version.m5", "nfc.version.version12")
AddVersionParent("vpxapi.version.m5", "nfc.version.version13")
AddVersionParent("vpxapi.version.m5", "vim.version.version1")
AddVersionParent("vpxapi.version.m5", "vpxapi.version.version12")
AddVersionParent("vpxapi.version.m5", "vim.version.version2")
AddVersionParent("vpxapi.version.m5", "vim.version.version3")
AddVersionParent("vpxapi.version.m5", "vpxapi.version.version11")
AddVersionParent("vpxapi.version.m5", "vim.version.version4")
AddVersionParent("vpxapi.version.m5", "vim.version.version5")
AddVersionParent("vpxapi.version.m5", "vpxapi.version.version13")
AddVersionParent("vpxapi.version.m5", "vim.version.version6")
AddVersionParent("vpxapi.version.m5", "vim.version.version7")
AddVersionParent("vpxapi.version.m5", "vim.version.version8")
AddVersionParent("vpxapi.version.m5", "vim.version.version9")
AddVersionParent("vpxapi.version.m5", "nfc.version.version3")
AddVersionParent("vpxapi.version.m5", "vpxapi.version.version10")
AddVersionParent("vpxapi.version.m5", "vmodl.version.version2")
AddVersionParent("vpxapi.version.m5", "nfc.version.version2")
AddVersionParent("vpxapi.version.m5", "vmodl.version.version1")
AddVersionParent("vpxapi.version.m5", "vmodl.version.version0")
AddVersionParent("vpxapi.version.m5", "nfc.version.version1")
AddVersionParent("vpxapi.version.m5", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.m5", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.m5", "vmodl.query.version.version3")
AddVersionParent("vpxapi.version.m5", "vmodl.query.version.version4")
AddVersionParent("vpxapi.version.m5", "vim.version.m5")
AddVersionParent("vpxapi.version.m5", "nfc.version.m5")
AddVersionParent("vpxapi.version.m5", "vpxapi.version.m5")
AddVersionParent("vpxapi.version.m5", "vpxapi.version.version9")
AddVersionParent("vpxapi.version.m5", "vpxapi.version.version8")
AddVersionParent("vpxapi.version.m5", "vpxapi.version.version7")
AddVersionParent("vpxapi.version.m5", "vpxapi.version.version6")
AddVersionParent("vpxapi.version.m5", "vpxapi.version.version1")
AddVersionParent("vpxapi.version.unstable", "vim.version.version10")
AddVersionParent("vpxapi.version.unstable", "vim.version.version11")
AddVersionParent("vpxapi.version.unstable", "vim.version.version12")
AddVersionParent("vpxapi.version.unstable", "nfc.version.unstable")
AddVersionParent("vpxapi.version.unstable", "vmodl.reflect.version.version2")
AddVersionParent("vpxapi.version.unstable", "vmodl.reflect.version.version1")
AddVersionParent("vpxapi.version.unstable", "nfc.version.version11")
AddVersionParent("vpxapi.version.unstable", "vim.version.version13")
AddVersionParent("vpxapi.version.unstable", "nfc.version.version10")
AddVersionParent("vpxapi.version.unstable", "vim.version.unstable")
AddVersionParent("vpxapi.version.unstable", "nfc.version.version12")
AddVersionParent("vpxapi.version.unstable", "nfc.version.version13")
AddVersionParent("vpxapi.version.unstable", "vim.version.version1")
AddVersionParent("vpxapi.version.unstable", "vpxapi.version.version12")
AddVersionParent("vpxapi.version.unstable", "vim.version.version2")
AddVersionParent("vpxapi.version.unstable", "vim.version.version3")
AddVersionParent("vpxapi.version.unstable", "vpxapi.version.version11")
AddVersionParent("vpxapi.version.unstable", "vim.version.version4")
AddVersionParent("vpxapi.version.unstable", "vim.version.version5")
AddVersionParent("vpxapi.version.unstable", "vpxapi.version.version13")
AddVersionParent("vpxapi.version.unstable", "vim.version.version6")
AddVersionParent("vpxapi.version.unstable", "vim.version.version7")
AddVersionParent("vpxapi.version.unstable", "vim.version.version8")
AddVersionParent("vpxapi.version.unstable", "vim.version.version9")
AddVersionParent("vpxapi.version.unstable", "nfc.version.version3")
AddVersionParent("vpxapi.version.unstable", "vpxapi.version.version10")
AddVersionParent("vpxapi.version.unstable", "vmodl.version.version2")
AddVersionParent("vpxapi.version.unstable", "nfc.version.version2")
AddVersionParent("vpxapi.version.unstable", "vmodl.version.version1")
AddVersionParent("vpxapi.version.unstable", "vpxapi.version.stable")
AddVersionParent("vpxapi.version.unstable", "vmodl.version.version0")
AddVersionParent("vpxapi.version.unstable", "nfc.version.version1")
AddVersionParent("vpxapi.version.unstable", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.unstable", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.unstable", "vmodl.query.version.version3")
AddVersionParent("vpxapi.version.unstable", "vmodl.query.version.version4")
AddVersionParent("vpxapi.version.unstable", "vim.version.m5")
AddVersionParent("vpxapi.version.unstable", "nfc.version.m5")
AddVersionParent("vpxapi.version.unstable", "vpxapi.version.m5")
AddVersionParent("vpxapi.version.unstable", "vpxapi.version.unstable")
AddVersionParent("vpxapi.version.unstable", "nfc.version.stable")
AddVersionParent("vpxapi.version.unstable", "vpxapi.version.version9")
AddVersionParent("vpxapi.version.unstable", "vpxapi.version.version8")
AddVersionParent("vpxapi.version.unstable", "vpxapi.version.version7")
AddVersionParent("vpxapi.version.unstable", "vpxapi.version.version6")
AddVersionParent("vpxapi.version.unstable", "vpxapi.version.version1")
AddVersionParent("vpxapi.version.unstable", "vim.version.stable")
AddVersionParent("nfc.version.stable", "vim.version.version10")
AddVersionParent("nfc.version.stable", "vim.version.version11")
AddVersionParent("nfc.version.stable", "vim.version.version12")
AddVersionParent("nfc.version.stable", "vmodl.reflect.version.version2")
AddVersionParent("nfc.version.stable", "vmodl.reflect.version.version1")
AddVersionParent("nfc.version.stable", "nfc.version.version11")
AddVersionParent("nfc.version.stable", "vim.version.version13")
AddVersionParent("nfc.version.stable", "nfc.version.version10")
AddVersionParent("nfc.version.stable", "nfc.version.version12")
AddVersionParent("nfc.version.stable", "nfc.version.version13")
AddVersionParent("nfc.version.stable", "vim.version.version1")
AddVersionParent("nfc.version.stable", "vim.version.version2")
AddVersionParent("nfc.version.stable", "vim.version.version3")
AddVersionParent("nfc.version.stable", "vim.version.version4")
AddVersionParent("nfc.version.stable", "vim.version.version5")
AddVersionParent("nfc.version.stable", "vim.version.version6")
AddVersionParent("nfc.version.stable", "vim.version.version7")
AddVersionParent("nfc.version.stable", "vim.version.version8")
AddVersionParent("nfc.version.stable", "vim.version.version9")
AddVersionParent("nfc.version.stable", "nfc.version.version3")
AddVersionParent("nfc.version.stable", "vmodl.version.version2")
AddVersionParent("nfc.version.stable", "nfc.version.version2")
AddVersionParent("nfc.version.stable", "vmodl.version.version1")
AddVersionParent("nfc.version.stable", "vmodl.version.version0")
AddVersionParent("nfc.version.stable", "nfc.version.version1")
AddVersionParent("nfc.version.stable", "vmodl.query.version.version1")
AddVersionParent("nfc.version.stable", "vmodl.query.version.version2")
AddVersionParent("nfc.version.stable", "vmodl.query.version.version3")
AddVersionParent("nfc.version.stable", "vmodl.query.version.version4")
AddVersionParent("nfc.version.stable", "vim.version.m5")
AddVersionParent("nfc.version.stable", "nfc.version.m5")
AddVersionParent("nfc.version.stable", "nfc.version.stable")
AddVersionParent("nfc.version.stable", "vim.version.stable")
AddVersionParent("vpxapi.version.version9", "vmodl.reflect.version.version1")
AddVersionParent("vpxapi.version.version9", "vim.version.version1")
AddVersionParent("vpxapi.version.version9", "vim.version.version2")
AddVersionParent("vpxapi.version.version9", "vim.version.version3")
AddVersionParent("vpxapi.version.version9", "vim.version.version4")
AddVersionParent("vpxapi.version.version9", "vim.version.version5")
AddVersionParent("vpxapi.version.version9", "vim.version.version6")
AddVersionParent("vpxapi.version.version9", "vim.version.version7")
AddVersionParent("vpxapi.version.version9", "vim.version.version8")
AddVersionParent("vpxapi.version.version9", "vim.version.version9")
AddVersionParent("vpxapi.version.version9", "nfc.version.version3")
AddVersionParent("vpxapi.version.version9", "vmodl.version.version2")
AddVersionParent("vpxapi.version.version9", "nfc.version.version2")
AddVersionParent("vpxapi.version.version9", "vmodl.version.version1")
AddVersionParent("vpxapi.version.version9", "vmodl.version.version0")
AddVersionParent("vpxapi.version.version9", "nfc.version.version1")
AddVersionParent("vpxapi.version.version9", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.version9", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.version9", "vmodl.query.version.version3")
AddVersionParent("vpxapi.version.version9", "vmodl.query.version.version4")
AddVersionParent("vpxapi.version.version9", "vpxapi.version.version9")
AddVersionParent("vpxapi.version.version9", "vpxapi.version.version8")
AddVersionParent("vpxapi.version.version9", "vpxapi.version.version7")
AddVersionParent("vpxapi.version.version9", "vpxapi.version.version6")
AddVersionParent("vpxapi.version.version9", "vpxapi.version.version1")
AddVersionParent("vpxapi.version.version8", "vmodl.reflect.version.version1")
AddVersionParent("vpxapi.version.version8", "vim.version.version1")
AddVersionParent("vpxapi.version.version8", "vim.version.version2")
AddVersionParent("vpxapi.version.version8", "vim.version.version3")
AddVersionParent("vpxapi.version.version8", "vim.version.version4")
AddVersionParent("vpxapi.version.version8", "vim.version.version5")
AddVersionParent("vpxapi.version.version8", "vim.version.version6")
AddVersionParent("vpxapi.version.version8", "vim.version.version7")
AddVersionParent("vpxapi.version.version8", "vim.version.version8")
AddVersionParent("vpxapi.version.version8", "vmodl.version.version2")
AddVersionParent("vpxapi.version.version8", "nfc.version.version2")
AddVersionParent("vpxapi.version.version8", "vmodl.version.version1")
AddVersionParent("vpxapi.version.version8", "vmodl.version.version0")
AddVersionParent("vpxapi.version.version8", "nfc.version.version1")
AddVersionParent("vpxapi.version.version8", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.version8", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.version8", "vmodl.query.version.version3")
AddVersionParent("vpxapi.version.version8", "vmodl.query.version.version4")
AddVersionParent("vpxapi.version.version8", "vpxapi.version.version8")
AddVersionParent("vpxapi.version.version8", "vpxapi.version.version7")
AddVersionParent("vpxapi.version.version8", "vpxapi.version.version6")
AddVersionParent("vpxapi.version.version8", "vpxapi.version.version1")
AddVersionParent("vpxapi.version.version7", "vmodl.reflect.version.version1")
AddVersionParent("vpxapi.version.version7", "vim.version.version1")
AddVersionParent("vpxapi.version.version7", "vim.version.version2")
AddVersionParent("vpxapi.version.version7", "vim.version.version3")
AddVersionParent("vpxapi.version.version7", "vim.version.version4")
AddVersionParent("vpxapi.version.version7", "vim.version.version5")
AddVersionParent("vpxapi.version.version7", "vim.version.version6")
AddVersionParent("vpxapi.version.version7", "vim.version.version7")
AddVersionParent("vpxapi.version.version7", "vmodl.version.version2")
AddVersionParent("vpxapi.version.version7", "vmodl.version.version1")
AddVersionParent("vpxapi.version.version7", "vmodl.version.version0")
AddVersionParent("vpxapi.version.version7", "nfc.version.version1")
AddVersionParent("vpxapi.version.version7", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.version7", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.version7", "vmodl.query.version.version3")
AddVersionParent("vpxapi.version.version7", "vmodl.query.version.version4")
AddVersionParent("vpxapi.version.version7", "vpxapi.version.version7")
AddVersionParent("vpxapi.version.version7", "vpxapi.version.version6")
AddVersionParent("vpxapi.version.version7", "vpxapi.version.version1")
AddVersionParent("vpxapi.version.version6", "vim.version.version1")
AddVersionParent("vpxapi.version.version6", "vim.version.version2")
AddVersionParent("vpxapi.version.version6", "vim.version.version3")
AddVersionParent("vpxapi.version.version6", "vim.version.version4")
AddVersionParent("vpxapi.version.version6", "vim.version.version5")
AddVersionParent("vpxapi.version.version6", "vim.version.version6")
AddVersionParent("vpxapi.version.version6", "vmodl.version.version1")
AddVersionParent("vpxapi.version.version6", "vmodl.version.version0")
AddVersionParent("vpxapi.version.version6", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.version6", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.version6", "vmodl.query.version.version3")
AddVersionParent("vpxapi.version.version6", "vpxapi.version.version6")
AddVersionParent("vpxapi.version.version6", "vpxapi.version.version1")
AddVersionParent("vpxapi.version.version1", "vim.version.version1")
AddVersionParent("vpxapi.version.version1", "vim.version.version2")
AddVersionParent("vpxapi.version.version1", "vim.version.version3")
AddVersionParent("vpxapi.version.version1", "vim.version.version4")
AddVersionParent("vpxapi.version.version1", "vim.version.version5")
AddVersionParent("vpxapi.version.version1", "vmodl.version.version1")
AddVersionParent("vpxapi.version.version1", "vmodl.version.version0")
AddVersionParent("vpxapi.version.version1", "vmodl.query.version.version1")
AddVersionParent("vpxapi.version.version1", "vmodl.query.version.version2")
AddVersionParent("vpxapi.version.version1", "vpxapi.version.version1")
AddVersionParent("vim.version.stable", "vim.version.version10")
AddVersionParent("vim.version.stable", "vim.version.version11")
AddVersionParent("vim.version.stable", "vim.version.version12")
AddVersionParent("vim.version.stable", "vmodl.reflect.version.version2")
AddVersionParent("vim.version.stable", "vmodl.reflect.version.version1")
AddVersionParent("vim.version.stable", "vim.version.version13")
AddVersionParent("vim.version.stable", "vim.version.version1")
AddVersionParent("vim.version.stable", "vim.version.version2")
AddVersionParent("vim.version.stable", "vim.version.version3")
AddVersionParent("vim.version.stable", "vim.version.version4")
AddVersionParent("vim.version.stable", "vim.version.version5")
AddVersionParent("vim.version.stable", "vim.version.version6")
AddVersionParent("vim.version.stable", "vim.version.version7")
AddVersionParent("vim.version.stable", "vim.version.version8")
AddVersionParent("vim.version.stable", "vim.version.version9")
AddVersionParent("vim.version.stable", "vmodl.version.version2")
AddVersionParent("vim.version.stable", "vmodl.version.version1")
AddVersionParent("vim.version.stable", "vmodl.version.version0")
AddVersionParent("vim.version.stable", "vmodl.query.version.version1")
AddVersionParent("vim.version.stable", "vmodl.query.version.version2")
AddVersionParent("vim.version.stable", "vmodl.query.version.version3")
AddVersionParent("vim.version.stable", "vmodl.query.version.version4")
AddVersionParent("vim.version.stable", "vim.version.m5")
AddVersionParent("vim.version.stable", "vim.version.stable")

newestVersions.Add("vpxapi.version.unstable")
stableVersions.Add("vpxapi.version.stable")
publicVersions.Add("vpxapi.version.m5")
dottedVersions.Add("vpxapi.version.version13")
oldestVersions.Add("vpxapi.version.version1")

CreateDataType("vpxapi.AlarmChangeInfo", "VpxapiAlarmChangeInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("generationInfo", "vpxapi.AlarmGenerationInfo", "vpxapi.version.version1", 0), ("time", "vmodl.DateTime", "vpxapi.version.version1", 0), ("values", "vpxapi.AlarmMetricRuntime[]", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.AlarmConfigSpec", "VpxapiAlarmConfigSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("alarmSpec", "vpxapi.VpxaAlarmSpec[]", "vpxapi.version.version1", F_OPTIONAL), ("alarmInfo", "vpxapi.AlarmGenerationInfo[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.AlarmGenerationInfo", "VpxapiAlarmGenerationInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("alarmId", "int", "vpxapi.version.version1", 0), ("vmid", "short", "vpxapi.version.version1", 0), ("hostVmId", "int", "vpxapi.version.unstable", F_OPTIONAL), ("reportingFrequency", "int", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.AlarmMetricRuntime", "VpxapiAlarmMetricRuntime", "vmodl.DynamicData", "vpxapi.version.version1", [("metricId", "vim.PerformanceManager.MetricId", "vpxapi.version.version1", 0), ("value", "int", "vpxapi.version.version1", 0), ("status", "vim.ManagedEntity.Status", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.ChangesInfo", "VpxapiChangesInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("masterGenNo", "int", "vpxapi.version.version1", 0), ("masterSpecGenNo", "int", "vpxapi.version.version1", 0), ("fullSync", "boolean", "vpxapi.version.version1", 0), ("managementIp", "string", "vpxapi.version.version1", 0), ("hostInfo", "vpxapi.HostInfo", "vpxapi.version.version1", F_OPTIONAL), ("datastoresChanged", "boolean", "vpxapi.version.version1", 0), ("datastoreList", "vpxapi.DatastoreList", "vpxapi.version.version1", F_OPTIONAL), ("vm", "vpxapi.VmInfo[]", "vpxapi.version.version1", F_OPTIONAL), ("removedVmid", "int[]", "vpxapi.version.version1", F_OPTIONAL), ("alarm", "vpxapi.AlarmChangeInfo[]", "vpxapi.version.version1", F_OPTIONAL), ("event", "vim.event.Event[]", "vpxapi.version.version1", F_OPTIONAL), ("perfCounter", "vim.PerformanceManager.CounterInfo[]", "vpxapi.version.version1", F_OPTIONAL), ("needVpxdCounterInfo", "boolean", "vpxapi.version.unstable", F_OPTIONAL), ("refreshRate", "int", "vpxapi.version.version1", F_OPTIONAL), ("resourcePool", "vpxapi.ResourcePoolChangeInfo", "vpxapi.version.version1", F_OPTIONAL), ("drsInfo", "vpxapi.DrsInfo", "vpxapi.version.version7", F_OPTIONAL), ("computeResource", "vpxapi.CompResChangeInfo", "vpxapi.version.version1", F_OPTIONAL), ("dvsInfoSent", "boolean", "vpxapi.version.version1", F_OPTIONAL), ("dvsSyncParam", "vpxapi.DvsSyncParameter", "vpxapi.version.version6", F_OPTIONAL), ("dvsInfo", "vpxapi.DvsInfo[]", "vpxapi.version.version1", F_OPTIONAL), ("dvsAsyncUpdate", "vpxapi.DvsAsyncUpdate[]", "vpxapi.version.version7", F_OPTIONAL)])
CreateDataType("vpxapi.CompResChangeInfo", "VpxapiCompResChangeInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("configIssue", "vpxapi.CompResConfigIssue[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.CompResConfigIssue", "VpxapiCompResConfigIssue", "vmodl.DynamicData", "vpxapi.version.version1", [("mismatch", "vmodl.PropertyPath", "vpxapi.version.version1", 0), ("fault", "vmodl.MethodFault", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.CopySpec", "VpxapiCopySpec", "vmodl.DynamicData", "vpxapi.version.version1", [("datastore", "vim.Datastore", "vpxapi.version.version1", 0), ("destHost", "vim.HostSystem", "vpxapi.version.version1", 0), ("name", "string", "vpxapi.version.version1", 0), ("parent", "vim.Folder", "vpxapi.version.version1", 0), ("customization", "boolean", "vpxapi.version.version1", F_OPTIONAL), ("autoPoweron", "boolean", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.CreateVmInfo", "VpxapiCreateVmInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("vm", "vim.vm.ConfigInfo", "vpxapi.version.version1", 0), ("vmId", "int", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.DatastoreConfigSpec", "VpxapiDatastoreConfigSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("scanRate", "int", "vpxapi.version.version1", 0), ("threshold", "int", "vpxapi.version.version1", 0), ("spec", "vpxapi.DatastoreSpec[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.DatastoreInfo", "VpxapiDatastoreInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("summary", "vim.Datastore.Summary", "vpxapi.version.version1", F_OPTIONAL), ("info", "vim.Datastore.Info", "vpxapi.version.version1", F_OPTIONAL), ("mountInfo", "vim.host.MountInfo", "vpxapi.version.version1", F_OPTIONAL), ("capability", "vim.Datastore.Capability", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.DatastoreList", "VpxapiDatastoreList", "vmodl.DynamicData", "vpxapi.version.version1", [("datastore", "vpxapi.DatastoreInfo[]", "vpxapi.version.version1", F_OPTIONAL), ("removedDatastores", "string[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.DatastoreSpec", "VpxapiDatastoreSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("name", "string", "vpxapi.version.version1", 0), ("url", "string", "vpxapi.version.version1", 0), ("subscribed", "boolean", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.DeviceRuntime", "VpxapiDeviceRuntime", "vmodl.DynamicData", "vpxapi.version.version6", [("device", "vim.vm.DeviceRuntimeInfo[]", "vpxapi.version.version6", F_OPTIONAL)])
CreateDataType("vpxapi.DrsInfo", "VpxapiDrsInfo", "vmodl.DynamicData", "vpxapi.version.version7", [("sdrsInjectorWorkload", "vim.DrsStatsManager.InjectorWorkload[]", "vpxapi.version.version7", F_OPTIONAL), ("sdrsHostIormStatus", "vim.DrsStatsManager.HostIormStatus[]", "vpxapi.version.version10", F_OPTIONAL)])
CreateDataType("vpxapi.DvPortgroupSyncSpec", "VpxapiDvPortgroupSyncSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("dvsUuid", "string", "vpxapi.version.version1", 0), ("pgSpec", "vim.dvs.HostDistributedVirtualSwitchManager.DVPortgroupConfigSpec[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.DvportAddSpec", "VpxapiDvportAddSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("uuid", "string", "vpxapi.version.version1", 0), ("portData", "vim.dvs.HostDistributedVirtualSwitchManager.PortData[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.DvportRemoveSpec", "VpxapiDvportRemoveSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("uuid", "string", "vpxapi.version.version1", 0), ("portDeleteSpec", "vim.dvs.HostDistributedVirtualSwitchManager.PortDeleteSpec[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.DvportStateUpdate", "VpxapiDvportStateUpdate", "vmodl.DynamicData", "vpxapi.version.version7", [("portData", "vim.dvs.HostDistributedVirtualSwitchManager.PortData", "vpxapi.version.version7", 0), ("portRuntimeIncluded", "boolean", "vpxapi.version.version7", 0), ("portStateBlobIncluded", "boolean", "vpxapi.version.version7", 0), ("portStatsIncluded", "boolean", "vpxapi.version.version7", 0)])
CreateDataType("vpxapi.DvsAsyncUpdate", "VpxapiDvsAsyncUpdate", "vmodl.DynamicData", "vpxapi.version.version7", [("dvsUuid", "string", "vpxapi.version.version7", 0), ("dvsStatusUpdate", "vpxapi.DvsStatusUpdate", "vpxapi.version.version7", F_OPTIONAL), ("dvportStateUpdate", "vpxapi.DvportStateUpdate[]", "vpxapi.version.version7", F_OPTIONAL), ("hostLocalPort", "vim.dvs.DistributedVirtualPort.HostLocalPortInfo[]", "vpxapi.version.version8", F_OPTIONAL)])
CreateDataType("vpxapi.DvsInfo", "VpxapiDvsInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("uuid", "string", "vpxapi.version.version1", 0), ("spec", "vim.dvs.HostDistributedVirtualSwitchManager.DVSConfigSpec", "vpxapi.version.version1", F_OPTIONAL), ("portData", "vim.dvs.HostDistributedVirtualSwitchManager.PortData[]", "vpxapi.version.version1", F_OPTIONAL), ("portSkipped", "string[]", "vpxapi.version.version6", F_OPTIONAL), ("portKeyList", "string[]", "vpxapi.version.version7", F_OPTIONAL), ("dvpgInfoSent", "boolean", "vpxapi.version.version6", F_OPTIONAL), ("pgSpec", "vim.dvs.HostDistributedVirtualSwitchManager.DVPortgroupConfigSpec[]", "vpxapi.version.version1", F_OPTIONAL), ("dvpgSkipped", "string[]", "vpxapi.version.version6", F_OPTIONAL), ("dvpgKeyList", "string[]", "vpxapi.version.version7", F_OPTIONAL)])
CreateDataType("vpxapi.DvsSpec", "VpxapiDvsSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("dvsSyncParam", "vpxapi.DvsSyncParameter", "vpxapi.version.version6", F_OPTIONAL), ("dvpgInfoRequested", "boolean", "vpxapi.version.version6", F_OPTIONAL), ("dvsAddSpec", "vim.dvs.HostDistributedVirtualSwitchManager.DVSCreateSpec[]", "vpxapi.version.version1", F_OPTIONAL), ("dvsRemoveSpec", "string[]", "vpxapi.version.version1", F_OPTIONAL), ("dvportAddSpec", "vpxapi.DvportAddSpec[]", "vpxapi.version.version1", F_OPTIONAL), ("dvportRemoveSpec", "vpxapi.DvportRemoveSpec[]", "vpxapi.version.version1", F_OPTIONAL), ("portRekeySpec", "vpxapi.PortRekeySpec[]", "vpxapi.version.version1", F_OPTIONAL), ("dvsSyncSpec", "vim.dvs.HostDistributedVirtualSwitchManager.DVSCreateSpec[]", "vpxapi.version.version1", F_OPTIONAL), ("dvPortgroupSyncSpec", "vpxapi.DvPortgroupSyncSpec[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.DvsStatusUpdate", "VpxapiDvsStatusUpdate", "vmodl.DynamicData", "vpxapi.version.version7", [("status", "string", "vpxapi.version.version7", F_OPTIONAL), ("statusDetail", "string", "vpxapi.version.version7", F_OPTIONAL)])
CreateDataType("vpxapi.DvsSyncParameter", "VpxapiDvsSyncParameter", "vmodl.DynamicData", "vpxapi.version.version6", [("dvsSyncRate", "int", "vpxapi.version.version6", F_OPTIONAL), ("portgroupSyncBatchLimit", "int", "vpxapi.version.version6", F_OPTIONAL), ("portSyncBatchLimit", "int", "vpxapi.version.version6", F_OPTIONAL)])
CreateDataType("vpxapi.ExtendedQuickStats", "VpxapiExtendedQuickStats", "vmodl.DynamicData", "vpxapi.version.version7", [("metrics", "vim.PerformanceManager.MetricSeries[]", "vpxapi.version.version7", 0)])
CreateDataType("vpxapi.FileType", "VpxapiFileType", "vmodl.DynamicData", "vpxapi.version.version1", None)
CreateDataType("vpxapi.GenerationInfo", "VpxapiGenerationInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("serverId", "int", "vpxapi.version.version1", 0), ("masterGenNo", "int", "vpxapi.version.version1", 0), ("vpxdTime", "vmodl.DateTime", "vpxapi.version.version1", 0), ("vmid", "short[]", "vpxapi.version.version1", F_OPTIONAL), ("hostVmId", "int[]", "vpxapi.version.unstable", F_OPTIONAL), ("vmUpdate", "vpxapi.VmUpdate[]", "vpxapi.version.version1", F_OPTIONAL), ("unregisterVmUrl", "string[]", "vpxapi.version.version1", F_OPTIONAL), ("reloadVmUrl", "string[]", "vpxapi.version.version1", F_OPTIONAL), ("alarm", "vpxapi.AlarmGenerationInfo[]", "vpxapi.version.version1", F_OPTIONAL), ("perfCounter", "vim.PerformanceManager.CounterInfo[]", "vpxapi.version.version1", F_OPTIONAL), ("lastHostBootTime", "vmodl.DateTime", "vpxapi.version.version6", F_OPTIONAL)])
CreateDataType("vpxapi.HeartbeatStats", "VpxapiHeartbeatStats", "vmodl.DynamicData", "vpxapi.version.version1", [("supportDrs", "boolean", "vpxapi.version.version1", 0), ("vmidUpdate", "boolean", "vpxapi.version.version1", 0), ("hostStats", "vpxapi.HostQuickStats", "vpxapi.version.version1", F_OPTIONAL), ("vmStats", "vpxapi.VmQuickStats[]", "vpxapi.version.version1", F_OPTIONAL), ("sampleInterval", "int", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.HostCompatibilityList", "VpxapiHostCompatibilityList", "vmodl.DynamicData", "vpxapi.version.version1", [("host", "vpxapi.NameInfo[]", "vpxapi.version.version1", F_OPTIONAL), ("vm", "vpxapi.NameInfo[]", "vpxapi.version.version1", F_OPTIONAL), ("restartCompatibility", "vpxapi.VmCompatibility[]", "vpxapi.version.version1", F_OPTIONAL), ("vmotionCompatibility", "vpxapi.VmCompatibility[]", "vpxapi.version.version1", F_OPTIONAL), ("portgroup", "vpxapi.NameInfo[]", "vpxapi.version.legacy", F_OPTIONAL), ("datastore", "vpxapi.NameInfo[]", "vpxapi.version.legacy", F_OPTIONAL), ("dvlink", "vpxapi.NameInfo[]", "vpxapi.version.legacy", F_OPTIONAL), ("pnic", "vpxapi.NameInfo[]", "vpxapi.version.legacy", F_OPTIONAL), ("compConfigForVm", "vpxapi.HostCompatibilityList.VmComponentConfig[]", "vpxapi.version.legacy", F_OPTIONAL), ("vmConfig", "vpxapi.HostCompatibilityList.VmComponentConfigInfo[]", "vpxapi.version.legacy", F_OPTIONAL), ("hostConfig", "vpxapi.HostCompatibilityList.HostComponentConfigInfo[]", "vpxapi.version.legacy", F_OPTIONAL)])
CreateDataType("vpxapi.HostCompatibilityList.VmComponentConfig", "VpxapiHostCompatibilityListVmComponentConfig", "vmodl.DynamicData", "vpxapi.version.legacy", [("key", "int", "vpxapi.version.legacy", 0), ("portgroup", "int[]", "vpxapi.version.legacy", F_OPTIONAL), ("datastore", "int[]", "vpxapi.version.legacy", F_OPTIONAL), ("dvsUpLinkGroup", "vpxapi.HostCompatibilityList.UpLinkGroup[]", "vpxapi.version.legacy", F_OPTIONAL)])
CreateDataType("vpxapi.HostCompatibilityList.UpLinkGroup", "VpxapiHostCompatibilityListUpLinkGroup", "vmodl.DynamicData", "vpxapi.version.legacy", [("uplink", "int[]", "vpxapi.version.legacy", F_OPTIONAL)])
CreateDataType("vpxapi.HostCompatibilityList.VmComponentConfigInfo", "VpxapiHostCompatibilityListVmComponentConfigInfo", "vmodl.DynamicData", "vpxapi.version.legacy", [("vmKey", "int", "vpxapi.version.legacy", 0), ("configKey", "int", "vpxapi.version.legacy", 0)])
CreateDataType("vpxapi.HostCompatibilityList.HostComponentConfigInfo", "VpxapiHostCompatibilityListHostComponentConfigInfo", "vmodl.DynamicData", "vpxapi.version.legacy", [("hostKey", "int", "vpxapi.version.legacy", 0), ("hostDvsUplinkMap", "vpxapi.HostCompatibilityList.UplinkToPnicMap[]", "vpxapi.version.legacy", F_OPTIONAL)])
CreateDataType("vpxapi.HostCompatibilityList.UplinkToPnicMap", "VpxapiHostCompatibilityListUplinkToPnicMap", "vmodl.DynamicData", "vpxapi.version.legacy", [("uplinkKey", "int", "vpxapi.version.legacy", 0), ("pnicKey", "int", "vpxapi.version.legacy", 0)])
CreateDataType("vpxapi.HostConfigInfo", "VpxapiHostConfigInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("capability", "vim.host.Capability", "vpxapi.version.version1", F_OPTIONAL), ("internalCapability", "vim.host.InternalCapability", "vpxapi.version.version1", F_OPTIONAL), ("config", "vim.host.ConfigInfo", "vpxapi.version.version1", F_OPTIONAL), ("configInfoPropertiesToUnset", "string[]", "vpxapi.version.version1", F_OPTIONAL), ("defaultVMPath", "string", "vpxapi.version.version1", F_OPTIONAL), ("licenses", "vim.LicenseManager.LicenseInfo[]", "vpxapi.version.version6", F_OPTIONAL)])
CreateDataType("vpxapi.HostDrsStats", "VpxapiHostDrsStats", "vmodl.DynamicData", "vpxapi.version.version1", [("cpuReserved", "int", "vpxapi.version.version1", 0), ("memReserved", "int", "vpxapi.version.version1", 0), ("memoryReserved", "long", "vpxapi.version.version11", F_OPTIONAL), ("samplePeriodSec", "short", "vpxapi.version.version1", 0), ("sysCpuAllocMin", "int", "vpxapi.version.version1", 0), ("sysVmotionCpuAllocMin", "int", "vpxapi.version.version1", 0), ("vimCpuAllocMin", "int", "vpxapi.version.version1", 0), ("sysMemAllocMin", "int", "vpxapi.version.version1", 0), ("sysVmotionMemAllocMin", "int", "vpxapi.version.version1", 0), ("vimMemAllocMin", "int", "vpxapi.version.version1", 0), ("sysMemoryAllocMin", "long", "vpxapi.version.version11", F_OPTIONAL), ("sysVmotionMemoryAllocMin", "long", "vpxapi.version.version11", F_OPTIONAL), ("vimMemoryAllocMin", "long", "vpxapi.version.version11", F_OPTIONAL), ("netTxAvg", "int", "vpxapi.version.version11", F_OPTIONAL), ("netRxAvg", "int", "vpxapi.version.version11", F_OPTIONAL), ("pNicStats", "vpxapi.PhysicalNicStat[]", "vpxapi.version.unstable", F_OPTIONAL), ("pMemDrsManaged", "long", "vpxapi.version.version12", F_OPTIONAL)])
CreateDataType("vpxapi.HostInfo", "VpxapiHostInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("rebootRequired", "boolean", "vpxapi.version.version1", F_OPTIONAL), ("managementServerIp", "string", "vpxapi.version.version1", F_OPTIONAL), ("runtime", "vim.host.RuntimeInfo", "vpxapi.version.version1", F_OPTIONAL), ("hostBootTime", "vmodl.DateTime", "vpxapi.version.version6", F_OPTIONAL), ("config", "vpxapi.HostConfigInfo", "vpxapi.version.version1", F_OPTIONAL), ("scriptBlob", "vmodl.Binary", "vpxapi.version.version10", F_OPTIONAL), ("hostConfigBlob", "vmodl.Binary", "vpxapi.version.version10", F_OPTIONAL), ("descriptionTreeBlob", "vmodl.Binary", "vpxapi.version.unstable", F_OPTIONAL), ("hardwareInfo", "vim.host.HardwareInfo", "vpxapi.version.version1", F_OPTIONAL), ("networkChanged", "boolean", "vpxapi.version.version1", 0), ("network", "string[]", "vpxapi.version.version1", F_OPTIONAL), ("vmConfigOptionDescriptor", "vim.vm.ConfigOptionDescriptor[]", "vpxapi.version.version1", F_OPTIONAL), ("vmConfigOption", "vim.vm.ConfigOption[]", "vpxapi.version.version1", F_OPTIONAL), ("vmConfigTarget", "vim.vm.ConfigTarget", "vpxapi.version.version1", F_OPTIONAL), ("resourceInfo", "vim.host.SystemResourceInfo", "vpxapi.version.version1", F_OPTIONAL), ("configStatus", "vim.ManagedEntity.Status", "vpxapi.version.version1", F_OPTIONAL), ("configIssue", "vim.event.Event[]", "vpxapi.version.version1", F_OPTIONAL), ("licenseInfo", "vpxapi.LicenseManagerInfo", "vpxapi.version.version1", F_OPTIONAL), ("licensableResource", "vim.LicenseManager.LicensableResourceInfo", "vpxapi.version.version7", F_OPTIONAL), ("catalog", "vim.LocalizationManager.MessageCatalog[]", "vpxapi.version.version7", F_OPTIONAL), ("osType", "vpxapi.HostInfo.OperatingSystemType", "vpxapi.version.version1", 0)])
CreateEnumType("vpxapi.HostInfo.OperatingSystemType", "VpxapiHostInfoOperatingSystemType", "vpxapi.version.version1", ["unknown", "win32", "lnx"])
CreateDataType("vpxapi.HostQuickStats", "VpxapiHostQuickStats", "vmodl.DynamicData", "vpxapi.version.version1", [("cpuUsageMHz", "int", "vpxapi.version.version1", 0), ("memUsageMB", "int", "vpxapi.version.version1", 0), ("uptime", "int", "vpxapi.version.version1", 0), ("drsStats", "vpxapi.HostDrsStats", "vpxapi.version.version1", F_OPTIONAL), ("extendedQuickStats", "vpxapi.ExtendedQuickStats", "vpxapi.version.version7", F_OPTIONAL)])
CreateDataType("vpxapi.HttpNfcAddParams", "VpxapiHttpNfcAddParams", "vmodl.DynamicData", "vpxapi.version.version6", [("ticketId", "string", "vpxapi.version.version6", 0), ("timeoutMs", "long", "vpxapi.version.version6", F_OPTIONAL), ("device", "vpxapi.HttpNfcDeviceAddParams[]", "vpxapi.version.version6", 0), ("oneTime", "boolean", "vpxapi.version.version10", F_OPTIONAL), ("readOnly", "boolean", "vpxapi.version.version10", F_OPTIONAL)])
CreateDataType("vpxapi.HttpNfcAddResult", "VpxapiHttpNfcAddResult", "vmodl.DynamicData", "vpxapi.version.version6", [("ticketId", "string", "vpxapi.version.version6", 0), ("baseUrl", "string", "vpxapi.version.version6", 0), ("device", "vpxapi.HttpNfcDeviceAddResult[]", "vpxapi.version.version6", 0)])
CreateDataType("vpxapi.HttpNfcDeviceAddParams", "VpxapiHttpNfcDeviceAddParams", "vmodl.DynamicData", "vpxapi.version.version6", [("deviceId", "string", "vpxapi.version.version6", 0), ("url", "string", "vpxapi.version.version6", 0), ("disk", "boolean", "vpxapi.version.version6", 0)])
CreateDataType("vpxapi.HttpNfcDeviceAddResult", "VpxapiHttpNfcDeviceAddResult", "vmodl.DynamicData", "vpxapi.version.version6", [("deviceId", "string", "vpxapi.version.version6", 0), ("targetId", "string", "vpxapi.version.version6", 0), ("fileSize", "long", "vpxapi.version.version6", F_OPTIONAL)])
CreateDataType("vpxapi.LicenseManagerInfo", "VpxapiLicenseManagerInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("licensedEdition", "string", "vpxapi.version.version1", F_OPTIONAL), ("licenseKey", "string", "vpxapi.version.version1", F_OPTIONAL), ("owner", "string", "vpxapi.version.version1", F_OPTIONAL), ("evaluation", "vim.LicenseManager.EvaluationInfo", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.LicenseSpec", "VpxapiLicenseSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("licenseSource", "vim.LicenseManager.LicenseSource", "vpxapi.version.version1", F_OPTIONAL), ("licenseKey", "string", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.NameInfo", "VpxapiNameInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("key", "int", "vpxapi.version.version1", 0), ("name", "string", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.NameReservation", "VpxapiNameReservation", "vmodl.DynamicData", "vpxapi.version.version1", [("vmxFile", "vpxapi.TempFileInfo", "vpxapi.version.version1", F_OPTIONAL), ("createdDisks", "vpxapi.TempFileInfo[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.NfcCopySpec", "VpxapiNfcCopySpec", "vmodl.DynamicData", "vpxapi.version.version1", [("op", "vpxapi.NfcCopySpec.Operation", "vpxapi.version.version1", 0), ("nfcCnxSpec", "vpxapi.NfcCopySpec.NfcCnxSpec", "vpxapi.version.version1", F_OPTIONAL), ("files", "vpxapi.NfcCopySpec.NfcFileSpec[]", "vpxapi.version.version1", 0)])
CreateEnumType("vpxapi.NfcCopySpec.Operation", "VpxapiNfcCopySpecOperation", "vpxapi.version.version1", ["GET", "PUT"])
CreateEnumType("vpxapi.NfcCopySpec.DiskCopyType", "VpxapiNfcCopySpecDiskCopyType", "vpxapi.version.version1", ["ONLY_DELTA_DISK", "WHOLE_DISK"])
CreateDataType("vpxapi.NfcCopySpec.NfcFileSpec", "VpxapiNfcCopySpecNfcFileSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("type", "vpxapi.FileType", "vpxapi.version.version1", 0), ("localCopy", "boolean", "vpxapi.version.version1", 0), ("localMove", "boolean", "vpxapi.version.version1", 0), ("source", "vpxapi.NfcCopySpec.NfcFileSpec.Location", "vpxapi.version.version1", 0), ("destination", "vpxapi.NfcCopySpec.NfcFileSpec.Location", "vpxapi.version.version1", 0), ("failOnError", "boolean", "vpxapi.version.version1", 0), ("overwriteDestination", "boolean", "vpxapi.version.version1", 0), ("diskCopyType", "vpxapi.NfcCopySpec.DiskCopyType", "vpxapi.version.version1", F_OPTIONAL), ("storageProfile", "string", "vpxapi.version.version9", F_OPTIONAL)])
CreateDataType("vpxapi.NfcCopySpec.NfcFileSpec.Location", "VpxapiNfcCopySpecNfcFileSpecLocation", "vmodl.DynamicData", "vpxapi.version.version1", [("url", "string", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.NfcCopySpec.NfcCnxSpec", "VpxapiNfcCopySpecNfcCnxSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("peerHost", "string", "vpxapi.version.version1", 0), ("username", "string", "vpxapi.version.version1", 0), ("password", "string", "vpxapi.version.version1", 0), ("port", "int", "vpxapi.version.version1", 0), ("useSSL", "boolean", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.PhysicalNicStat", "VpxapiPhysicalNicStat", "vmodl.DynamicData", "vpxapi.version.unstable", [("device", "string", "vpxapi.version.unstable", 0), ("netTxAvg", "int", "vpxapi.version.unstable", 0), ("netRxAvg", "int", "vpxapi.version.unstable", 0)])
CreateDataType("vpxapi.PortRekeySpec", "VpxapiPortRekeySpec", "vmodl.DynamicData", "vpxapi.version.version1", [("rekey", "vpxapi.RekeySpec[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.QuickStatsSpec", "VpxapiQuickStatsSpec", "vmodl.DynamicData", "vpxapi.version.version7", [("vmMetricIds", "vim.PerformanceManager.MetricId[]", "vpxapi.version.version7", F_OPTIONAL), ("hostMetricIds", "vim.PerformanceManager.MetricId[]", "vpxapi.version.version7", F_OPTIONAL), ("vdsMetricIds", "vim.PerformanceManager.MetricId[]", "vpxapi.version.version9", F_OPTIONAL)])
CreateDataType("vpxapi.RawFileType", "VpxapiRawFileType", "vpxapi.FileType", "vpxapi.version.version1", None)
CreateDataType("vpxapi.RekeySpec", "VpxapiRekeySpec", "vmodl.DynamicData", "vpxapi.version.version1", [("dvsUuid", "string", "vpxapi.version.version1", 0), ("rekey", "vim.dvs.HostDistributedVirtualSwitchManager.PortCloneSpec", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.ResourceConfigIssue", "VpxapiResourceConfigIssue", "vmodl.DynamicData", "vpxapi.version.version1", [("entity", "vim.ManagedEntity", "vpxapi.version.version1", 0), ("method", "vmodl.MethodName", "vpxapi.version.version1", 0), ("fault", "vmodl.MethodFault", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.ResourcePoolChangeInfo", "VpxapiResourcePoolChangeInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("fullSync", "boolean", "vpxapi.version.version1", 0), ("rootResourcePool", "vpxapi.ResourcePoolSpec", "vpxapi.version.version1", F_OPTIONAL), ("configIssue", "vpxapi.ResourceConfigIssue[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.ResourcePoolChangeSpec", "VpxapiResourcePoolChangeSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("resPool", "vim.ResourcePool", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.ResourcePoolDeleteSpec", "VpxapiResourcePoolDeleteSpec", "vpxapi.ResourcePoolChangeSpec", "vpxapi.version.version1", None)
CreateDataType("vpxapi.ResourcePoolInsertSpec", "VpxapiResourcePoolInsertSpec", "vpxapi.ResourcePoolChangeSpec", "vpxapi.version.version1", [("parentPool", "vim.ResourcePool", "vpxapi.version.version1", F_OPTIONAL), ("name", "string", "vpxapi.version.version1", 0), ("spec", "vim.ResourceConfigSpec", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.ResourcePoolMoveSpec", "VpxapiResourcePoolMoveSpec", "vpxapi.ResourcePoolChangeSpec", "vpxapi.version.version1", [("parentPool", "vim.ResourcePool", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.ResourcePoolSpec", "VpxapiResourcePoolSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("name", "string", "vpxapi.version.version1", 0), ("spec", "vim.ResourceConfigSpec", "vpxapi.version.version1", 0), ("entity", "vim.ResourcePool", "vpxapi.version.version1", 0), ("childSpec", "vpxapi.ResourcePoolSpec[]", "vpxapi.version.version1", F_OPTIONAL), ("childVm", "vpxapi.VmResourcePoolSpec[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.ResourcePoolUpdateSpec", "VpxapiResourcePoolUpdateSpec", "vpxapi.ResourcePoolChangeSpec", "vpxapi.version.version1", [("name", "string", "vpxapi.version.version1", 0), ("spec", "vim.ResourceConfigSpec", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.ResourceVmMoveSpec", "VpxapiResourceVmMoveSpec", "vpxapi.ResourcePoolMoveSpec", "vpxapi.version.version1", [("vmid", "int", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.ResourceVmUpdateSpec", "VpxapiResourceVmUpdateSpec", "vpxapi.ResourcePoolChangeSpec", "vpxapi.version.version1", [("vmid", "int", "vpxapi.version.version1", 0), ("spec", "vim.ResourceConfigSpec", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.SSLThumbprintsSpec", "VpxapiSSLThumbprintsSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("sslThumbprints", "string[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.ServerIpSpec", "VpxapiServerIpSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("newServerIp", "string", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.SnapshotConfig", "VpxapiSnapshotConfig", "vmodl.DynamicData", "vpxapi.version.version1", [("snapshot", "vim.vm.Snapshot", "vpxapi.version.version1", 0), ("config", "vim.vm.ConfigInfo", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.StatsSpec", "VpxapiStatsSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("metricIds", "vim.PerformanceManager.MetricId[]", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.TaskInfo", "VpxapiTaskInfo", "vim.TaskInfo", "vim.version.version1", [("syncGenNo", "int", "vim.version.version1", 0)])
CreateDataType("vpxapi.TempFileInfo", "VpxapiTempFileInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("type", "vpxapi.FileType", "vpxapi.version.version1", F_OPTIONAL), ("url", "string", "vpxapi.version.version1", 0), ("localPath", "string", "vpxapi.version.version1", 0), ("key", "int", "vpxapi.version.version1", F_OPTIONAL), ("sourceUrl", "string", "vpxapi.version.version1", F_OPTIONAL), ("created", "vmodl.DateTime", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.TextFileType", "VpxapiTextFileType", "vpxapi.FileType", "vpxapi.version.version1", None)
CreateDataType("vpxapi.VirtualDisk", "VpxapiVirtualDisk", "vpxapi.FileType", "vpxapi.version.version1", [("format", "string", "vpxapi.version.version1", 0), ("sparse", "boolean", "vpxapi.version.version1", 0), ("monolithic", "boolean", "vpxapi.version.version1", 0), ("eagerlyScrub", "boolean", "vpxapi.version.version6", 0), ("adapterType", "vpxapi.VirtualDisk.AdapterType", "vpxapi.version.version1", 0), ("skipDigestFiles", "boolean", "vpxapi.version.version1", F_OPTIONAL), ("seSparse", "boolean", "vpxapi.version.version8", F_OPTIONAL), ("storageProfile", "string", "vpxapi.version.version9", F_OPTIONAL)])
CreateEnumType("vpxapi.VirtualDisk.AdapterType", "VpxapiVirtualDiskAdapterType", "vpxapi.version.version1", ["LSILOGIC", "BUSLOGIC", "IDE"])
CreateDataType("vpxapi.VmCompatibility", "VpxapiVmCompatibility", "vmodl.DynamicData", "vpxapi.version.version1", [("vm", "int", "vpxapi.version.version1", 0), ("host", "int[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.VmDrsStats", "VpxapiVmDrsStats", "vmodl.DynamicData", "vpxapi.version.version1", [("granted", "int", "vpxapi.version.version1", 0), ("overhd", "int", "vpxapi.version.version1", 0), ("balloon", "int", "vpxapi.version.version1", 0), ("swap", "int", "vpxapi.version.version1", 0), ("shared", "int", "vpxapi.version.version1", 0), ("zero", "int", "vpxapi.version.version1", 0), ("active", "int", "vpxapi.version.version1", 0), ("overheadMax", "int", "vpxapi.version.version1", 0), ("activeWrite", "int", "vpxapi.version.version1", 0), ("zipped", "int", "vpxapi.version.version1", 0), ("zipSaved", "int", "vpxapi.version.version1", 0), ("sampleCount", "int", "vpxapi.version.version1", 0), ("overheadGrowthRate", "int", "vpxapi.version.version1", 0), ("overheadBaseTime", "long", "vpxapi.version.version1", 0), ("overheadComputeTime", "long", "vpxapi.version.version1", 0), ("actAv1", "short", "vpxapi.version.version1", 0), ("runAv1", "short", "vpxapi.version.version1", 0), ("maxLimited1", "short", "vpxapi.version.version1", 0), ("actAv5", "short", "vpxapi.version.version1", 0), ("actPk5", "short", "vpxapi.version.version1", 0), ("runAv5", "short", "vpxapi.version.version1", 0), ("maxLimited5", "short", "vpxapi.version.version1", 0), ("cpuLatency", "short", "vpxapi.version.legacy", F_OPTIONAL), ("memLatency", "short", "vpxapi.version.legacy", F_OPTIONAL), ("netTxAvg", "int", "vpxapi.version.version11", F_OPTIONAL), ("netRxAvg", "int", "vpxapi.version.version11", F_OPTIONAL), ("extNetTxAvg", "int", "vpxapi.version.version11", F_OPTIONAL), ("extNetRxAvg", "int", "vpxapi.version.version11", F_OPTIONAL)])
CreateDataType("vpxapi.VmFtStats", "VpxapiVmFtStats", "vmodl.DynamicData", "vpxapi.version.version1", [("logBandwidth", "int", "vpxapi.version.version1", 0), ("secondaryExecLatency", "int", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.VmInfo", "VpxapiVmInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("name", "string", "vpxapi.version.version1", 0), ("vmid", "short", "vpxapi.version.version1", 0), ("hostVmId", "int", "vpxapi.version.unstable", F_OPTIONAL), ("config", "vim.vm.ConfigInfo", "vpxapi.version.version1", F_OPTIONAL), ("vmxConfigBlob", "vmodl.Binary", "vpxapi.version.version10", F_OPTIONAL), ("staticMemoryOverhead", "long", "vpxapi.version.version1", F_OPTIONAL), ("summary", "vim.vm.Summary", "vpxapi.version.version1", F_OPTIONAL), ("layout", "vim.vm.FileLayout", "vpxapi.version.version1", F_OPTIONAL), ("layoutEx", "vim.vm.FileLayoutEx", "vpxapi.version.version1", F_OPTIONAL), ("storage", "vim.vm.StorageInfo", "vpxapi.version.version1", F_OPTIONAL), ("storageSummary", "vim.vm.Summary.StorageSummary", "vpxapi.version.version1", F_OPTIONAL), ("capability", "vim.vm.Capability", "vpxapi.version.version1", F_OPTIONAL), ("file", "string", "vpxapi.version.version1", 0), ("entityId", "int", "vpxapi.version.version1", F_OPTIONAL), ("localFile", "string", "vpxapi.version.version1", 0), ("guestInfo", "vim.vm.GuestInfo", "vpxapi.version.version1", F_OPTIONAL), ("runtime", "vim.vm.RuntimeInfo", "vpxapi.version.version1", F_OPTIONAL), ("deviceRuntime", "vpxapi.DeviceRuntime", "vpxapi.version.version6", F_OPTIONAL), ("snapshotChanged", "boolean", "vpxapi.version.version1", 0), ("snapshot", "vim.vm.SnapshotInfo", "vpxapi.version.version1", F_OPTIONAL), ("snapshotConfig", "vpxapi.SnapshotConfig[]", "vpxapi.version.version1", F_OPTIONAL), ("resourcePool", "vim.ResourcePool", "vpxapi.version.version1", F_OPTIONAL), ("guestHeartbeatStatus", "vim.ManagedEntity.Status", "vpxapi.version.version1", F_OPTIONAL), ("connectedDevicesChanged", "boolean", "vpxapi.version.version1", 0), ("connectedDeviceKey", "int[]", "vpxapi.version.version1", F_OPTIONAL), ("configStatus", "vim.ManagedEntity.Status", "vpxapi.version.version1", F_OPTIONAL), ("configIssue", "vim.event.Event[]", "vpxapi.version.version1", F_OPTIONAL), ("updatedEntityState", "vmodl.KeyAnyValue[]", "vpxapi.version.unstable", F_OPTIONAL), ("removedEntityStateKey", "string[]", "vpxapi.version.unstable", F_OPTIONAL), ("entityStateFault", "vmodl.MethodFault", "vpxapi.version.unstable", F_OPTIONAL)])
CreateDataType("vpxapi.VmLayoutSpec", "VpxapiVmLayoutSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("vmLocation", "vpxapi.VmLayoutSpec.Location", "vpxapi.version.version1", F_OPTIONAL), ("multipleConfigs", "boolean", "vpxapi.version.version1", F_OPTIONAL), ("basename", "string", "vpxapi.version.version1", 0), ("baseStorageProfile", "string", "vpxapi.version.version9", F_OPTIONAL), ("disk", "vpxapi.VmLayoutSpec.Location[]", "vpxapi.version.version1", F_OPTIONAL), ("reserveDirOnly", "boolean", "vpxapi.version.version7", F_OPTIONAL)])
CreateDataType("vpxapi.VmLayoutSpec.Location", "VpxapiVmLayoutSpecLocation", "vmodl.DynamicData", "vpxapi.version.version1", [("url", "string", "vpxapi.version.version1", 0), ("key", "int", "vpxapi.version.version1", F_OPTIONAL), ("sourceUrl", "string", "vpxapi.version.version1", F_OPTIONAL), ("urlType", "vpxapi.VmLayoutSpec.Location.UrlType", "vpxapi.version.version1", 0), ("storageProfile", "string", "vpxapi.version.version9", F_OPTIONAL)])
CreateEnumType("vpxapi.VmLayoutSpec.Location.UrlType", "VpxapiVmLayoutSpecLocationUrlType", "vpxapi.version.version1", ["rootDirPath", "exactDirPath", "exactFilePath"])
CreateDataType("vpxapi.VmLocation", "VpxapiVmLocation", "vmodl.DynamicData", "vpxapi.version.version1", [("url", "string", "vpxapi.version.version1", 0), ("file", "string", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.VmPortRekeySpec", "VpxapiVmPortRekeySpec", "vpxapi.PortRekeySpec", "vpxapi.version.version1", [("vmid", "int", "vpxapi.version.version1", 0), ("vmSpec", "vim.vm.ConfigSpec", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.VmQuickStats", "VpxapiVmQuickStats", "vmodl.DynamicData", "vpxapi.version.version1", [("vpxaVmid", "int", "vpxapi.version.version1", F_OPTIONAL), ("vmid", "int", "vpxapi.version.version1", 0), ("cpuUsageMHz", "int", "vpxapi.version.version1", 0), ("guestMemUsageMB", "int", "vpxapi.version.version1", 0), ("hostMemUsageMB", "int", "vpxapi.version.version1", 0), ("compressedMemKB", "long", "vpxapi.version.version1", 0), ("hbStatus", "byte", "vpxapi.version.version1", 0), ("hbValue", "int", "vpxapi.version.version1", F_OPTIONAL), ("uptime", "int", "vpxapi.version.version1", F_OPTIONAL), ("drsStats", "vpxapi.VmDrsStats", "vpxapi.version.version1", F_OPTIONAL), ("ftPrimary", "boolean", "vpxapi.version.version1", 0), ("ftStats", "vpxapi.VmFtStats", "vpxapi.version.version1", F_OPTIONAL), ("extendedQuickStats", "vpxapi.ExtendedQuickStats", "vpxapi.version.version7", F_OPTIONAL)])
CreateDataType("vpxapi.VmResourcePoolSpec", "VpxapiVmResourcePoolSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("childVmId", "int", "vpxapi.version.version1", 0), ("vmConfigResPoolSpec", "vim.ResourceConfigSpec", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.VmUpdate", "VpxapiVmUpdate", "vmodl.DynamicData", "vpxapi.version.version1", [("vmid", "int", "vpxapi.version.version1", 0), ("cfgPath", "string", "vpxapi.version.version1", 0), ("name", "string", "vpxapi.version.version1", F_OPTIONAL), ("uuid", "string", "vpxapi.version.version1", F_OPTIONAL), ("instanceUuid", "string", "vpxapi.version.version1", F_OPTIONAL), ("entityId", "int", "vpxapi.version.version1", F_OPTIONAL), ("macUpdates", "vim.vm.device.VirtualDeviceSpec[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.VpxaAlarmSpec", "VpxapiVpxaAlarmSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("id", "int", "vpxapi.version.version1", 0), ("spec", "vim.alarm.AlarmSpec", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.VpxaCnxInfo", "VpxapiVpxaCnxInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("serverIp", "string", "vpxapi.version.version1", F_OPTIONAL), ("serverPort", "int", "vpxapi.version.version1", F_OPTIONAL), ("hostIp", "string", "vpxapi.version.version1", F_OPTIONAL), ("hostPort", "int", "vpxapi.version.version1", F_OPTIONAL), ("build", "int", "vpxapi.version.version1", 0), ("hostd", "boolean", "vpxapi.version.version1", 0), ("bundleVersion", "int", "vpxapi.version.version1", F_OPTIONAL), ("hostKey", "string", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.VpxaConfigSpec", "VpxapiVpxaConfigSpec", "vmodl.DynamicData", "vpxapi.version.version1", [("masterGenNo", "int", "vpxapi.version.version1", 0), ("vmOverheadGrowthLimit", "int", "vpxapi.version.version1", 0), ("alarmConfigSpec", "vpxapi.AlarmConfigSpec", "vpxapi.version.version1", F_OPTIONAL), ("datastoreSpec", "vpxapi.DatastoreConfigSpec", "vpxapi.version.version1", F_OPTIONAL), ("resPoolSpec", "vpxapi.ResourcePoolSpec", "vpxapi.version.version1", F_OPTIONAL), ("licenseSpec", "vpxapi.LicenseSpec", "vpxapi.version.version1", F_OPTIONAL), ("compResSpec", "vim.ComputeResource.ConfigSpec", "vpxapi.version.version1", F_OPTIONAL), ("serverIpSpec", "vpxapi.ServerIpSpec", "vpxapi.version.version1", F_OPTIONAL), ("sslThumbprintsSpec", "vpxapi.SSLThumbprintsSpec", "vpxapi.version.version1", F_OPTIONAL), ("dvsSpec", "vpxapi.DvsSpec", "vpxapi.version.version1", F_OPTIONAL), ("migrationIdToComplete", "long[]", "vpxapi.version.version1", F_OPTIONAL), ("statsSpec", "vpxapi.StatsSpec", "vpxapi.version.version1", F_OPTIONAL), ("quickStatsSpec", "vpxapi.QuickStatsSpec", "vpxapi.version.version7", F_OPTIONAL)])
CreateDataType("vpxapi.VpxaDvsStatsQuerySpec", "VpxapiVpxaDvsStatsQuerySpec", "vmodl.DynamicData", "vpxapi.version.version9", [("entityUuid", "string", "vpxapi.version.version9", 0), ("intervalId", "int", "vpxapi.version.version9", 0), ("startTime", "vmodl.DateTime", "vpxapi.version.version9", F_OPTIONAL), ("endTime", "vmodl.DateTime", "vpxapi.version.version9", F_OPTIONAL), ("maxSample", "int", "vpxapi.version.version9", F_OPTIONAL), ("metricId", "vim.PerformanceManager.MetricId[]", "vpxapi.version.version9", F_OPTIONAL)])
CreateManagedType("vpxapi.VpxaService", "VpxapiVpxaService", "vmodl.ManagedObject", "vpxapi.version.version1", [("userDirectory", "vim.UserDirectory", "vpxapi.version.version1", 0, None), ("service", "vim.ServiceManager.ServiceInfo[]", "vpxapi.version.version1", F_OPTIONAL, None)], [("setVpxuser", "SetVpxuserVpxa", "vpxapi.version.version1", (("adminUsername", "string", "vpxapi.version.version1", 0, None),("adminPassword", "string", "vpxapi.version.version1", 0, None),("soapPort", "int", "vpxapi.version.version1", 0, None),("vimUsername", "string", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, ["vim.fault.InvalidLogin", ]), ("login", "LoginVpxa", "vpxapi.version.version1", (("userName", "string", "vpxapi.version.version1", 0, None),("password", "string", "vpxapi.version.version1", 0, None),("soapPort", "int", "vpxapi.version.version1", 0, None),("hostIp", "string", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, ["vim.fault.InvalidLogin", ]), ("getDatastore", "GetDatastoreVpxa", "vpxapi.version.version1", (("url", "string", "vpxapi.version.version1", 0, None),), (0, "vpxapi.DatastoreInfo", "vpxapi.DatastoreInfo"), None, ["vim.fault.HostConfigFault", ]), ("replaceEmbeddedFilePaths", "ReplaceEmbeddedFilePathsVpxa_Task", "vpxapi.version.version6", (("url", "string", "vpxapi.version.version6", 0, None),("mountPathMapping", "vim.KeyValue[]", "vpxapi.version.version6", 0, None),), (0, "vim.Task", "vim.UpdateVirtualMachineFilesResult"), None, ["vim.fault.ResourceInUse", "vim.fault.PlatformConfigFault", "vim.fault.TaskInProgress", "vim.fault.InvalidDatastore", ]), ("updateVVolVirtualMachineFiles", "UpdateVVolVirtualMachineFilesVpxa_Task", "vpxapi.version.version11", (("url", "string", "vpxapi.version.version11", 0, None),("failoverPair", "vim.Datastore.VVolContainerFailoverPair[]", "vpxapi.version.version11", F_OPTIONAL, None),), (0, "vim.Task", "vim.VVolVmConfigFileUpdateResult"), None, ["vim.fault.PlatformConfigFault", "vim.fault.TaskInProgress", "vim.fault.InvalidDatastore", ]), ("getChanges", "GetChangesVpxa", "vpxapi.version.version1", (("info", "vpxapi.GenerationInfo", "vpxapi.version.version1", 0, None),), (0, "vpxapi.ChangesInfo", "vpxapi.ChangesInfo"), None, None), ("retrieveChanges", "RetrieveChangesVpxa_Task", "vpxapi.version.version1", (("info", "vpxapi.GenerationInfo", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "vpxapi.ChangesInfo"), None, None), ("setConfig", "SetConfigVpxa", "vpxapi.version.version1", (("spec", "vpxapi.VpxaConfigSpec", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, None), ("setServer", "SetServerVpxa", "vpxapi.version.version1", (("info", "vpxapi.VpxaService.ServerInfo", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, None), ("getVpxaInfo", "GetVpxaInfo", "vpxapi.version.version1", (), (0, "vpxapi.VpxaCnxInfo", "vpxapi.VpxaCnxInfo"), None, None), ("queryVpxaStatus", "QueryVpxaStatus", "vpxapi.version.version1", (), (0, "vpxapi.VpxaStatusInfo", "vpxapi.VpxaStatusInfo"), None, None), ("removeAdminPermission", "RemoveAdminPermissionVpxa", "vpxapi.version.version1", (("vimuser", "string", "vpxapi.version.version1", 0, None),), (0, "vim.AuthorizationManager.Permission[]", "vim.AuthorizationManager.Permission[]"), None, ["vim.fault.DisableAdminNotSupported", ]), ("restoreAdminPermissions", "RestoreAdminPermissionsVpxa", "vpxapi.version.version1", (("permission", "vim.AuthorizationManager.Permission[]", "vpxapi.version.version1", 0, None),("vimuser", "string", "vpxapi.version.version7", F_OPTIONAL, None),), (0, "void", "void"), None, None), ("registerSecondary", "FTManagerRegisterSecondaryVMVpxa_Task", "vpxapi.version.version1", (("primaryVmId", "int", "vpxapi.version.version1", 0, None),("instanceUuid", "string", "vpxapi.version.version1", 0, None),("cfgPath", "string", "vpxapi.version.version1", 0, None),("host", "string", "vpxapi.version.version1", F_OPTIONAL, None),), (0, "vim.Task", "int"), None, ["vim.fault.TaskInProgress", "vim.fault.InvalidState", "vim.fault.NotFound", "vim.fault.VmFaultToleranceIssue", "vim.fault.FileFault", ]), ("unregisterSecondary", "FTManagerUnregisterSecondaryVMVpxa_Task", "vpxapi.version.version1", (("primaryVmId", "int", "vpxapi.version.version1", 0, None),("instanceUuid", "string", "vpxapi.version.version1", F_OPTIONAL, None),), (0, "vim.Task", "int"), None, ["vim.fault.NotFound", "vim.fault.VmFaultToleranceIssue", "vim.fault.TaskInProgress", "vim.fault.InvalidState", "vim.fault.FileFault", ]), ("makePrimary", "FTManagerMakePrimaryVMVpxa_Task", "vpxapi.version.version1", (("primaryVmId", "int", "vpxapi.version.version1", 0, None),("instanceUuid", "string", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "int"), None, ["vim.fault.TaskInProgress", "vim.fault.InvalidState", "vim.fault.NotFound", "vim.fault.VmFaultToleranceIssue", "vim.fault.FileFault", ]), ("terminateFaultTolerantVM", "FTManagerTerminateFaultTolerantVMVpxa_Task", "vpxapi.version.version1", (("primaryVmId", "int", "vpxapi.version.version1", 0, None),("instanceUuid", "string", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "int"), None, ["vim.fault.TaskInProgress", "vim.fault.VmFaultToleranceIssue", "vim.fault.FileFault", "vim.fault.NotFound", "vim.fault.InvalidState", ]), ("disableSecondary", "FTManagerDisableSecondaryVMVpxa_Task", "vpxapi.version.version1", (("primaryVmId", "int", "vpxapi.version.version1", 0, None),("instanceUuid", "string", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "int"), None, ["vim.fault.TaskInProgress", "vim.fault.VmFaultToleranceIssue", "vim.fault.NotFound", "vim.fault.InvalidState", "vim.fault.FileFault", ]), ("enableSecondary", "FTManagerEnableSecondaryVMVpxa_Task", "vpxapi.version.version1", (("primaryVmId", "int", "vpxapi.version.version1", 0, None),("instanceUuid", "string", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "int"), None, ["vim.fault.TaskInProgress", "vim.fault.VmFaultToleranceIssue", "vim.fault.NotFound", "vim.fault.InvalidState", "vim.fault.FileFault", ]), ("unregisterFTVm", "UnregisterFTVmVpxa", "vpxapi.version.version1", (("vmid", "int", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, ["vim.fault.TaskInProgress", "vim.fault.InvalidPowerState", ]), ("reserveName", "ReserveNameVpxa", "vpxapi.version.version1", (("spec", "vpxapi.VmLayoutSpec", "vpxapi.version.version1", 0, None),), (0, "vpxapi.NameReservation", "vpxapi.NameReservation"), None, ["vim.fault.CannotAccessFile", "vim.fault.NoDiskSpace", "vim.fault.FileAlreadyExists", "vim.fault.CannotCreateFile", ]), ("nfcCopy", "NfcCopyVpxa_Task", "vpxapi.version.version1", (("nfcSpec", "vpxapi.NfcCopySpec", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.CannotAccessFile", "vim.fault.Timedout", "vim.fault.NoDiskSpace", ]), ("EnumerateDiskExtents", "EnumerateDiskExtentsVpxa", "vpxapi.version.version1", (("diskUrl", "string", "vpxapi.version.version1", 0, None),), (0, "string[]", "string[]"), None, ["vim.fault.InvalidDiskFormat", "vmodl.fault.SystemError", ]), ("GetDlfLocations", "GetDlfLocationsVpxa", "vpxapi.version.version6", (("dirLocalPath", "string", "vpxapi.version.version6", 0, None),), (0, "string[]", "string[]"), None, ["vim.fault.FileNotFound", ]), ("IsDirectory", "IsDirectoryVpxa", "vpxapi.version.version1", (("url", "string", "vpxapi.version.version1", 0, None),), (0, "boolean", "boolean"), None, ["vim.fault.FileNotFound", ]), ("MakeDirectory", "CreateDirectoryVpxa", "vpxapi.version.version1", (("url", "string", "vpxapi.version.version1", 0, None),("createParentDirectories", "boolean", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, ["vim.fault.FileFault", ]), ("ChangeOwner", "ChangeOwnerVpxa", "vpxapi.version.version1", (("url", "string", "vpxapi.version.version1", 0, None),("owner", "string", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, ["vim.fault.FileFault", ]), ("createVm", "CreateVmVpxa_Task", "vpxapi.version.version1", (("vmSpec", "vim.vm.ConfigSpec", "vpxapi.version.version1", 0, None),("pool", "vim.ResourcePool", "vpxapi.version.version1", F_OPTIONAL, None),("doRegister", "boolean", "vpxapi.version.version1", 0, None),("isTemplate", "boolean", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "string"), None, ["vim.fault.CannotAccessFile", "vim.fault.Timedout", "vim.fault.NoDiskSpace", "vim.fault.VmConfigFault", "vim.fault.FileFault", "vim.fault.OutOfBounds", "vim.fault.DuplicateName", "vim.fault.InvalidName", "vim.fault.InvalidDatastore", "vim.fault.InsufficientResourcesFault", ]), ("applyHostConfig", "ApplyHostConfigVpxa_Task", "vpxapi.version.version1", (("configSpec", "vim.host.ConfigSpec", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, None), ("reparentDisks", "ReparentDisksVpxa_Task", "vpxapi.version.version1", (("reparentSpec", "vim.VirtualDiskManager.ReparentSpec[]", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.FileFault", ]), ("reloadDisks", "ReloadDisksVpxa_Task", "vpxapi.version.version1", (("vmId", "int", "vpxapi.version.version1", 0, None),("target", "string[]", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.InvalidState", "vim.fault.TaskInProgress", ]), ("consolidateDisks", "ConsolidateDisksVpxa_Task", "vpxapi.version.version1", (("vmId", "int", "vpxapi.version.version1", 0, None),("disk", "vim.vm.device.VirtualDisk[]", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.InvalidState", "vim.fault.TaskInProgress", ]), ("PromoteDisks", "PromoteDisksVpxa_Task", "vpxapi.version.unstable", (("vmId", "int", "vpxapi.version.unstable", 0, None),("promoteDisksSpec", "vim.host.LowLevelProvisioningManager.PromoteDisksSpec[]", "vpxapi.version.unstable", F_OPTIONAL, None),), (0, "vim.Task", "void"), None, ["vim.fault.InvalidState", "vim.fault.TaskInProgress", ]), ("ReconfigVm", "ReconfigVmVpxa_Task", "vpxapi.version.version1", (("vmId", "int", "vpxapi.version.version1", 0, None),("config", "vim.vm.ConfigSpec", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.TaskInProgress", "vim.fault.VmConfigFault", "vim.fault.ConcurrentAccess", "vim.fault.FileFault", "vim.fault.InvalidState", "vim.fault.InvalidPowerState", "vim.fault.VmConfigFault", ]), ("Reconfigure", "ReconfigureVmVpxa_Task", "vpxapi.version.version1", (("vmId", "int", "vpxapi.version.version1", 0, None),("spec", "vim.vm.ConfigSpec", "vpxapi.version.version1", 0, None),("handleParentBackings", "boolean", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.TaskInProgress", "vim.fault.VmConfigFault", "vim.fault.ConcurrentAccess", "vim.fault.FileFault", "vim.fault.InvalidName", "vim.fault.DuplicateName", "vim.fault.InvalidState", "vim.fault.InsufficientResourcesFault", "vim.fault.InvalidDatastore", ]), ("powerOnVm", "PowerOnVmVpxa_Task", "vpxapi.version.version1", (("vmId", "int", "vpxapi.version.version1", 0, None),("cfgSpec", "vim.ResourceConfigSpec", "vpxapi.version.version1", F_OPTIONAL, None),("ovfEnv", "string", "vpxapi.version.version1", 0, None),("ovfEnvTransport", "string[]", "vpxapi.version.version1", F_OPTIONAL, None),), (0, "vim.Task", "void"), None, ["vmodl.fault.InvalidArgument", "vim.fault.InvalidPowerState", "vim.fault.TaskInProgress", "vmodl.fault.NotEnoughLicenses", "vim.fault.InvalidState", ]), ("powerOffVm", "PowerOffVmVpxa_Task", "vpxapi.version.version1", (("vmId", "int", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, ["vmodl.fault.InvalidArgument", "vim.fault.InvalidPowerState", "vim.fault.InvalidState", ]), ("upgradeTools", "UpgradeToolsVpxa_Task", "vpxapi.version.version1", (("vmid", "int", "vpxapi.version.version1", 0, None),("installerOptions", "string", "vpxapi.version.version1", F_OPTIONAL, None),), (0, "vim.Task", "void"), None, ["vmodl.fault.InvalidArgument", "vim.fault.InvalidPowerState", "vim.fault.InvalidState", "vim.fault.VmToolsUpgradeFault", ]), ("unregisterVm", "UnregisterVmVpxa", "vpxapi.version.version1", (("unregisterVmid", "int", "vpxapi.version.version1", F_OPTIONAL, None),("files", "vpxapi.TempFileInfo[]", "vpxapi.version.version1", F_OPTIONAL, None),("emptyFilesOnly", "boolean", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, ["vim.fault.TaskInProgress", "vim.fault.InvalidPowerState", ]), ("unregisterVmByCfgPath", "UnregisterVmByCfgPathVpxa", "vpxapi.version.version1", (("path", "string", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, ["vim.fault.TaskInProgress", "vim.fault.InvalidPowerState", ]), ("destroyVm", "DestroyVmVpxa_Task", "vpxapi.version.version1", (("vmConfigInfo", "vim.vm.ConfigInfo", "vpxapi.version.version1", 0, None),("vmid", "int", "vpxapi.version.version1", F_OPTIONAL, None),), (0, "vim.Task", "void"), None, ["vmodl.fault.InvalidArgument", "vim.fault.Timedout", ]), ("registerVm", "RegisterVmVpxa_Task", "vpxapi.version.version1", (("path", "string", "vpxapi.version.version1", 0, None),("name", "string", "vpxapi.version.version1", F_OPTIONAL, None),("pool", "vim.ResourcePool", "vpxapi.version.version1", F_OPTIONAL, None),("clearUuid", "boolean", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "string"), None, ["vim.fault.OutOfBounds", "vim.fault.DuplicateName", "vim.fault.AlreadyExists", "vim.fault.InvalidDatastore", "vim.fault.NotFound", "vim.fault.InvalidName", "vim.fault.VmConfigFault", "vim.fault.InsufficientResourcesFault", "vim.fault.FileFault", "vim.fault.InvalidState", ]), ("markAsTemplate", "MarkAsTemplateVpxa_Task", "vpxapi.version.version1", (("path", "string", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "vpxapi.VmLocation"), None, ["vim.fault.FileFault", ]), ("markAsVirtualMachine", "MarkAsVirtualMachineVpxa_Task", "vpxapi.version.version1", (("path", "string", "vpxapi.version.version1", 0, None),("pool", "vim.ResourcePool", "vpxapi.version.version1", F_OPTIONAL, None),), (0, "vim.Task", "vpxapi.VmLocation"), None, ["vim.fault.FileFault", ]), ("getVmidFromCfgPath", "GetVmidFromCfgPathVpxa", "vpxapi.version.version1", (("cfgPath", "string", "vpxapi.version.version1", 0, None),), (0, "int", "int"), None, None), ("getHostVmid", "GetHostVmidVpxa", "vpxapi.version.version12", (("vmid", "int", "vpxapi.version.version12", 0, None),), (0, "string", "string"), None, None), ("addFilesToHttpTicket", "AddFilesToHttpTicketVpxa", "vpxapi.version.version1", (("ticketId", "string", "vpxapi.version.version1", 0, None),("dsUrls", "vim.KeyValue[]", "vpxapi.version.version1", 0, None),), (0, "vim.KeyValue[]", "vim.KeyValue[]"), None, ["vim.fault.FileFault", ]), ("addHttpNfcTicket", "AddHttpNfcTicketVpxa", "vpxapi.version.version6", (("ticket", "vpxapi.HttpNfcAddParams", "vpxapi.version.version6", 0, None),), (0, "vpxapi.HttpNfcAddResult", "vpxapi.HttpNfcAddResult"), None, ["vim.fault.FileFault", ]), ("renewHttpTicket", "RenewHttpTicketVpxa", "vpxapi.version.version1", (("ticketId", "string", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, None), ("getHttpNfcManifest", "GetHttpNfcManifestVpxa", "vpxapi.version.version6", (("ticketId", "string", "vpxapi.version.version6", 0, None),), (F_OPTIONAL, "vim.HttpNfcLease.ManifestEntry[]", "vim.HttpNfcLease.ManifestEntry[]"), None, ["vim.fault.NotFound", ]), ("setManifestChecksumType", "SetManifestChecksumTypeVpxa", "vpxapi.version.version12", (("ticketId", "string", "vpxapi.version.version12", 0, None),("deviceUrlsToChecksumTypes", "vim.KeyValue[]", "vpxapi.version.version12", F_OPTIONAL, None),), (0, "void", "void"), None, ["vim.fault.NotFound", ]), ("destroyHttpTicket", "DestroyHttpTicketVpxa", "vpxapi.version.version1", (("ticketId", "string", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, None), ("downloadFileHttp", "DownloadFileHttpVpxa_Task", "vpxapi.version.version1", (("httpSrcUrl", "string", "vpxapi.version.version1", 0, None),("dstUrl", "string", "vpxapi.version.version1", 0, None),("diskTransfer", "boolean", "vpxapi.version.version1", 0, None),("httpHeaders", "vim.KeyValue[]", "vpxapi.version.version1", F_OPTIONAL, None),), (0, "vim.Task", "void"), None, None), ("uploadFileHttp", "UploadFileHttpVpxa_Task", "vpxapi.version.version1", (("srcUrl", "string", "vpxapi.version.version1", 0, None),("dstHttpUrl", "string", "vpxapi.version.version1", 0, None),("diskTransfer", "boolean", "vpxapi.version.version1", 0, None),("httpHeaders", "vim.KeyValue[]", "vpxapi.version.version1", F_OPTIONAL, None),), (0, "vim.Task", "long"), None, None), ("queryPerformanceStatistics", "QueryPerformanceStatisticsVpxa", "vpxapi.version.version1", (("entityId", "int[]", "vpxapi.version.version1", F_OPTIONAL, None),("beginTime", "vmodl.DateTime", "vpxapi.version.version1", F_OPTIONAL, None),("endTime", "vmodl.DateTime", "vpxapi.version.version1", F_OPTIONAL, None),("serverTime", "vmodl.DateTime", "vpxapi.version.version1", 0, None),("maxSample", "int", "vpxapi.version.version1", F_OPTIONAL, None),("mid", "vim.PerformanceManager.MetricId[]", "vpxapi.version.version1", F_OPTIONAL, None),("format", "string", "vpxapi.version.version1", 0, None),), (F_OPTIONAL, "vim.PerformanceManager.EntityMetricBase[]", "vim.PerformanceManager.EntityMetricBase[]"), None, None), ("queryBatchPerformanceStatistics", "QueryBatchPerformanceStatisticsVpxa", "vpxapi.version.version7", (("querySpec", "vpxapi.VpxaStatsQuerySpec[]", "vpxapi.version.version7", 0, None),("serverTime", "vmodl.DateTime", "vpxapi.version.version7", 0, None),), (F_OPTIONAL, "vim.PerformanceManager.EntityMetricBase[]", "vim.PerformanceManager.EntityMetricBase[]"), None, None), ("queryDvsBatchPerformanceStatistics", "QueryDvsBatchPerformanceStatisticsVpxa", "vpxapi.version.version9", (("querySpec", "vpxapi.VpxaDvsStatsQuerySpec[]", "vpxapi.version.version9", 0, None),("serverTime", "vmodl.DateTime", "vpxapi.version.version9", 0, None),), (F_OPTIONAL, "vim.PerformanceManager.EntityMetricBase[]", "vim.PerformanceManager.EntityMetricBase[]"), None, None), ("querySummaryStatistics", "QuerySummaryStatisticsVpxa", "vpxapi.version.version1", (("beginTime", "vmodl.DateTime", "vpxapi.version.version1", 0, None),("serverTime", "vmodl.DateTime", "vpxapi.version.version1", 0, None),("interval", "int", "vpxapi.version.version1", 0, None),("mid", "vim.PerformanceManager.MetricId[]", "vpxapi.version.version1", F_OPTIONAL, None),("format", "string", "vpxapi.version.version1", 0, None),), (F_OPTIONAL, "vim.PerformanceManager.EntityMetricBase[]", "vim.PerformanceManager.EntityMetricBase[]"), None, None), ("queryRawDataFeed", "QueryRawDataFeedVpxa", "vpxapi.version.version1", (("entityId", "int[]", "vpxapi.version.version1", F_OPTIONAL, None),("beginTime", "vmodl.DateTime", "vpxapi.version.version1", 0, None),("endTime", "vmodl.DateTime", "vpxapi.version.version1", 0, None),("serverTime", "vmodl.DateTime", "vpxapi.version.version1", 0, None),("interval", "int", "vpxapi.version.version1", 0, None),("maxSample", "int", "vpxapi.version.version1", F_OPTIONAL, None),("mid", "vim.PerformanceManager.MetricId[]", "vpxapi.version.version1", F_OPTIONAL, None),("format", "string", "vpxapi.version.version1", 0, None),), (F_OPTIONAL, "vim.PerformanceManager.EntityMetricBase[]", "vim.PerformanceManager.EntityMetricBase[]"), None, None), ("queryAvailableMetric", "QueryAvailableMetricVpxa", "vpxapi.version.version1", (("entityId", "int", "vpxapi.version.version1", 0, None),), (F_OPTIONAL, "vim.PerformanceManager.MetricId[]", "vim.PerformanceManager.MetricId[]"), None, None), ("updateEntityState", "UpdateEntityStateVpxa_Task", "vpxapi.version.stable", (("storeType", "string", "vpxapi.version.stable", 0, None),("entityId", "string", "vpxapi.version.stable", 0, None),("state", "vmodl.KeyAnyValue", "vpxapi.version.stable", 0, None),("reportChange", "boolean", "vpxapi.version.unstable", F_OPTIONAL, None),), (0, "vim.Task", "void"), None, None), ("retrieveEntityState", "RetrieveEntityStateVpxa", "vpxapi.version.stable", (("storeType", "string", "vpxapi.version.stable", 0, None),("entityId", "string", "vpxapi.version.stable", 0, None),("key", "string", "vpxapi.version.stable", 0, None),), (F_OPTIONAL, "anyType", "anyType"), None, None), ("removeEntityState", "RemoveEntityStateVpxa_Task", "vpxapi.version.stable", (("storeType", "string", "vpxapi.version.stable", 0, None),("entityId", "string", "vpxapi.version.stable", 0, None),("key", "string", "vpxapi.version.stable", 0, None),("reportChange", "boolean", "vpxapi.version.unstable", F_OPTIONAL, None),), (0, "vim.Task", "void"), None, None), ("upgradeToRepository", "UpgradeToRepositoryVpxa_Task", "vpxapi.version.version1", (("repositoryURL", "string", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, None), ("retrieveTaskManager", "RetrieveTaskManagerVpxa", "vpxapi.version.version1", (), (0, "vim.TaskManager", "vim.TaskManager"), None, None), ("createSnapshot", "CreateSnapshotVpxa_Task", "vpxapi.version.version1", (("vmid", "int", "vpxapi.version.version1", 0, None),("name", "string", "vpxapi.version.version1", 0, None),("description", "string", "vpxapi.version.version1", F_OPTIONAL, None),("memory", "boolean", "vpxapi.version.version1", 0, None),("quiesce", "boolean", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "vim.vm.Snapshot"), None, None), ("createSnapshotEx", "CreateSnapshotExVpxa_Task", "vpxapi.version.version11", (("vmid", "int", "vpxapi.version.version11", 0, None),("name", "string", "vpxapi.version.version11", 0, None),("description", "string", "vpxapi.version.version11", F_OPTIONAL, None),("memory", "boolean", "vpxapi.version.version11", 0, None),("quiesceSpec", "vim.vm.GuestQuiesceSpec", "vpxapi.version.version11", F_OPTIONAL, None),), (0, "vim.Task", "vim.vm.Snapshot"), None, None), ("removeAllSnapshots", "RemoveAllSnapshotsVpxa_Task", "vpxapi.version.version1", (("vmid", "int", "vpxapi.version.version1", 0, None),("disksToConsolidate", "string[]", "vpxapi.version.version1", F_OPTIONAL, None),("consolidate", "boolean", "vpxapi.version.version7", F_OPTIONAL, None),), (0, "vim.Task", "void"), None, None), ("revertToSnapshot", "RevertToSnapshotVpxa_Task", "vpxapi.version.version1", (("vmid", "int", "vpxapi.version.version1", 0, None),("snapshot", "vim.vm.Snapshot", "vpxapi.version.version1", 0, None),("state", "vim.VirtualMachine.PowerState", "vpxapi.version.version1", 0, None),("suppressPowerOn", "boolean", "vpxapi.version.version6", F_OPTIONAL, None),("ovfEnv", "string", "vpxapi.version.version6", F_OPTIONAL, None),("ovfEnvTransport", "string[]", "vpxapi.version.version6", F_OPTIONAL, None),), (0, "vim.Task", "void"), None, None), ("removeSnapshot", "RemoveSnapshotVpxa_Task", "vpxapi.version.version1", (("vmid", "int", "vpxapi.version.version1", 0, None),("removeChildren", "boolean", "vpxapi.version.version1", 0, None),("snapshot", "vim.vm.Snapshot", "vpxapi.version.version1", 0, None),("disksToConsolidate", "string[]", "vpxapi.version.version1", F_OPTIONAL, None),("consolidate", "boolean", "vpxapi.version.version7", F_OPTIONAL, None),), (0, "vim.Task", "void"), None, None), ("renameSnapshot", "RenameSnapshotVpxa", "vpxapi.version.version1", (("vmid", "int", "vpxapi.version.version1", 0, None),("name", "string", "vpxapi.version.version1", F_OPTIONAL, None),("desc", "string", "vpxapi.version.version1", F_OPTIONAL, None),("snapshot", "vim.vm.Snapshot", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, None), ("CreateLinkedClone", "CreateLinkedCloneVpxa_Task", "vpxapi.version.version1", (("vmid", "int", "vpxapi.version.version1", 0, None),("snapshot", "vim.vm.Snapshot", "vpxapi.version.version1", 0, None),("vmName", "string", "vpxapi.version.version1", 0, None),("dsPath", "string", "vpxapi.version.version1", 0, None),("overwrite", "boolean", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "string"), None, None), ("isNativeSnapshotCapable", "IsNativeSnapshotCapableVpxa", "vpxapi.version.version7", (("vmid", "int", "vpxapi.version.version7", 0, None),), (0, "boolean", "boolean"), None, None), ("createScreenshot", "CreateScreenshotVpxa_Task", "vpxapi.version.version1", (("vmid", "int", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "string"), None, None), ("searchDatastore", "SearchDatastoreVpxa", "vpxapi.version.version1", (("url", "string", "vpxapi.version.version1", 0, None),("recursive", "boolean", "vpxapi.version.version1", 0, None),("spec", "vim.host.DatastoreBrowser.SearchSpec", "vpxapi.version.version1", F_OPTIONAL, None),), (0, "vim.host.DatastoreBrowser.SearchResults[]", "vim.host.DatastoreBrowser.SearchResults[]"), None, ["vim.fault.FileNotFound", "vmodl.fault.InvalidArgument", "vim.fault.InvalidDatastorePath", ]), ("Delete", "DeleteFileVpxa", "vpxapi.version.version1", (("url", "string", "vpxapi.version.version1", 0, None),("fileType", "string", "vpxapi.version.version1", F_OPTIONAL, None),("recursive", "boolean", "vpxapi.version.version1", F_OPTIONAL, None),), (0, "void", "void"), None, ["vim.fault.CannotDeleteFile", "vim.fault.FileNotFound", "vim.fault.InvalidDiskFormat", ]), ("IsNativeCloneCapable", "IsDatastoreNativeCloneCapableVpxa", "vpxapi.version.version7", (("url", "string", "vpxapi.version.version7", 0, None),), (0, "boolean", "boolean"), None, ["vim.fault.InvalidDatastorePath", ]), ("CleanupLocks", "DatastoreCleanupLocksVpxa_Task", "vpxapi.version.version10", (("url", "string", "vpxapi.version.version10", 0, None),("subDir", "string", "vpxapi.version.version10", F_OPTIONAL, None),), (0, "vim.Task", "void"), None, ["vim.fault.InaccessibleDatastore", "vim.fault.FileFault", "vim.fault.ResourceInUse", ]), ("retrievePermissionInfo", "RetrieveHostPermissionInfo", "vpxapi.version.version6", (), (F_OPTIONAL, "vpxapi.VpxaService.PermissionInfo", "vpxapi.VpxaService.PermissionInfo"), None, None), ("generateLogBundle", "GenerateLogBundleVpxa_Task", "vpxapi.version.version1", (), (0, "vim.Task", "string"), None, None), ("queryLogDescriptions", "QueryLogDescriptionsVpxa", "vpxapi.version.version1", (), (0, "vim.DiagnosticManager.LogDescriptor[]", "vim.DiagnosticManager.LogDescriptor[]"), None, None), ("browseLog", "BrowseLogVpxa", "vpxapi.version.version1", (("key", "string", "vpxapi.version.version1", 0, None),("start", "int", "vpxapi.version.version1", F_OPTIONAL, None),("lines", "int", "vpxapi.version.version1", F_OPTIONAL, None),), (0, "vim.DiagnosticManager.LogHeader", "vim.DiagnosticManager.LogHeader"), None, None), ("queryServiceList", "QueryServiceListVpxa", "vpxapi.version.version1", (("serviceName", "string", "vpxapi.version.version1", F_OPTIONAL, None),("location", "string[]", "vpxapi.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "vim.ServiceManager.ServiceInfo[]", "vim.ServiceManager.ServiceInfo[]"), None, None), ("executeServiceCommand", "ExecuteServiceCommandVpxa", "vpxapi.version.version1", (("hostdMoId", "string", "vpxapi.version.version1", 0, None),("arguments", "string[]", "vpxapi.version.version1", F_OPTIONAL, None),), (F_OPTIONAL, "string[]", "string[]"), None, None), ("nfcMakeTicketByFiles", "NfcMakeTicketByFilesVpxa", "vpxapi.version.version1", (("files", "string[]", "vpxapi.version.version1", 0, None),("mask", "int", "vpxapi.version.version1", 0, None),), (0, "vim.HostServiceTicket", "vim.HostServiceTicket"), None, None), ("nfcMakeTicketByDatastore", "NfcMakeTicketByDatastoreVpxa", "vpxapi.version.version1", (("datastoreURL", "string", "vpxapi.version.version1", 0, None),("mask", "int", "vpxapi.version.version1", 0, None),), (0, "vim.HostServiceTicket", "vim.HostServiceTicket"), None, None), ("nfcMakeSystemTicket", "NfcMakeSystemTicketVpxa", "vpxapi.version.version1", (("mask", "int", "vpxapi.version.version1", 0, None),), (0, "vim.HostServiceTicket", "vim.HostServiceTicket"), None, None), ("clearHostPool", "ClearHostPoolVpxa", "vpxapi.version.version1", (), (0, "void", "void"), None, ["vim.fault.VimFault", ]), ("enterMaintenanceMode", "EnterMaintenanceModeVpxa_Task", "vpxapi.version.version1", (("timeout", "int", "vpxapi.version.version1", 0, None),("maintenanceSpec", "vim.host.MaintenanceSpec", "vpxapi.version.version9", F_OPTIONAL, None),), (0, "vim.Task", "void"), None, None), ("exitMaintenanceMode", "ExitMaintenanceModeVpxa_Task", "vpxapi.version.version1", (("timeout", "int", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, None), ("enterStandbyMode", "EnterStandbyModeVpxa_Task", "vpxapi.version.version1", (("timeout", "int", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, None), ("wakeOnLAN", "WakeOnLANVpxa_Task", "vpxapi.version.version1", (("wakeOnLanInfo", "vpxapi.WakeOnLanInfo[]", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, None), ("AcquireDiskManagerLease", "AcquireDiskManagerLeaseVpxa", "vpxapi.version.version1", (("snapshot", "vim.vm.Snapshot", "vpxapi.version.version1", 0, None),("url", "string", "vpxapi.version.version1", 0, None),), (0, "vim.host.DiskManager.LeaseInfo", "vim.host.DiskManager.LeaseInfo"), None, None), ("AcquireDiskManagerLeaseExt", "AcquireDiskManagerLeaseExtVpxa", "vpxapi.version.version1", (("snapshot", "vim.vm.Snapshot", "vpxapi.version.version1", 0, None),("url", "string", "vpxapi.version.version1", 0, None),("readOnly", "boolean", "vpxapi.version.version1", 0, None),), (0, "vim.host.DiskManager.LeaseInfo", "vim.host.DiskManager.LeaseInfo"), None, None), ("AcquireDiskManagerLeaseForVStorageObject", "AcquireDiskManagerLeaseForVStorageObjectVpxa", "vpxapi.version.version12", (("datastore", "vim.Datastore", "vpxapi.version.version12", 0, None),("url", "string", "vpxapi.version.version12", 0, None),("readOnly", "boolean", "vpxapi.version.version12", 0, None),), (0, "vim.host.DiskManager.LeaseInfo", "vim.host.DiskManager.LeaseInfo"), None, None), ("ReleaseDiskLeases", "ReleaseDiskLeasesVpxa", "vpxapi.version.version1", (("leases", "vim.host.DiskManager.Lease[]", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, None), ("RenewAllDiskLeases", "RenewAllDiskLeasesVpxa", "vpxapi.version.version1", (), (0, "void", "void"), None, None), ("RenewDiskLease", "RenewDiskLeaseVpxa", "vpxapi.version.version1", (("lease", "vim.host.DiskManager.Lease", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, None), ("ReleaseDiskLease", "ReleaseDiskLeaseVpxa", "vpxapi.version.version1", (("lease", "vim.host.DiskManager.Lease", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, None), ("MapDiskRegion", "MapDiskRegionVpxa", "vpxapi.version.version1", (("lease", "vim.host.DiskManager.Lease", "vpxapi.version.version1", 0, None),("mapStart", "long", "vpxapi.version.version1", 0, None),("mapLength", "long", "vpxapi.version.version1", 0, None),), (0, "vim.host.DiskBlockInfo", "vim.host.DiskBlockInfo"), None, None), ("DiskLeaseAllocateBlocks", "DiskLeaseAllocateBlocksVpxa", "vpxapi.version.version1", (("lease", "vim.host.DiskManager.Lease", "vpxapi.version.version1", 0, None),("startBlock", "long", "vpxapi.version.version1", 0, None),("numBlocks", "long", "vpxapi.version.version1", 0, None),("assureValid", "boolean", "vpxapi.version.version1", 0, None),), (0, "vim.host.DiskBlockInfo", "vim.host.DiskBlockInfo"), None, None), ("DiskLeaseClearLazyZero", "DiskLeaseClearLazyZeroVpxa", "vpxapi.version.version1", (("lease", "vim.host.DiskManager.Lease", "vpxapi.version.version1", 0, None),("startBlock", "long", "vpxapi.version.version1", 0, None),("numBlocks", "long", "vpxapi.version.version1", 0, None),("fillZero", "boolean", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, None), ("InflateVirtualDisk", "InflateVirtualDiskVpxa_Task", "vpxapi.version.version1", (("name", "string", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.FileFault", ]), ("CreateVirtualDisk", "CreateVirtualDiskVpxa_Task", "vpxapi.version.version1", (("name", "string", "vpxapi.version.version1", 0, None),("diskSpec", "vim.VirtualDiskManager.VirtualDiskSpec", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.FileFault", "vim.fault.InvalidDatastore", ]), ("QueryVirtualDiskUuid", "QueryVirtualDiskUuidVpxa", "vpxapi.version.version1", (("name", "string", "vpxapi.version.version1", 0, None),), (0, "string", "string"), None, ["vim.fault.FileFault", "vim.fault.InvalidDatastore", ]), ("SetVirtualDiskUuid", "SetVirtualDiskUuidVpxa", "vpxapi.version.version1", (("name", "string", "vpxapi.version.version1", 0, None),("uuid", "string", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, ["vim.fault.FileFault", "vim.fault.InvalidDatastore", ]), ("refreshSpaceUsageForVm", "RefreshSpaceUsageForVm", "vpxapi.version.version1", (("vmId", "int[]", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, None), ("CreateDvs", "CreateDvsVpxa_Task", "vpxapi.version.version6", (("spec", "vim.dvs.HostDistributedVirtualSwitchManager.DVSCreateSpec", "vpxapi.version.version6", 0, None),("rejoining", "boolean", "vpxapi.version.version6", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.DvsFault", "vim.fault.AlreadyExists", "vim.fault.LimitExceeded", "vim.fault.InvalidState", "vim.fault.NotFound", "vim.fault.PlatformConfigFault", "vim.fault.ConcurrentAccess", ]), ("UpdateDvs", "UpdateDvsVpxa_Task", "vpxapi.version.version6", (("spec", "vim.dvs.HostDistributedVirtualSwitchManager.DVSConfigSpec", "vpxapi.version.version6", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.DvsFault", "vim.fault.NotFound", "vim.fault.PlatformConfigFault", ]), ("DeleteDvs", "DeleteDvsVpxa_Task", "vpxapi.version.version6", (("dvsUuid", "string", "vpxapi.version.version6", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.DvsFault", "vim.fault.ResourceInUse", "vim.fault.NotFound", "vim.fault.PlatformConfigFault", ]), ("SynchronizeHostDvs", "SynchronizeHostDvsVpxa", "vpxapi.version.version1", (("vcDvsSpec", "vim.dvs.HostDistributedVirtualSwitchManager.DVSCreateSpec", "vpxapi.version.version1", F_OPTIONAL, None),("resync", "boolean", "vpxapi.version.version1", 0, None),), (0, "void", "void"), None, ["vim.fault.DvsFault", "vim.fault.InvalidState", "vim.fault.NotFound", "vim.fault.PlatformConfigFault", "vim.fault.ConcurrentAccess", ]), ("ForceADvsSync", "ForceADvsSyncVpxa", "vpxapi.version.version1", (), (0, "void", "void"), None, None), ("UpdateDVPortgroups", "UpdateDVPortgroupsVpxa_Task", "vpxapi.version.version1", (("switchUuid", "string", "vpxapi.version.version1", 0, None),("configSpec", "vim.dvs.HostDistributedVirtualSwitchManager.DVPortgroupConfigSpec[]", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.DvsFault", "vim.fault.NotFound", "vim.fault.PlatformConfigFault", ]), ("UpdatePorts", "UpdatePortsVpxa_Task", "vpxapi.version.version1", (("switchUuid", "string", "vpxapi.version.version1", 0, None),("portData", "vim.dvs.HostDistributedVirtualSwitchManager.PortData[]", "vpxapi.version.version1", 0, None),), (0, "vim.Task", "void"), None, ["vim.fault.LimitExceeded", "vim.fault.NotFound", "vim.fault.PlatformConfigFault", ]), ("fetchQuickStats", "FetchQuickStatsVpxa", "vpxapi.version.version6", (), (F_OPTIONAL, "vpxapi.HeartbeatStats", "vpxapi.HeartbeatStats"), None, None), ("GetVmScreenshot", "GetVmScreenshotVpxa", "vpxapi.version.version7", (("vmid", "int", "vpxapi.version.version7", 0, None),("snapshot", "vim.vm.Snapshot", "vpxapi.version.version7", F_OPTIONAL, None),("options", "string", "vpxapi.version.version7", 0, None),), (0, "string", "string"), None, ["vim.fault.NotFound", "vim.fault.HttpFault", ]), ("ConfigureDatastoreIORMOnHost", "ConfigureDatastoreIORMVpxa", "vpxapi.version.version6", (("datastoreUrl", "string", "vpxapi.version.version6", 0, None),("spec", "vim.StorageResourceManager.IORMConfigSpec", "vpxapi.version.version6", 0, None),), (0, "void", "void"), None, None), ("QueryIORMConfigOption", "QueryIORMConfigOptionVpxa", "vpxapi.version.version6", (), (0, "vim.StorageResourceManager.IORMConfigOption", "vim.StorageResourceManager.IORMConfigOption"), None, None)])
CreateDataType("vpxapi.VpxaService.ServerInfo", "VpxapiVpxaServiceServerInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("serverIp", "string", "vpxapi.version.version1", 0), ("hostIp", "string", "vpxapi.version.version1", 0), ("serverPort", "int", "vpxapi.version.version1", 0), ("serverId", "int", "vpxapi.version.version1", 0), ("message", "string", "vpxapi.version.version1", 0), ("hostKey", "string", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.VpxaService.PermissionInfo", "VpxapiVpxaServicePermissionInfo", "vmodl.DynamicData", "vpxapi.version.version6", [("permission", "vim.AuthorizationManager.Permission[]", "vpxapi.version.version6", F_OPTIONAL), ("role", "vim.AuthorizationManager.Role[]", "vpxapi.version.version6", F_OPTIONAL)])
CreateDataType("vpxapi.VpxaStatsQuerySpec", "VpxapiVpxaStatsQuerySpec", "vmodl.DynamicData", "vpxapi.version.version7", [("entityId", "int", "vpxapi.version.version7", 0), ("intervalId", "int", "vpxapi.version.version7", 0), ("startTime", "vmodl.DateTime", "vpxapi.version.version7", F_OPTIONAL), ("endTime", "vmodl.DateTime", "vpxapi.version.version7", F_OPTIONAL), ("maxSample", "int", "vpxapi.version.version7", F_OPTIONAL), ("metricId", "vim.PerformanceManager.MetricId[]", "vpxapi.version.version7", F_OPTIONAL)])
CreateDataType("vpxapi.VpxaStatusInfo", "VpxapiVpxaStatusInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("uptime", "long", "vpxapi.version.version1", 0), ("connected", "boolean", "vpxapi.version.version1", 0), ("lastHeartbeat", "vpxapi.VpxaStatusInfo.HeartbeatInfo", "vpxapi.version.version1", F_OPTIONAL), ("changeRate", "int", "vpxapi.version.version1", F_OPTIONAL), ("hostsyncLatency", "long", "vpxapi.version.version1", F_OPTIONAL), ("maxHostsyncLatency", "long", "vpxapi.version.version1", F_OPTIONAL), ("hostsyncFrequency", "long", "vpxapi.version.version1", F_OPTIONAL), ("lastHostsyncTime", "vmodl.DateTime", "vpxapi.version.version1", F_OPTIONAL), ("configStatus", "vim.ManagedEntity.Status", "vpxapi.version.version1", 0), ("configIssue", "vim.event.Event[]", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.VpxaStatusInfo.HeartbeatInfo", "VpxapiVpxaStatusInfoHeartbeatInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("serverId", "long", "vpxapi.version.version1", 0), ("changeGenNo", "long", "vpxapi.version.version1", 0), ("specGenNo", "long", "vpxapi.version.version1", 0), ("bundleVersion", "int", "vpxapi.version.version1", 0), ("build", "int", "vpxapi.version.version1", 0), ("count", "int", "vpxapi.version.version1", 0), ("time", "vmodl.DateTime", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.WakeOnLanInfo", "VpxapiWakeOnLanInfo", "vmodl.DynamicData", "vpxapi.version.version1", [("macAddr", "string", "vpxapi.version.version1", 0), ("ipAddr", "string", "vpxapi.version.version1", 0), ("password", "int[]", "vpxapi.version.version1", F_OPTIONAL), ("port", "int", "vpxapi.version.version1", F_OPTIONAL)])
CreateDataType("vpxapi.fault.NotAuthenticated", "VpxapiFaultNotAuthenticated", "vmodl.fault.SecurityError", "vpxapi.version.version1", None)
CreateDataType("vpxapi.DirectoryType", "VpxapiDirectoryType", "vpxapi.FileType", "vpxapi.version.version1", None)
CreateDataType("vpxapi.HostPortRekeySpec", "VpxapiHostPortRekeySpec", "vpxapi.PortRekeySpec", "vpxapi.version.version1", [("netSpec", "vim.host.NetworkConfig", "vpxapi.version.version1", 0)])
CreateDataType("vpxapi.VirtualDeltaDisk", "VpxapiVirtualDeltaDisk", "vpxapi.VirtualDisk", "vpxapi.version.version1", None)
